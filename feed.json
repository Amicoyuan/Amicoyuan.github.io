{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan",
    "description": "",
    "home_page_url": "https://xingyuanjie.top",
    "items": [
        {
            "id": "https://xingyuanjie.top/2023/03/06/ML001/",
            "url": "https://xingyuanjie.top/2023/03/06/ML001/",
            "title": "Á∫øÊÄßÂõûÂΩíÊ®°Âûã",
            "date_published": "2023-03-06T11:00:34.000Z",
            "content_html": "<h2 id=\"Á∫øÊÄßÂõûÂΩíÊ®°Âûã\"><a href=\"#Á∫øÊÄßÂõûÂΩíÊ®°Âûã\" class=\"headerlink\" title=\"Á∫øÊÄßÂõûÂΩíÊ®°Âûã\"></a>Á∫øÊÄßÂõûÂΩíÊ®°Âûã</h2><h3 id=\"MOdel-Representation\"><a href=\"#MOdel-Representation\" class=\"headerlink\" title=\"MOdel Representation\"></a>MOdel Representation</h3><p><img src=\"/2023/03/06/ML001/image-20230306195956356.png\" alt=\"image-20230306195956356\"></p>\n<h3 id=\"Goals\"><a href=\"#Goals\" class=\"headerlink\" title=\"Goals\"></a>Goals</h3><p>In this lab you will:</p>\n<ul>\n<li>learn to implement the model f_{w,b} for linear regression with one variable</li>\n</ul>\n<h3 id=\"Notation\"><a href=\"#Notation\" class=\"headerlink\" title=\"Notation\"></a>Notation</h3><p>Here is a summary of some of the notation you will encounter.</p>\n<p><img src=\"/2023/03/06/ML001/image-20230306200250050.png\" alt=\"image-20230306200250050\"></p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><p>In this lab you will make use of:</p>\n<ul>\n<li><p>NumPy,a popular library for scientific computing</p>\n</li>\n<li><p>Matplotlib,a popular library for plotting data</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np<br><span class=\"hljs-keyword\">import</span> matplotlib.pyplot <span class=\"hljs-keyword\">as</span> plt<br>plt.style.use(<span class=\"hljs-string\">&#x27;./deeplearning.mpstyle&#x27;</span>)<br></code></pre></div></td></tr></table></figure></li>\n</ul>\n<h3 id=\"Problem-Statement\"><a href=\"#Problem-Statement\" class=\"headerlink\" title=\"Problem Statement\"></a>Problem Statement</h3><p><img src=\"/2023/03/06/ML001/image-20230306200642937.png\" alt=\"image-20230306200642937\"></p>\n<p>As in the lecture,you will use the motivating example of housing price prediction. This lab will use a simple data set with only two data points - a house with 1000 square feet(sqft) sold for $300,000 and a house with 2000 square feet sold for $500,000.These two points will constitute our data or training set. In this lab, the units of size are 1000 sqft and the units of price are 1000s of dollars.</p>\n<table>\n<thead>\n<tr>\n<th>Size (1000 sqft)</th>\n<th>Price (1000s of dollars)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1.0</td>\n<td>300</td>\n</tr>\n<tr>\n<td>2.0</td>\n<td>500</td>\n</tr>\n</tbody></table>\n<p>You would like to fit a linear regression model(shown above as the blue straight line)through these two points, so you can then predict price for other houses - say, a house with 1200 sqft.</p>\n<p>Please run the following code cell to create your x_train and y_train variables. The data is stored in one-dimensional NumPy arrays.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\">#x_train is the input variable (size in 1000 square feet)</span><br><span class=\"hljs-comment\">#y_train is the target (price in 1000s of dollars)</span><br>x_train = np.array([<span class=\"hljs-number\">1.0</span>,<span class=\"hljs-number\">2.0</span>])<br>y_train = np.array([<span class=\"hljs-number\">300.0</span>,<span class=\"hljs-number\">500.0</span>])<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;x_train = <span class=\"hljs-subst\">&#123;x_train&#125;</span>&quot;</span>)<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;y_train = <span class=\"hljs-subst\">&#123;y_train&#125;</span>&quot;</span>)<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"Number-of-training-examples-m\"><a href=\"#Number-of-training-examples-m\" class=\"headerlink\" title=\"Number of training examples m\"></a>Number of training examples m</h3><p>you will use m to denote the number of training examples. Numpy arrays have a .shape parameter. x_train.shape return a python tuple with an entry for each dimension. x_train.shape[0] is the length of the array and number of examples as shown below.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># m is the number of training examples</span><br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;x_train.shape: <span class=\"hljs-subst\">&#123;x_train.shape&#125;</span>&quot;</span>)<br>m = x_train.shape[<span class=\"hljs-number\">0</span>]<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Number of training example is: <span class=\"hljs-subst\">&#123;m&#125;</span>&quot;</span>)<br></code></pre></div></td></tr></table></figure>\n\n<p>x.train.shape: (2,)</p>\n<p>Number of training examples is: 2</p>\n<p><strong>One can also use the Python len() function as shown below.</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># m is the number of training examples</span><br>m = <span class=\"hljs-built_in\">len</span>(x_train)<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Number of training example is: <span class=\"hljs-subst\">&#123;m&#125;</span>&quot;</span>)<br></code></pre></div></td></tr></table></figure>\n\n<p>Number of training examples  is:\t2</p>\n<h3 id=\"Training-example-x-i-y-i\"><a href=\"#Training-example-x-i-y-i\" class=\"headerlink\" title=\"Training example x_i, y_i\"></a>Training example x_i, y_i</h3><p>You will use (x(ùëñ), y(ùëñ)) to denote the ùëñ(th) training example. Since Python is zero indexed, (x(0), y(0) is (1.0, 300.0) and (x(1), y(1) is (2.0, 500.0).</p>\n<p>To access a value in a Numpy array, one indexes the array with the desired offset. For example the syntax to access location zero of x_train is x_train[0]. Run the next code block below to get the i(th) training example.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\">i = <span class=\"hljs-number\">0</span> <span class=\"hljs-comment\">#Change this to 1 to see (x^1,y^1)</span><br><br>x_i = x_train[i]<br>y_i = y_train[i]<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;(x^(<span class=\"hljs-subst\">&#123;i&#125;</span>), y^(<span class=\"hljs-subst\">&#123;i&#125;</span>)) = (<span class=\"hljs-subst\">&#123;x_i&#125;</span>, <span class=\"hljs-subst\">&#123;y_i&#125;</span>)&quot;</span>)<br></code></pre></div></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\">(x^(<span class=\"hljs-number\">0</span>), y^(<span class=\"hljs-number\">0</span>)) = (<span class=\"hljs-number\">1.0</span>, <span class=\"hljs-number\">300.0</span>)<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"Plotting-the-data\"><a href=\"#Plotting-the-data\" class=\"headerlink\" title=\"Plotting the data\"></a>Plotting the data</h3><p>You can plot these two points using the scatter() function is the matplotlib library,as shown in the cell below.</p>\n<ul>\n<li>The function arguments marker and c show the points as red crosses(the default is blue dots.)</li>\n</ul>\n<p>You can use other functions in the matplotlib library to set title and labels to display.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\">#Plot the data points</span><br>plt.scatter(x_train, y_train, marker=<span class=\"hljs-string\">&#x27;x&#x27;</span> c=<span class=\"hljs-string\">&#x27;r&#x27;</span>)<br><span class=\"hljs-comment\">#Set the title</span><br>plt.title(<span class=\"hljs-string\">&quot;Housing Prices&quot;</span>)<br><span class=\"hljs-comment\">#Set the y-axis label</span><br>plt.ylabel(<span class=\"hljs-string\">&#x27;Price (in 1000s of dollars)&#x27;</span>)<br><span class=\"hljs-comment\">#Set the x-axis lbel</span><br>plt.xlabel(<span class=\"hljs-string\">&#x27;Size (1000 sqft)&#x27;</span>)<br>plt.show()<br></code></pre></div></td></tr></table></figure>\n\n<p><img src=\"/2023/03/06/ML001/image-20230306204822102.png\" alt=\"image-20230306204822102\"></p>\n<h3 id=\"Model-function\"><a href=\"#Model-function\" class=\"headerlink\" title=\"Model function\"></a>Model function</h3><p><img src=\"/2023/03/06/ML001/image-20230306204918585.png\" alt=\"image-20230306204918585\"></p>\n<p>As described in lecture, the model function for linear regression (which is a function that maps from x to y)is represented as</p>\n<p><img src=\"/2023/03/06/ML001/image-20230306205107527.png\" alt=\"image-20230306205107527\"></p>\n<p>The formula above is how you can represent straight lines - different values of w and b give you different straight lines on the plot.</p>\n<p>Let‚Äôs try to get a better intuition for this through the code blocks below. Let‚Äôs start with w &#x3D; 100 and b &#x3D;100.</p>\n<p>Note: You can come back to this cell to adjust the model‚Äôs w and b parameters.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\">w = <span class=\"hljs-number\">100</span><br>b = <span class=\"hljs-number\">100</span><br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;w: <span class=\"hljs-subst\">&#123;w&#125;</span>&quot;</span>)<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;b: <span class=\"hljs-subst\">&#123;b&#125;</span>&quot;</span>)<br></code></pre></div></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\">w:\t<span class=\"hljs-number\">100</span><br>b:\t<span class=\"hljs-number\">100</span><br></code></pre></div></td></tr></table></figure>\n\n<p>Now,let‚Äôs compute the value of f_{w,b}(x^i) for your two data points. You can explicitly write this out for each data poins as -</p>\n<p>for x(0),f_wb &#x3D; w * x[0] + b</p>\n<p>for x(1),f_wb &#x3D; w * x[1] + b</p>\n<p>For a large number of data points, this can get unwieldy and repetitive. So instead, you can calculate the function output in a for loop as shown in the compute_model_output function below.</p>\n<p>Note:The argument description (ndarray (m,)) describes a Numpy n-dimensional array of shape (m,). (scalar) describes an argument without dimensions, just a magnitude.</p>\n<p>Note: np.zero(n) will return a one-dimensional numpy array with n entries</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">compute_model_output</span>(<span class=\"hljs-params\">x, w, b</span>):</span><br>    <span class=\"hljs-string\">&quot;&quot;&quot;</span><br><span class=\"hljs-string\">    Computes the prediction of a linear model</span><br><span class=\"hljs-string\">    Args:</span><br><span class=\"hljs-string\">    \tx (ndarray (m,)):Data, m examples</span><br><span class=\"hljs-string\">    \tw,b (scalar)\t:model parameters</span><br><span class=\"hljs-string\">    Returns</span><br><span class=\"hljs-string\">    \ty (ndarray (m,)):target values</span><br><span class=\"hljs-string\">    &quot;&quot;&quot;</span><br>    <br>    m = x.shape[<span class=\"hljs-number\">0</span>]<br>    f_wb = np.zeros(m)<br>    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(m)<br>    \tf_wb[i] = w * x[i] + b<br>    <br>    <span class=\"hljs-keyword\">return</span> f_wb<br></code></pre></div></td></tr></table></figure>\n\n<p>Now let‚Äôs call the compute_model_output function and plot the output.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs python\"><br></code></pre></div></td></tr></table></figure>\n\n\n\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p><a href=\"https://www.bilibili.com/video/BV1Pa411X76s?p=5&amp;vd_source=3ae32e36058f58c5b85935fca9b77797\">https://www.bilibili.com/video/BV1Pa411X76s?p=5&amp;vd_source=3ae32e36058f58c5b85935fca9b77797</a></p>\n<p><a href=\"https://github.com/kaieye/2022-Machine-Learning-Specialization\">kaieye&#x2F;2022-Machine-Learning-Specialization (github.com)</a></p>\n",
            "tags": [
                "Tensorflow",
                "Machine Learning"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/03/06/cuda011/",
            "url": "https://xingyuanjie.top/2023/03/06/cuda011/",
            "title": "CUDAÁºñËØë‰∏éÊâßË°å",
            "date_published": "2023-03-06T08:18:09.000Z",
            "content_html": "<h2 id=\"CUDAÁºñËØë‰∏éÊâßË°å\"><a href=\"#CUDAÁºñËØë‰∏éÊâßË°å\" class=\"headerlink\" title=\"CUDAÁºñËØë‰∏éÊâßË°å\"></a>CUDAÁºñËØë‰∏éÊâßË°å</h2><p>Áé∞Âú®ÊääÊâÄÊúâÁöÑ‰ª£Á†ÅÊîæÂú®‰∏Ä‰∏™Êñá‰ª∂Âêç‰∏∫sumArraysOnGPU-small-case.cuÁöÑÊñá‰ª∂‰∏≠ÔºåÂ¶Ç‰ª£Á†ÅÊ∏ÖÂçï2-4ÊâÄÁ§∫„ÄÇ</p>\n<p><strong>‰ª£Á†ÅÊ∏ÖÂçï2-4\t\tÂü∫‰∫éGPUÁöÑÂêëÈáèÂä†Ê≥ïÔºàsumArraysOnGPU-small-case.cuÔºâ</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;cuda_runtime.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">#define CHECK(call)</span><br><span class=\"hljs-comment\">&#123;</span><br><span class=\"hljs-comment\">    const cudaError_t error = call;</span><br><span class=\"hljs-comment\">    if(error != cudaSuccess)</span><br><span class=\"hljs-comment\">    &#123;</span><br><span class=\"hljs-comment\">        printf(&quot;Error:%s:%d, &quot;, __FILE__, __LINE__);</span><br><span class=\"hljs-comment\">        printf(&quot;code:%d, reason: %s\\n&quot;, error, cudaGetErrorString(error));</span><br><span class=\"hljs-comment\">    &#125;</span><br><span class=\"hljs-comment\">&#125;</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">checkResult</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">float</span> *hostRef, <span class=\"hljs-keyword\">float</span> *gpuRef, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">int</span> N)</span></span>&#123;<br>    <span class=\"hljs-keyword\">double</span> epsilon = <span class=\"hljs-number\">1.0E-8</span>;<br>    <span class=\"hljs-keyword\">int</span> match = <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span> ;i &lt; N; i++)&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">abs</span>(hostRef[i] - gpuRef[i]) &gt; epsilon)&#123;<br>            match = <span class=\"hljs-number\">0</span>;<br>            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Arrays do not match!\\n&quot;</span>);<br>            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;host %5.2f gpu %5.2f at current %d\\n&quot;</span>,hostRef[i],gpuRef[i],i);<br>            <span class=\"hljs-keyword\">break</span>;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">if</span>(match) <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Arrays match.\\n\\n&quot;</span>);<br>    <span class=\"hljs-keyword\">return</span>;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">initialData</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">float</span> *ip,<span class=\"hljs-keyword\">int</span> size)</span></span>&#123;<br>    <span class=\"hljs-comment\">//generate different seed for random number</span><br>    <span class=\"hljs-keyword\">time_t</span> t;<br>    <span class=\"hljs-built_in\">srand</span>((<span class=\"hljs-keyword\">unsigned</span>) <span class=\"hljs-built_in\">time</span>(&amp;t));<br>    <br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i&lt;size;i++)&#123;<br>        ip[i] = (<span class=\"hljs-keyword\">float</span>)(<span class=\"hljs-built_in\">rand</span>() &amp; <span class=\"hljs-number\">0xFF</span>) /<span class=\"hljs-number\">10.0f</span>;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">sumArraysOnHost</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">float</span> *A,<span class=\"hljs-keyword\">float</span> *B, <span class=\"hljs-keyword\">float</span> *C)</span></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> i = threadIdx.x;<br>    C[i] = A[i] + B[i];<br>&#125;<br><br><span class=\"hljs-function\">__gloal__ <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">sumArraysOnGPU</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">float</span> *A, <span class=\"hljs-keyword\">float</span> *B, <span class=\"hljs-keyword\">float</span> *C)</span></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> i = threadIdx.x;<br>    C[i] = A[i] + B[i];<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc,<span class=\"hljs-keyword\">char</span> **argv)</span></span>&#123;<br>    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s Starting...\\n&quot;</span>,argv[<span class=\"hljs-number\">0</span>]);<br>    <br>    <span class=\"hljs-comment\">//set up device</span><br>    <span class=\"hljs-keyword\">int</span> dev = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-built_in\">cudaSetDevice</span>(dev);<br>    <br>    <span class=\"hljs-comment\">//set up data size of vectors</span><br>    <span class=\"hljs-keyword\">int</span> nElem = <span class=\"hljs-number\">32</span>;<br>    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Vector size %d\\n&quot;</span>,nElem);<br>    <br>    <span class=\"hljs-comment\">//malloc host memory</span><br>    <span class=\"hljs-keyword\">size_t</span> nBytes = nElem * <span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(<span class=\"hljs-keyword\">float</span>);<br>    <br>    <span class=\"hljs-keyword\">float</span> *h_A, *h_B, *hostRef, *gpuRef;<br>    h_A = (<span class=\"hljs-keyword\">float</span>*)<span class=\"hljs-built_in\">malloc</span>(nBytes);<br>    h_B = (<span class=\"hljs-keyword\">float</span>*)<span class=\"hljs-built_in\">malloc</span>(nBytes);<br>    hostRef = (<span class=\"hljs-keyword\">float</span>*)<span class=\"hljs-built_in\">malloc</span>(nBytes);<br>    gpuRef = (<span class=\"hljs-keyword\">float</span>*)<span class=\"hljs-built_in\">malloc</span>(nBytes);<br>    <br>    <span class=\"hljs-comment\">//initialize data at host side</span><br>    <span class=\"hljs-built_in\">initialData</span>(h_A, nElem);<br>    <span class=\"hljs-built_in\">initialData</span>(h_B, nElem);<br>    <br>    <span class=\"hljs-built_in\">memset</span>(hostRef, <span class=\"hljs-number\">0</span> ,nBytes);<br>    <span class=\"hljs-built_in\">memset</span>(gpuRef, <span class=\"hljs-number\">0</span> ,nBytes);<br>    <br>    <span class=\"hljs-comment\">//malloc device global memory</span><br>    <span class=\"hljs-keyword\">float</span> *d_A, *d_B, *d_C;<br>    <span class=\"hljs-built_in\">cudaMalloc</span>((<span class=\"hljs-keyword\">float</span>**)&amp;d_A, nBytes);<br>    <span class=\"hljs-built_in\">cudaMalloc</span>((<span class=\"hljs-keyword\">float</span>**)&amp;d_B, nBytes);<br>    <span class=\"hljs-built_in\">cudaMalloc</span>((<span class=\"hljs-keyword\">float</span>**)&amp;d_C, nBytes);<br>    <br>    <span class=\"hljs-comment\">//transfer data from host to device</span><br>    <span class=\"hljs-built_in\">cudaMemcpy</span>(d_A, h_A, nBytes, cudaMemcpyHostTodevice);<br>    <span class=\"hljs-built_in\">cudaMemcpy</span>(d_B, h_B, nBytes, cudaMemcpyHostTodevice);<br>    <br>    <span class=\"hljs-comment\">//invoke kernel at host side</span><br>    <span class=\"hljs-function\">dim3 <span class=\"hljs-title\">block</span><span class=\"hljs-params\">(nElem)</span></span>;<br>    <span class=\"hljs-function\">dim3 <span class=\"hljs-title\">grid</span><span class=\"hljs-params\">(nElem/block.x)</span></span>;<br>    <br>    sumArraysOnGPU&lt;&lt;&lt;grid,block&gt;&gt;&gt;(d_A, d_B, d_C);<br>    <span class=\"hljs-built_in\">pritnf</span>(<span class=\"hljs-string\">&quot;Execution configuration &lt;&lt;&lt;%d, %d&gt;&gt;&gt;\\n&quot;</span>,grid.x,block.x);<br>    <br>    <span class=\"hljs-comment\">//copy kernel result back to host side</span><br>    <span class=\"hljs-built_in\">cudaMemcpy</span>(gpuRef, d_C, nBytes, cudaMemcpyDeviceToHost);<br>    <br>    <span class=\"hljs-comment\">//add vector at host side for result checks</span><br>    <span class=\"hljs-built_in\">sumArraysOnHost</span>(h_A, h_B, hostRef, nElem);<br>    <br>    <span class=\"hljs-comment\">//check device results</span><br>    <span class=\"hljs-built_in\">checkResult</span>(hostRef, gpuRef, nElem);<br>    <br>    <span class=\"hljs-comment\">//free device global memory</span><br>    <span class=\"hljs-built_in\">cudaFree</span>(d_A);<br>    <span class=\"hljs-built_in\">cudaFree</span>(d_B);<br>    <span class=\"hljs-built_in\">cudaFree</span>(d_C);<br>    <br>    <span class=\"hljs-comment\">//free host memory</span><br>    <span class=\"hljs-built_in\">free</span>(h_A);<br>    <span class=\"hljs-built_in\">free</span>(h_B);<br>    <span class=\"hljs-built_in\">free</span>(hostRef);<br>    <span class=\"hljs-built_in\">free</span>(gpuRef);<br>    <br>    <span class=\"hljs-keyword\">return</span>(<span class=\"hljs-number\">0</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>Âú®ËøôÊÆµ‰ª£Á†Å‰∏≠ÔºåÂêëÈáèÂ§ßÂ∞èË¢´ËÆæÁΩÆ‰∏∫32ÔºåÂ¶Ç‰∏ãÊâÄÁ§∫Ôºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-keyword\">int</span> nElem = <span class=\"hljs-number\">32</span>;<br></code></pre></div></td></tr></table></figure>\n\n<p>ÊâßË°åÈÖçÁΩÆË¢´ÊîæÂÖ•‰∏Ä‰∏™ÂùóÂÜÖÔºåÂÖ∂‰∏≠ÂåÖÂê´32‰∏™ÂÖÉÁ¥†Ôºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\">dim3 <span class=\"hljs-title\">block</span><span class=\"hljs-params\">(nElem)</span></span>;<br><span class=\"hljs-function\">dim3 <span class=\"hljs-title\">grid</span><span class=\"hljs-params\">(nElem/block.x)</span></span>;<br></code></pre></div></td></tr></table></figure>\n\n<p>‰ΩøÁî®‰ª•‰∏ãÂëΩ‰ª§ÁºñËØëÂíåÊâßË°åËØ•Â∏¶ÂïäÂêóÔºö</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">nvcc sumArraysOnGPU-small-case.cu -o addvector<br>./addvector<br></code></pre></div></td></tr></table></figure>\n\n<p>Á≥ªÁªüÊä•ÂëäÂ¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">./addvector Starting...<br>Vector size 32<br>Execution configuration &lt;&lt;&lt;1,32&gt;&gt;&gt;<br>Arrays match.<br></code></pre></div></td></tr></table></figure>\n\n<p>Â¶ÇÊûú‰Ω†Â∞ÜÊâßË°åÈÖçÁΩÆÈáçÊñ∞ÂÆö‰πâ‰∏∫32‰∏™ÂùóÔºåÊØè‰∏™ÂùóÂè™Êúâ‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÂ¶Ç‰∏ãÊâÄÁ§∫Ôºõ</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\">dim3 <span class=\"hljs-title\">block</span><span class=\"hljs-params\">(<span class=\"hljs-number\">1</span>)</span></span>;<br><span class=\"hljs-function\">dim3 <span class=\"hljs-title\">grid</span><span class=\"hljs-params\">(nElem)</span></span>;<br></code></pre></div></td></tr></table></figure>\n\n<p>ÈÇ£‰πàÂ∞±ÈúÄË¶ÅÂú®‰ª£Á†ÅÊ∏ÖÂçï2-4‰∏≠ÂØπÊ†∏ÂáΩÊï∞sumArraysOnGPUËøõË°å‰øÆÊîπÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">Áî®<span class=\"hljs-keyword\">int</span> i = threadIdx.x;    ÊõøÊç¢<span class=\"hljs-keyword\">int</span> i = blockIdx.x;<br></code></pre></div></td></tr></table></figure>\n\n<p>‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÔºåÂèØ‰ª•Âü∫‰∫éÁªôÂÆöÁöÑ‰∏ÄÁª¥ÁΩëÊ†ºÂíåÂùóÁöÑ‰ø°ÊÅØÊù•ËÆ°ÁÆóÂÖ®Â±ÄÊï∞ÊçÆËÆøÈóÆÁöÑÂîØ‰∏ÄÁ¥¢ÂºïÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\">__gloal__ <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">sumArraysOnGPU</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">float</span> *A, <span class=\"hljs-keyword\">float</span> *B, <span class=\"hljs-keyword\">float</span> *C)</span></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> i = blockIdx.x * blockDim.x * threadIdx.x;<br>    C[i] = A[i] + B[i];<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>‰Ω†ÈúÄË¶ÅÁ°Æ‰øù‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãËøõË°åÊõ¥ÊîπÊâÄ‰∫ßÁîüÁªìÊûúÁöÑÊ≠£Á°ÆÊÄß„ÄÇ</p>\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p>CUDA CÁºñÁ®ãÊùÉÂ®ÅÊåáÂçó Á®ãÊ∂¶‰ºüÔºåMax Grossman(Áæé)ÔºåTy Mckercher </p>\n",
            "tags": [
                "CUDA"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/03/06/cuda010/",
            "url": "https://xingyuanjie.top/2023/03/06/cuda010/",
            "title": "CUDAÂ§ÑÁêÜÈîôËØØ",
            "date_published": "2023-03-06T08:17:59.000Z",
            "content_html": "<h2 id=\"CUDAÂ§ÑÁêÜÈîôËØØ\"><a href=\"#CUDAÂ§ÑÁêÜÈîôËØØ\" class=\"headerlink\" title=\"CUDAÂ§ÑÁêÜÈîôËØØ\"></a>CUDAÂ§ÑÁêÜÈîôËØØ</h2><p>Áî±‰∫éËÆ∏Â§öCUDAË∞ÉÁî®ÊòØÂºÇÊ≠•ÁöÑÔºåÊâÄ‰ª•ÊúâÊó∂ÂèØËÉΩÂæàÈöæÁ°ÆÂÆöÊüê‰∏™ÈîôËØØÊòØÁî±Âì™‰∏ÄÊ≠•Á®ãÂ∫èÂºïËµ∑ÁöÑ„ÄÇÂÆö‰πâ‰∏Ä‰∏™ÈîôËØØÂ§ÑÁêÜÂÆèÂ∞ÅË£ÖÊâÄÊúâÁöÑCUDA APIË∞ÉÁî®ÔºåËøôÁÆÄÂåñ‰∫ÜÈîôËØØÊ£ÄÊü•ËøáÁ®ãÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> CHECK(call)</span><br>&#123;<br>    <span class=\"hljs-keyword\">const</span> cudaError_t error = call;<br>    <span class=\"hljs-keyword\">if</span>(error != cudaSuccess)<br>    &#123;<br>        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Error:%s:%d, &quot;</span>, __FILE__, __LINE__);<br>        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;code:%d, reason: %s\\n&quot;</span>, error, <span class=\"hljs-built_in\">cudaGetErrorString</span>(error));<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>‰æãÂ¶ÇÔºå‰Ω†ÂèØ‰ª•Âú®‰ª•‰∏ã‰ª£Á†Å‰∏≠‰ΩøÁî®ÂÆèÔºö</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs reasonml\"><span class=\"hljs-constructor\">CHECK(<span class=\"hljs-params\">cudaMemcpy</span>(<span class=\"hljs-params\">d_C</span>, <span class=\"hljs-params\">gpuRef</span>, <span class=\"hljs-params\">nBytes</span>, <span class=\"hljs-params\">cudaMemcpyHostToDevice</span>)</span>);<br></code></pre></div></td></tr></table></figure>\n\n<p>Â¶ÇÊûúÂÜÖÂ≠òÊã∑Ë¥ùÊàñ‰πãÂâçÁöÑÂºÇÊ≠•Êìç‰Ωú‰∫ßÁîü‰∫ÜÈîôËØØÔºåËøô‰∏™ÂÆè‰ºöÊä•ÂëäÈîôËØØ‰ª£Á†ÅÔºåÂπ∂ËæìÂá∫‰∏Ä‰∏™ÂèØËØª‰ø°ÊÅØÔºåÁÑ∂ÂêéÂÅúÊ≠¢Á®ãÂ∫è„ÄÇ‰πüÂèØ‰ª•Áî®‰∏ãËø∞ÊñπÊ≥ïÔºåÂú®Ê†∏ÂáΩÊï∞Ë∞ÉÁî®ÂêéÊ£ÄÊü•Ê†∏ÂáΩÊï∞ÈîôËØØÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">kernel_function&lt;&lt;&lt;grid,block&gt;&gt;&gt;(argument list);<br><span class=\"hljs-built_in\">CHECK</span>(<span class=\"hljs-built_in\">cudaDeviceSynchronize</span>());<br></code></pre></div></td></tr></table></figure>\n\n<p>CHECK(cudaDeviceSynchronize())‰ºöÈòªÂ°û‰∏ªÊú∫Á´ØÁ∫øÁ®ãÁöÑËøêË°åÁõ¥Âà∞ËÆæÂ§áÁ´ØÊâÄÊúâÁöÑËØ∑Ê±Ç‰ªªÂä°ÈÉΩÁªìÊùüÔºåÂπ∂Á°Æ‰øùÊúÄÂêéÁöÑÊ†∏ÂáΩÊï∞ÂêØÂä®ÈÉ®ÂàÜ‰∏ç‰ºöÂá∫Èîô„ÄÇ‰ª•‰∏ä‰ªÖÊòØ‰ª•Ë∞ÉËØï‰∏∫ÁõÆÁöÑÁöÑÔºåÂõ†‰∏∫Âú®Ê†∏ÂáΩÊï∞ÂêØÂä®ÂêéÊ∑ªÂä†Ëøô‰∏™Ê£ÄÊü•ÁÇπ‰ºöÈòªÂ°û‰∏ªÊú∫Á´ØÁ∫øÁ®ãÔºå‰ΩøËØ•Ê£ÄÊü•ÁÇπÊàê‰∏∫ÂÖ®Â±ÄÂ±èÈöú„ÄÇ</p>\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p>CUDA CÁºñÁ®ãÊùÉÂ®ÅÊåáÂçó Á®ãÊ∂¶‰ºüÔºåMax Grossman(Áæé)ÔºåTy Mckercher </p>\n",
            "tags": [
                "CUDA"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/03/06/cuda009/",
            "url": "https://xingyuanjie.top/2023/03/06/cuda009/",
            "title": "CUDAÈ™åËØÅÊ†∏ÂáΩÊï∞",
            "date_published": "2023-03-06T08:06:35.000Z",
            "content_html": "<h2 id=\"CUDAÈ™åËØÅÊ†∏ÂáΩÊï∞\"><a href=\"#CUDAÈ™åËØÅÊ†∏ÂáΩÊï∞\" class=\"headerlink\" title=\"CUDAÈ™åËØÅÊ†∏ÂáΩÊï∞\"></a>CUDAÈ™åËØÅÊ†∏ÂáΩÊï∞</h2><p>Êó¢ÁÑ∂‰Ω†Â∑≤ÁªèÁºñÂÜô‰∫ÜÊ†∏ÂáΩÊï∞Ôºå‰Ω†Â¶Ç‰ΩïËÉΩÁü•ÈÅìÂÆÉÊòØÂê¶Ê≠£Á°ÆËøêË°åÔºü‰Ω†ÈúÄË¶Å‰∏Ä‰∏™‰∏ªÊú∫ÂáΩÊï∞Êù•È™åËØÅÊ†∏ÂáΩÊï∞ÁöÑÁªìÊûú„ÄÇ</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">checkResult</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">float</span> *hostRef, <span class=\"hljs-keyword\">float</span> *gpuRef, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">int</span> N)</span></span>&#123;<br>    <span class=\"hljs-keyword\">double</span> epsilon = <span class=\"hljs-number\">1.0E-8</span>;<br>    <span class=\"hljs-keyword\">int</span> match = <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span> ;i &lt; N; i++)&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">abs</span>(hostRef[i] - gpuRef[i]) &gt; epsilon)&#123;<br>            match = <span class=\"hljs-number\">0</span>;<br>            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Arrays do not match!\\n&quot;</span>);<br>            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;host %5.2f gpu %5.2f at current %d\\n&quot;</span>,hostRef[i],gpuRef[i],i);<br>            <span class=\"hljs-keyword\">break</span>;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">if</span>(match) <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Arrays match.\\n\\n&quot;</span>);<br>    <span class=\"hljs-keyword\">return</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"È™åËØÅÊ†∏ÂáΩÊï∞‰ª£Á†Å\"><a href=\"#È™åËØÅÊ†∏ÂáΩÊï∞‰ª£Á†Å\" class=\"headerlink\" title=\"È™åËØÅÊ†∏ÂáΩÊï∞‰ª£Á†Å\"></a>È™åËØÅÊ†∏ÂáΩÊï∞‰ª£Á†Å</h3><p>Èô§‰∫ÜËÆ∏Â§öÂèØÁî®ÁöÑË∞ÉËØïÂ∑•ÂÖ∑Â§ñÔºåËøòÊúâ‰∏§‰∏™ÈùûÂ∏∏ÁÆÄÂçïÂÆûÁî®ÁöÑÊñπÊ≥ïÂèØ‰ª•È™åËØÅÊ†∏ÂáΩÊï∞„ÄÇ</p>\n<p>È¶ñÂÖàÔºå‰Ω†ÂèØ‰ª•Âú®FermiÂèäÊõ¥È´òÁâàÊú¨ÁöÑËÆæÂ§áÁ´ØÁöÑÊ†∏ÂáΩÊï∞‰∏≠‰ΩøÁî®printfÂáΩÊï∞„ÄÇ</p>\n<p>ÂÖ∂Ê¨°ÔºåÂèØ‰ª•Â∞ÜÊâßË°åÂèÇÊï∞ËÆæÁΩÆ‰∏∫&lt;&lt;&lt;1,1&gt;&gt;&gt;ÔºåÂõ†Ê≠§Âº∫Âà∂Áî®‰∏Ä‰∏™ÂùóÂíå‰∏Ä‰∏™Á∫øÁ®ãÊâßË°åÊ†∏ÂáΩÊï∞ÔºåËøôÊ®°Êãü‰∫Ü‰∏≤Ë°åÊâßË°åÁ®ãÂ∫è„ÄÇËøôÂØπ‰∫éË∞ÉËØïÂíåÈ™åËØÅÁªìÊûúÊòØÂê¶Ê≠£Á°ÆÊòØÈùûÂ∏∏ÊúâÁî®ÁöÑÔºåËÄå‰∏îÔºåÂ¶ÇÊûú‰Ω†ÈÅáÂà∞‰∫ÜËøêÁÆóÊ¨°Â∫èÁöÑÈóÆÈ¢òÔºåËøôÊúâÂä©‰∫é‰Ω†ÂØπÊØîÈ™åËØÅÊï∞ÂÄºÁªìÊûúÊòØÂê¶ÊòØÊåâ‰ΩçÁ≤æÁ°ÆÁöÑ„ÄÇ</p>\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p>CUDA CÁºñÁ®ãÊùÉÂ®ÅÊåáÂçó Á®ãÊ∂¶‰ºüÔºåMax Grossman(Áæé)ÔºåTy Mckercher </p>\n",
            "tags": [
                "CUDA"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/03/06/cuda008/",
            "url": "https://xingyuanjie.top/2023/03/06/cuda008/",
            "title": "CUDAÁºñÂÜôÊ†∏ÂáΩÊï∞",
            "date_published": "2023-03-06T07:46:00.000Z",
            "content_html": "<h2 id=\"ÁºñÂÜôÊ†∏ÂáΩÊï∞\"><a href=\"#ÁºñÂÜôÊ†∏ÂáΩÊï∞\" class=\"headerlink\" title=\"ÁºñÂÜôÊ†∏ÂáΩÊï∞\"></a>ÁºñÂÜôÊ†∏ÂáΩÊï∞</h2><p>Ê†∏ÂáΩÊï∞ÊòØÂú®ËÆæÂ§áÁ´ØÊâßË°åÁöÑ‰ª£Á†Å„ÄÇÂú®Ê†∏ÂáΩÊï∞‰∏≠ÔºåÈúÄË¶Å‰∏∫‰∏Ä‰∏™Á∫øÁ®ãËßÑÂÆöË¶ÅËøõË°åÁöÑËÆ°ÁÆó‰ª•ÂèäË¶ÅËøõË°åÁöÑÊï∞ÊçÆËÆøÈóÆ„ÄÇÂΩìÊ†∏ÂáΩÊï∞Ë¢´Ë∞ÉÁî®Êó∂ÔºåËÆ∏Â§ö‰∏çÂêåÁöÑCUDAÁ∫øÁ®ãÂπ∂Ë°åÊâßË°åÂêå‰∏Ä‰∏™ËÆ°ÁÆó‰ªªÂä°„ÄÇ‰ª•‰∏ãÊòØÁî®_<em>global</em>_</p>\n<p>Â£∞ÊòéÂÆö‰πâÊ†∏ÂáΩÊï∞Ôºö</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs reasonml\">__global__  void kernel<span class=\"hljs-constructor\">_name(<span class=\"hljs-params\">argument</span> <span class=\"hljs-params\">list</span>)</span>;<br></code></pre></div></td></tr></table></figure>\n\n<p>Ê†∏ÂáΩÊï∞ÂøÖÈ°ªÊúâ‰∏Ä‰∏™voidËøîÂõûÁ±ªÂûã„ÄÇ</p>\n<p>Ë°®2-2ÊÄªÁªì‰∫ÜCUDA CÁ®ãÂ∫è‰∏≠ÁöÑÂáΩÊï∞Á±ªÂûãÈôêÂÆöÁ¨¶„ÄÇÂáΩÊï∞Á±ªÂûãÈôêÂÆöÁ¨¶ÊåáÂÆö‰∏Ä‰∏™ÂáΩÊï∞Âú®‰∏ªÊú∫‰∏äÊâßË°åËøòÊòØÂú®ËÆæÂ§á‰∏äÊâßË°åÔºå‰ª•ÂèäÂèØË¢´‰∏ªÊú∫Ë∞ÉÁî®ËøòÊòØË¢´ËÆæÂ§áË∞ÉÁî®„ÄÇ</p>\n<p><img src=\"/2023/03/06/cuda008/image-20230306155126122.png\" alt=\"image-20230306155126122\"></p>\n<p>_<em>device</em>_   Âíå __host__ÈôêÂÆöÁ¨¶ÂèØ‰ª•‰∏ÄÈΩê‰ΩøÁî®ÔºåËøôÊ†∑ÂáΩÊï∞ÂèØ‰ª•ÂêåÊó∂Âú®‰∏ªÊú∫ÂíåËÆæÂ§áÁ´ØËøõË°åÁºñËØë„ÄÇ</p>\n<h3 id=\"CUDAÊ†∏ÂáΩÊï∞ÁöÑÈôêÂà∂\"><a href=\"#CUDAÊ†∏ÂáΩÊï∞ÁöÑÈôêÂà∂\" class=\"headerlink\" title=\"CUDAÊ†∏ÂáΩÊï∞ÁöÑÈôêÂà∂\"></a>CUDAÊ†∏ÂáΩÊï∞ÁöÑÈôêÂà∂</h3><p>‰ª•‰∏ãÈôêÂà∂ÈÄÇÁî®‰∫éÊâÄÊúâÊ†∏ÂáΩÊï∞Ôºö</p>\n<ul>\n<li>Âè™ËÉΩËÆøÈóÆËÆæÂ§áÂÜÖÂ≠ò</li>\n<li>ÂøÖÈ°ªÂÖ∑ÊúâvoidËøîÂõûÁ±ªÂûã</li>\n<li>‰∏çÊîØÊåÅÂèØÂèòÊï∞ÈáèÁöÑÂèÇÊï∞</li>\n<li>‰∏çÊîØÊåÅÈùôÊÄÅÂèòÈáè</li>\n<li>ÊòæÁ§∫ÂºÇÊ≠•Ë°å‰∏∫</li>\n</ul>\n<p>ËÄÉËôë‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠êÔºöÂ∞Ü‰∏§‰∏™Â§ßÂ∞è‰∏∫NÁöÑÂêëÈáèAÂíåBÁõ∏Âä†Ôºå‰∏ªÊú∫Á´ØÁöÑÂêëÈáèÂä†Ê≥ïC‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">sumArrayOnHost</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">float</span> *A, <span class=\"hljs-keyword\">float</span> *B, <span class=\"hljs-keyword\">float</span> *C, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">int</span> N)</span></span>&#123;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>;i &lt; N; i++)<br>        C[i] = A[i] + B[i];<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>ËøôÊòØ‰∏Ä‰∏™Ëø≠‰ª£NÊ¨°ÁöÑ‰∏≤Ë°åÁ®ãÂ∫èÔºåÂæ™ÁéØÁªìÊùüÂêéÂ∞Ü‰∫ßÁîü‰ª•‰∏ãÊ†∏ÂáΩÊï∞Ôºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\">__global__ <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">sumArrayOnHost</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">float</span> *A, <span class=\"hljs-keyword\">float</span> *B, <span class=\"hljs-keyword\">float</span> *C)</span></span>&#123;<br>    \t<span class=\"hljs-keyword\">int</span> i = threadIdx.x;<br>        C[i] = A[i] + B[i];<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>CÂáΩÊï∞ÂíåÊ†∏ÂáΩÊï∞‰πãÈó¥Êúâ‰ªÄ‰πà‰∏çÂêåÔºü‰Ω†ÂèØËÉΩÂ∑≤ÁªèÊ≥®ÊÑèÂà∞Âæ™ÁéØ‰ΩìÊ∂àÂ§±‰∫ÜÔºåÂÜÖÁΩÆÁöÑÁ∫øÁ®ãÂùêÊ†áÂèòÈáèÊõøÊç¢‰∫ÜÊï∞ÁªÑÁ¥¢ÂºïÔºåÁî±‰∫éNÊòØË¢´ÈöêÂºèÂÆö‰πâÁî®Êù•ÂêØÂä®N‰∏™Á∫øÁ®ãÁöÑÔºåÊâÄ‰ª•NÊ≤°Êúâ‰ªÄ‰πàÂèÇËÄÉ‰ª∑ÂÄº„ÄÇ</p>\n<p>ÂÅáËÆæÊúâ‰∏Ä‰∏™ÈïøÂ∫¶‰∏∫32‰∏™ÂÖÉÁ¥†ÁöÑÂêëÈáèÔºå‰Ω†ÂèØ‰ª•Êåâ‰ª•‰∏ãÊñπÊ≥ïÁî®32‰∏™Á∫øÁ®ãÊù•Ë∞ÉÁî®Ê†∏ÂáΩÊï∞Ôºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">sumArraysOnGPU&lt;&lt;&lt;<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">32</span>&gt;&gt;&gt;(<span class=\"hljs-keyword\">float</span> *A, <span class=\"hljs-keyword\">float</span> *B, <span class=\"hljs-keyword\">float</span> *C);<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p>CUDA CÁºñÁ®ãÊùÉÂ®ÅÊåáÂçó Á®ãÊ∂¶‰ºüÔºåMax Grossman(Áæé)ÔºåTy Mckercher </p>\n",
            "tags": [
                "CUDA"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/03/06/cuda007/",
            "url": "https://xingyuanjie.top/2023/03/06/cuda007/",
            "title": "ÂêØÂä®‰∏Ä‰∏™CUDAÊ†∏ÂáΩÊï∞",
            "date_published": "2023-03-06T05:59:18.000Z",
            "content_html": "<h2 id=\"ÂêØÂä®‰∏Ä‰∏™CUDAÊ†∏ÂáΩÊï∞\"><a href=\"#ÂêØÂä®‰∏Ä‰∏™CUDAÊ†∏ÂáΩÊï∞\" class=\"headerlink\" title=\"ÂêØÂä®‰∏Ä‰∏™CUDAÊ†∏ÂáΩÊï∞\"></a>ÂêØÂä®‰∏Ä‰∏™CUDAÊ†∏ÂáΩÊï∞</h2><p>‰Ω†Â∫îËØ•ÂØπ‰∏ãÂàóCËØ≠Ë®ÄÂáΩÊï∞Ë∞ÉÁî®ËØ≠Âè•ÂæàÁÜüÊÇâÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-built_in\">function_name</span> (argument list);<br></code></pre></div></td></tr></table></figure>\n\n<p>CUDAÂÜÖÊ†∏Ë∞ÉÁî®ÊòØÂØπCËØ≠Ë®ÄÂáΩÊï∞Ë∞ÉÁî®ËØ≠Âè•ÁöÑÂª∂Áî≥Ôºå&lt;&lt;&lt;&gt;&gt;&gt;ËøêÁÆóÁ¨¶ÂÜÖÊòØÊ†∏ÂáΩÊï∞ÁöÑÊâßË°åÈÖçÁΩÆ„ÄÇ</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">kerbel_name&lt;&lt;&lt;grid,block&gt;&gt;&gt;(srgument list);<br></code></pre></div></td></tr></table></figure>\n\n<p>Ê≠£Â¶Ç‰∏ä‰∏ÄËäÇÊâÄËø∞ÔºåCUDAÁºñÁ®ãÊ®°ÂûãÊè≠Á§∫‰∫ÜÁ∫øÁ®ãÂ±ÇÊ¨°ÁªìÊûÑ„ÄÇÂà©Áî®ÊâßË°åÈÖçÁΩÆÂèØ‰ª•ÊåáÂÆöÁ∫øÁ®ãÂú®GPU‰∏äË∞ÉÂ∫¶ËøêË°åÁöÑÊñπÂºè„ÄÇÊâßË°åÈÖçÁΩÆÁöÑÁ¨¨‰∏Ä‰∏™ÂÄºÊòØÁΩëÊ†ºÁª¥Â∫¶Ôºå‰πüÂ∞±ÊòØÂêØÂä®ÂùóÁöÑÊï∞ÁõÆ„ÄÇÁ¨¨‰∫å‰∏™ÂÄºÊòØÂùóÁª¥Â∫¶Ôºå‰πüÂ∞±ÊòØÊØè‰∏™Âùó‰∏≠Á∫øÁ®ãÁöÑÊï∞ÁõÆ„ÄÇÈÄöËøáÊåáÂÆöÁΩëÊ†ºÂíåÂùóÁöÑÁª¥Â∫¶Ôºå‰Ω†ÂèØ‰ª•ËøõË°å‰∏Ä‰∏ãÈÖçÁΩÆÔºö</p>\n<ul>\n<li>ÂÜÖÊ†∏‰∏≠Á∫øÁ®ãÁöÑÊï∞ÁõÆ</li>\n<li>ÂÜÖÊ†∏‰∏≠‰ΩøÁî®ÁöÑÁ∫øÁ®ãÂ∏ÉÂ±Ä</li>\n</ul>\n<p>Âêå‰∏Ä‰∏™Âùó‰∏≠ÁöÑÁ∫øÁ®ã‰πãÈó¥ÂèØ‰ª•Áõ∏‰∫íÂçè‰ΩúÔºå‰∏çÂêåÂùóÂÜÖÁöÑÁ∫øÁ®ã‰∏çËÉΩÂçè‰Ωú„ÄÇÂØπ‰∫é‰∏Ä‰∏™ÁªôÂÆöÁöÑÈóÆÈ¢òÔºåÂèØ‰ª•‰ΩøÁî®‰∏çÂêåÁöÑÁΩëÊ†ºÂíåÂùóÂ∏ÉÂ±ÄÊù•ÁªÑÁªá‰Ω†ÁöÑÁ∫øÁ®ã„ÄÇ‰æãÂ¶ÇÔºåÂÅáËÆæ‰Ω†Êúâ32‰∏™Êï∞ÊçÆÂÖÉÁ¥†Áî®‰∫éËÆ°ÁÆóÔºåÊØè8‰∏™ÂÖÉÁ¥†‰∏Ä‰∏™ÂùóÔºåÈúÄË¶ÅÂêØÂä®4‰∏™ÂùóÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">kernel_name&lt;&lt;&lt;<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">8</span>&gt;&gt;&gt;(argument list);<br></code></pre></div></td></tr></table></figure>\n\n<p><img src=\"/2023/03/06/cuda007/image-20230306140924311.png\" alt=\"image-20230306140924311\"></p>\n<p>Áî±‰∫éÊï∞ÊçÆÂú®ÂÖ®Â±ÄÂÜÖÂ≠ò‰∏≠ÊòØÁ∫øÊÄßÂ≠òÂÇ®ÁöÑÔºåÂõ†Ê≠§ÂèØ‰ª•Áî®ÂèòÈáèblockIdx.xÂíåthreadIdx.xÊù•ËøõË°å‰ª•‰∏ãÊìç‰Ωú„ÄÇ</p>\n<ul>\n<li>Âú®ÁΩëÊ†º‰∏≠Ê†áËØÜ‰∏Ä‰∏™ÂîØ‰∏ÄÁöÑÁ∫øÁ®ã</li>\n<li>Âª∫Á´ãÁ∫øÁ®ãÂíåÊï∞ÊçÆÂÖÉÁ¥†‰πãÈó¥ÁöÑÊò†Â∞ÑÂÖ≥Á≥ª</li>\n</ul>\n<p>Â¶ÇÊûúÊää32‰∏™ÂÖÉÁ¥†ÊîæÂà∞‰∏Ä‰∏™ÂùóÈáåÔºåÈÇ£‰πàÂè™‰ºöÂæóÂà∞‰∏Ä‰∏™ÂùóÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">kernel_name&lt;&lt;&lt;<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">32</span>&gt;&gt;&gt;(argument list);<br></code></pre></div></td></tr></table></figure>\n\n<p>Â¶ÇÊûúÊØè‰∏™ÂùóÂè™Âê´‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÈÇ£‰πà‰ºöÊúâ32‰∏™ÂùóÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">kernel_name&lt;&lt;&lt;<span class=\"hljs-number\">32</span>,<span class=\"hljs-number\">1</span>&gt;&gt;&gt;(argument list);<br></code></pre></div></td></tr></table></figure>\n\n<p>Ê†∏ÂáΩÊï∞ÁöÑË∞ÉÁî®‰∏é‰∏ªÊú∫Á∫øÁ®ãÊòØÂºÇÊ≠•ÁöÑ„ÄÇÊ†∏ÂáΩÊï∞Ë∞ÉÁî®ÁªìÊùüÂêéÔºåÊéßÂà∂ÊùÉÁ´ãÂàªËøîÂõûÁªô‰∏ªÊú∫Á´Ø„ÄÇ‰Ω†ÂèØ‰ª•Ë∞ÉÁî®‰ª•‰∏ãÂáΩÊï∞Êù•Âº∫Âà∂‰∏ªÊú∫Á´ØÁ®ãÂ∫èÁ≠âÂæÖÊâÄÊúâÁöÑÊ†∏ÂáΩÊï∞ÊâßË°åÁªìÊùüÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\">cudaError_t <span class=\"hljs-title\">cudaDeviceSynchronize</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>)</span></span>;<br></code></pre></div></td></tr></table></figure>\n\n<p>‰∏Ä‰∫õCUDAËøêË°åÊó∂APIÂú®‰∏ªÊú∫ÂíåËÆæÂ§á‰πãÈó¥ÊòØÈöêÂºèÂêåÊ≠•ÁöÑ„ÄÇÂΩì‰ΩøÁî®cudaMemcpyÂáΩÊï∞Âú®‰∏ªÊú∫ÂíåËÆæÂ§á‰πãÈó¥Êã∑Ë¥ùÊï∞ÊçÆÊó∂Ôºå‰∏ªÊú∫Á´ØÈöêÂºèÂêåÊ≠•ÔºåÂç≥‰∏ªÊú∫Á´ØÁ®ãÂ∫èÂøÖÈ°ªÁ≠âÂæÖÊï∞ÊçÆÊã∑Ë¥ùÂÆåÊàêÂêéÊâçËÉΩÁªßÁª≠ÊâßË°åÁ®ãÂ∫è„ÄÇ</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\">cudaError_t <span class=\"hljs-title\">cudaMemcpy</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span>* dst, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">void</span>* src, <span class=\"hljs-keyword\">size_t</span> count, cudaMemcpyKind kind)</span></span>;<br></code></pre></div></td></tr></table></figure>\n\n<p>‰πãÂâçÊâÄÊúâÁöÑÊ†∏ÂáΩÊï∞Ë∞ÉÁî®ÂÆåÊàêÂêéÂºÄÂßãÊã∑Ë¥ùÊï∞ÊçÆ„ÄÇÂΩìÊã∑Ë¥ùÂÆåÊàêÂêéÔºåÊéßÂà∂ÊùÉÁ´ãÂàªËøîÂõûÁªô‰∏ªÊú∫Á´Ø„ÄÇ</p>\n<h3 id=\"ÂºÇÊ≠•Ë°å‰∏∫\"><a href=\"#ÂºÇÊ≠•Ë°å‰∏∫\" class=\"headerlink\" title=\"ÂºÇÊ≠•Ë°å‰∏∫\"></a>ÂºÇÊ≠•Ë°å‰∏∫</h3><p>‰∏çÂêå‰∫éCËØ≠Ë®ÄÁöÑÂáΩÊï∞Ë∞ÉÁî®ÔºåÊâÄÊúâÁöÑCUDAÊ†∏ÂáΩÊï∞ÁöÑÂêØÂä®ÈÉΩÊòØÂºÇÊ≠•ÁöÑ„ÄÇCUDAÂÜÖÊ†∏Ë∞ÉÁî®ÂÆåÊàêÂêéÔºåÊéßÂà∂ÊùÉÁ´ãÂàªËøîÂõûÁªôCPU„ÄÇ</p>\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p>CUDA CÁºñÁ®ãÊùÉÂ®ÅÊåáÂçó Á®ãÊ∂¶‰ºüÔºåMax Grossman(Áæé)ÔºåTy Mckercher </p>\n",
            "tags": [
                "CUDA"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/03/02/leetcode205/",
            "url": "https://xingyuanjie.top/2023/03/02/leetcode205/",
            "title": "205.ÂêåÊûÑÂ≠óÁ¨¶‰∏≤",
            "date_published": "2023-03-02T12:44:27.000Z",
            "content_html": "<h2 id=\"205-ÂêåÊûÑÂ≠óÁ¨¶‰∏≤\"><a href=\"#205-ÂêåÊûÑÂ≠óÁ¨¶‰∏≤\" class=\"headerlink\" title=\"205.ÂêåÊûÑÂ≠óÁ¨¶‰∏≤\"></a>205.ÂêåÊûÑÂ≠óÁ¨¶‰∏≤</h2><h2 id=\"È¢òÁõÆÈìæÊé•\"><a href=\"#È¢òÁõÆÈìæÊé•\" class=\"headerlink\" title=\"È¢òÁõÆÈìæÊé•\"></a>È¢òÁõÆÈìæÊé•</h2><p><a href=\"https://leetcode.cn/problems/isomorphic-strings/\">205. ÂêåÊûÑÂ≠óÁ¨¶‰∏≤ - ÂäõÊâ£ÔºàLeetCodeÔºâ</a></p>\n<h2 id=\"ÂÆåÊï¥‰ª£Á†Å\"><a href=\"#ÂÆåÊï¥‰ª£Á†Å\" class=\"headerlink\" title=\"ÂÆåÊï¥‰ª£Á†Å\"></a>ÂÆåÊï¥‰ª£Á†Å</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> &#123;</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">isIsomorphic</span><span class=\"hljs-params\">(string s, string t)</span> </span>&#123;<br>        string ss;<br>        string st;<br>        <span class=\"hljs-keyword\">int</span> hash[<span class=\"hljs-number\">255</span>];<br>        <span class=\"hljs-keyword\">int</span> index=<span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">memset</span>(hash, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(hash));<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;s.<span class=\"hljs-built_in\">size</span>();i++)&#123;<br>            <span class=\"hljs-keyword\">if</span>(hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(s[i])]==<span class=\"hljs-number\">0</span>)<br>            &#123;<br>                index++;<br>                hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(s[i])]=index;<br>                ss.<span class=\"hljs-built_in\">push_back</span>(index+<span class=\"hljs-string\">&#x27;0&#x27;</span>);<br>            &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>                ss.<span class=\"hljs-built_in\">push_back</span>(hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(s[i])]+<span class=\"hljs-string\">&#x27;0&#x27;</span>);<br>            &#125;<br>        &#125;<br>        index=<span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">memset</span>(hash, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(hash));<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;t.<span class=\"hljs-built_in\">size</span>();i++)&#123;<br>            <span class=\"hljs-keyword\">if</span>(hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(t[i])]==<span class=\"hljs-number\">0</span>)<br>            &#123;<br>                index++;<br>                hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(t[i])]=index;<br>                st.<span class=\"hljs-built_in\">push_back</span>(index+<span class=\"hljs-string\">&#x27;0&#x27;</span>);<br>            &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>                st.<span class=\"hljs-built_in\">push_back</span>(hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(t[i])]+<span class=\"hljs-string\">&#x27;0&#x27;</span>);<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">int</span> ans = ss.<span class=\"hljs-built_in\">compare</span>(st);<br>        <span class=\"hljs-keyword\">if</span>(ans==<span class=\"hljs-number\">0</span>)&#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"ÂèÇËÄÉ‰ª£Á†Å\"><a href=\"#ÂèÇËÄÉ‰ª£Á†Å\" class=\"headerlink\" title=\"ÂèÇËÄÉ‰ª£Á†Å\"></a>ÂèÇËÄÉ‰ª£Á†Å</h2><p><img src=\"/2023/03/02/leetcode205/image-20230302204605581.png\" alt=\"image-20230302204605581\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> &#123;</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">isIsomorphic</span><span class=\"hljs-params\">(string s, string t)</span> </span>&#123;<br>        unordered_map&lt;<span class=\"hljs-keyword\">char</span>, <span class=\"hljs-keyword\">char</span>&gt; s2t;<br>        unordered_map&lt;<span class=\"hljs-keyword\">char</span>, <span class=\"hljs-keyword\">char</span>&gt; t2s;<br>        <span class=\"hljs-keyword\">int</span> len = s.<span class=\"hljs-built_in\">length</span>();<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; len; ++i) &#123;<br>            <span class=\"hljs-keyword\">char</span> x = s[i], y = t[i];<br>            <span class=\"hljs-keyword\">if</span> ((s2t.<span class=\"hljs-built_in\">count</span>(x) &amp;&amp; s2t[x] != y) || (t2s.<span class=\"hljs-built_in\">count</span>(y) &amp;&amp; t2s[y] != x)) &#123;<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>            &#125;<br>            s2t[x] = y;<br>            t2s[y] = x;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"ÂèÇËÄÉÈìæÊé•\"><a href=\"#ÂèÇËÄÉÈìæÊé•\" class=\"headerlink\" title=\"ÂèÇËÄÉÈìæÊé•\"></a>ÂèÇËÄÉÈìæÊé•</h2><p><a href=\"https://leetcode.cn/problems/isomorphic-strings/solution/tong-gou-zi-fu-chuan-by-leetcode-solutio-s6fd/\">ÂêåÊûÑÂ≠óÁ¨¶‰∏≤ - ÂêåÊûÑÂ≠óÁ¨¶‰∏≤ - ÂäõÊâ£ÔºàLeetCodeÔºâ</a></p>\n",
            "tags": [
                "C++",
                "LeetCode",
                "ÂìàÂ∏åË°®"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/03/02/leetcode189/",
            "url": "https://xingyuanjie.top/2023/03/02/leetcode189/",
            "title": "189.ËΩÆËΩ¨Êï∞ÁªÑ",
            "date_published": "2023-03-02T12:03:32.000Z",
            "content_html": "<h2 id=\"189-ËΩÆËΩ¨Êï∞ÁªÑ\"><a href=\"#189-ËΩÆËΩ¨Êï∞ÁªÑ\" class=\"headerlink\" title=\"189.ËΩÆËΩ¨Êï∞ÁªÑ\"></a>189.ËΩÆËΩ¨Êï∞ÁªÑ</h2><h2 id=\"È¢òÁõÆÈìæÊé•\"><a href=\"#È¢òÁõÆÈìæÊé•\" class=\"headerlink\" title=\"È¢òÁõÆÈìæÊé•\"></a>È¢òÁõÆÈìæÊé•</h2><p><a href=\"https://leetcode.cn/problems/rotate-array/\">189. ËΩÆËΩ¨Êï∞ÁªÑ - ÂäõÊâ£ÔºàLeetCodeÔºâ</a></p>\n<h2 id=\"ÂÆåÊï¥‰ª£Á†Å\"><a href=\"#ÂÆåÊï¥‰ª£Á†Å\" class=\"headerlink\" title=\"ÂÆåÊï¥‰ª£Á†Å\"></a>ÂÆåÊï¥‰ª£Á†Å</h2><p><img src=\"/2023/03/02/leetcode189/image-20230302200538871.png\" alt=\"image-20230302200538871\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> &#123;</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reverse</span><span class=\"hljs-params\">(vector&lt;<span class=\"hljs-keyword\">int</span>&gt;&amp; nums,<span class=\"hljs-keyword\">int</span> begin,<span class=\"hljs-keyword\">int</span> end)</span></span><br><span class=\"hljs-function\">    </span>&#123;<br>        <span class=\"hljs-keyword\">while</span>(begin&lt;end)&#123;<br>            <span class=\"hljs-built_in\">swap</span>(nums[begin], nums[end]);<br>            begin++;<br>            end--;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">rotate</span><span class=\"hljs-params\">(vector&lt;<span class=\"hljs-keyword\">int</span>&gt;&amp; nums, <span class=\"hljs-keyword\">int</span> k)</span> </span>&#123;<br>        <span class=\"hljs-comment\">//Êï∞ÁªÑÁøªËΩ¨</span><br>        <span class=\"hljs-keyword\">int</span> p = k%nums.<span class=\"hljs-built_in\">size</span>();<br>        <span class=\"hljs-built_in\">reverse</span>(nums,<span class=\"hljs-number\">0</span>,nums.<span class=\"hljs-built_in\">size</span>()<span class=\"hljs-number\">-1</span>);<br>        <span class=\"hljs-built_in\">reverse</span>(nums,<span class=\"hljs-number\">0</span>,p<span class=\"hljs-number\">-1</span>);<br>        <span class=\"hljs-built_in\">reverse</span>(nums,p,nums.<span class=\"hljs-built_in\">size</span>()<span class=\"hljs-number\">-1</span>);<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p><a href=\"https://leetcode.cn/problems/rotate-array/solution/xuan-zhuan-shu-zu-by-leetcode-solution-nipk/\">ÊóãËΩ¨Êï∞ÁªÑ - ËΩÆËΩ¨Êï∞ÁªÑ - ÂäõÊâ£ÔºàLeetCodeÔºâ</a></p>\n",
            "tags": [
                "C++",
                "LeetCode",
                "Êï∞ÁªÑÁøªËΩ¨"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/03/01/leetcode724/",
            "url": "https://xingyuanjie.top/2023/03/01/leetcode724/",
            "title": "724.ÂØªÊâæÊï∞ÁªÑÁöÑ‰∏≠ÂøÉ‰∏ãÊ†á",
            "date_published": "2023-03-01T09:35:03.000Z",
            "content_html": "<h1 id=\"724-ÂØªÊâæÊï∞ÁªÑÁöÑ‰∏≠ÂøÉ‰∏ãÊ†á\"><a href=\"#724-ÂØªÊâæÊï∞ÁªÑÁöÑ‰∏≠ÂøÉ‰∏ãÊ†á\" class=\"headerlink\" title=\"724.ÂØªÊâæÊï∞ÁªÑÁöÑ‰∏≠ÂøÉ‰∏ãÊ†á\"></a>724.ÂØªÊâæÊï∞ÁªÑÁöÑ‰∏≠ÂøÉ‰∏ãÊ†á</h1><h2 id=\"È¢òÁõÆÈìæÊé•\"><a href=\"#È¢òÁõÆÈìæÊé•\" class=\"headerlink\" title=\"È¢òÁõÆÈìæÊé•\"></a>È¢òÁõÆÈìæÊé•</h2><p><a href=\"https://leetcode.cn/problems/find-pivot-index/\">724. ÂØªÊâæÊï∞ÁªÑÁöÑ‰∏≠ÂøÉ‰∏ãÊ†á - ÂäõÊâ£ÔºàLeetCodeÔºâ</a></p>\n<h2 id=\"ÂÆåÊï¥‰ª£Á†Å\"><a href=\"#ÂÆåÊï¥‰ª£Á†Å\" class=\"headerlink\" title=\"ÂÆåÊï¥‰ª£Á†Å\"></a>ÂÆåÊï¥‰ª£Á†Å</h2><p><img src=\"/2023/03/01/leetcode724/image-20230301173931031.png\" alt=\"image-20230301173931031\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> &#123;</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">pivotIndex</span><span class=\"hljs-params\">(vector&lt;<span class=\"hljs-keyword\">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class=\"hljs-keyword\">int</span> total=<span class=\"hljs-built_in\">accumulate</span>(nums.<span class=\"hljs-built_in\">begin</span>(), nums.<span class=\"hljs-built_in\">end</span>(),<span class=\"hljs-number\">0</span>);\t<span class=\"hljs-comment\">//Á¨¨‰∏â‰∏™ÂΩ¢ÂèÇÊòØÁ¥ØÂä†ÁöÑÂàùÂßãÂÄº</span><br>        <span class=\"hljs-keyword\">int</span> sum=<span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;nums.<span class=\"hljs-built_in\">size</span>();i++)<br>        &#123;<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">2</span>*sum+nums[i] == total)&#123;<br>                <span class=\"hljs-keyword\">return</span> i;<br>            &#125;<br>            sum+=nums[i];<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p><a href=\"https://leetcode.cn/problems/find-pivot-index/solution/xun-zhao-shu-zu-de-zhong-xin-suo-yin-by-gzjle/\">ÂØªÊâæÊï∞ÁªÑÁöÑ‰∏≠ÂøÉÁ¥¢Âºï - ÂØªÊâæÊï∞ÁªÑÁöÑ‰∏≠ÂøÉ‰∏ãÊ†á - ÂäõÊâ£ÔºàLeetCodeÔºâ</a></p>\n",
            "tags": [
                "C++",
                "LeetCode",
                "ÂâçÁºÄÂíå"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/28/vectorbool/",
            "url": "https://xingyuanjie.top/2023/02/28/vectorbool/",
            "title": "vector<bool>‰∏évector<T>",
            "date_published": "2023-02-28T12:59:01.000Z",
            "content_html": "<h1 id=\"vector-lt-bool-gt-‰∏évector-lt-T-gt\"><a href=\"#vector-lt-bool-gt-‰∏évector-lt-T-gt\" class=\"headerlink\" title=\"vector&lt;bool&gt;‰∏évector&lt;T&gt;\"></a>vector&lt;bool&gt;‰∏évector&lt;T&gt;</h1><p>vector&lt;bool&gt; ‰∏çÂÉèÂÖ∂‰ªñÂÆπÂô®‰∏ÄÊ†∑ÊåâByteÂ≠òÂÇ®ÁöÑÔºåÂÆÉÊòØÊåâbitÂ≠òÂÇ®ÁöÑÔºå‰πüÂ∞±ÊòØËØ¥‰∏Ä‰∏™Ê≠£Â∏∏ÁöÑboolÁ±ªÂûãÁöÑÁ©∫Èó¥ÂèØ‰ª•Â≠òÊîævector&lt;bool&gt;‰∏≠ÁöÑ8‰∏™ÔºåÁ©∫Èó¥‰∏äÁ°ÆÂÆû‰ºòÂåñ‰∫ÜÂæàÂ§öÔºåÁÑ∂ËÄåÔºåc++ÊòØ‰∏çËÉΩÁõ¥Êé•ÂèñÂØπbitÊìç‰ΩúÁöÑÔºàÂõ†‰∏∫C++ÁöÑÊúÄÂ∞èÂèØÂØªÂùÄÂÄºÈÄöÂ∏∏‰ª•byte‰∏∫Âçï‰ΩçÔºâÔºåÂØπÂÖ∂‰ΩøÁî®operator[]ÂÖ∂ÂÆûËøîÂõûÁöÑ‰∏çÊòØboolÁöÑÂºïÁî®ËÄåÊòØ‰∏Ä‰∏™‚Äùproxy reference‚ÄùÊòØ‚Äùstd::vector&lt; bool&gt;:reference‚ÄùÁ±ªÂûãÁöÑÂØπË±°„ÄÇ</p>\n<p>Ê≠£Âõ†‰∏∫Â¶ÇÊ≠§Ôºåvector&lt;bool&gt;ÈÄöËøá‰ª£ÁêÜÂØπË±°ËøõË°åÂ≠òÂèñËÆøÈóÆÊó∂ÈúÄË¶ÅÊâßË°åÈÄê‰ΩçÂ§ÑÁêÜÔºåËÆøÈóÆÈÄöÂ∏∏ÊØîint‰πãÁ±ªÁöÑÊôÆÈÄöÁ±ªÂûãÊìç‰ΩúË¶ÅÊÖ¢ÂæàÂ§ö„ÄÇ</p>\n<p>Âõ†Ê≠§ÔºåÂØπvecotr&lt;bool&gt;ÁöÑ‰ΩøÁî®ÈúÄÊÖéÈáçËÄÉËôë‰ª•‰∏ãÂá†ÁÇπÔºö<br>(1)ÊòØÂê¶ÈúÄË¶ÅÁâ∫Áâ≤ÈÄüÂ∫¶Êù•Ëé∑ÂèñÁ©∫Èó¥‰∏äÁöÑ‰ºòÂåñ<br>(2)ÁÆóÊ≥ï‰∏≠‰ºöÂê¶ÊúâÂØπvecotrÂú∞ÂùÄËøõË°åËß£ÂºïÁî®Êìç‰ΩúÁöÑÂèØËÉΩ„ÄÇ</p>\n<p>Â¶ÇÊûú‰∏çÊª°Ë∂≥‰ª•‰∏äÊù°‰ª∂ÔºåÂª∫ËÆÆ‰ΩøÁî®deque&lt;bool&gt;Êù•Âèñ‰ª£vector&lt;bool&gt;ÔºåÂäüËÉΩÂü∫Êú¨Áõ∏ÂêåÔºå‰ΩÜdeque&lt;bool&gt;Êú™ÂØπÂÖ∂ËøõË°åÁâπÊÆäÂ§ÑÁêÜ„ÄÇ</p>\n<p>‰∏ãÈù¢ÊòØvector&lt;bool&gt;‰∏évector&lt;T&gt;ÁÆÄÂçïÁöÑÂØπÊØî‰æãÂ≠êÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span>&#123;<br>\tvector&lt;<span class=\"hljs-keyword\">char</span>&gt; ch;<br>\tvector&lt;<span class=\"hljs-keyword\">int</span>&gt; in;<br>\tvector&lt;<span class=\"hljs-keyword\">bool</span>&gt; bo;<br> <br>\t<span class=\"hljs-keyword\">int</span> m = <span class=\"hljs-number\">1e6</span>;<br>\t<span class=\"hljs-keyword\">clock_t</span> t1, t2, t3;<br> <br>\tt1 = <span class=\"hljs-built_in\">clock</span>();<br>\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i++)&#123;<br>\t\tch.<span class=\"hljs-built_in\">push_back</span>(<span class=\"hljs-string\">&#x27;0&#x27;</span>);<br>\t&#125;<br>\tt1 = <span class=\"hljs-built_in\">clock</span>() - t1;<br> <br>\tt2 = <span class=\"hljs-built_in\">clock</span>();<br>\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i++)&#123;<br>\t\tin.<span class=\"hljs-built_in\">push_back</span>(<span class=\"hljs-number\">0</span>);<br>\t&#125;<br>\tt2 = <span class=\"hljs-built_in\">clock</span>() - t2;<br> <br>\tt3 = <span class=\"hljs-built_in\">clock</span>();<br>\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i++)&#123;<br>\t\tbo.<span class=\"hljs-built_in\">push_back</span>(<span class=\"hljs-literal\">true</span>);<br>\t&#125;<br>\tt3 = <span class=\"hljs-built_in\">clock</span>() - t3;<br> <br>\tcout &lt;&lt;<span class=\"hljs-string\">&quot;vector&lt;char&gt; &quot;</span>&lt;&lt; t1 &lt;&lt; <span class=\"hljs-string\">&quot;\\n vector&lt;int&gt; &quot;</span> &lt;&lt; t2 &lt;&lt; <span class=\"hljs-string\">&quot;\\nvector&lt;bool&gt; &quot;</span> &lt;&lt; t3 &lt;&lt; endl;<br>\tcout &lt;&lt; endl;<br> <br>\t<span class=\"hljs-built_in\">system</span>(<span class=\"hljs-string\">&quot;pause&quot;</span>);<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>ËøêË°åÁªìÊûúÔºö</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs cpp\">vector&lt;<span class=\"hljs-keyword\">char</span>&gt; <span class=\"hljs-number\">216</span><br>vextor&lt;<span class=\"hljs-keyword\">int</span>&gt; <span class=\"hljs-number\">229</span><br>vector&lt;<span class=\"hljs-keyword\">bool</span>&gt; <span class=\"hljs-number\">16535</span><br></code></pre></div></td></tr></table></figure>\n\n<p>ËøôÈáåÂèëÁé∞vector&lt;bool&gt;Áõ∏ËæÉ‰∫éÂÖ∂‰ªñvector&lt;T&gt;ÈÄüÂ∫¶Ë¶ÅÊÖ¢ÁöÑÂ§öÔºÅ</p>\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p><a href=\"https://blog.csdn.net/qq_52134928/article/details/121066304?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-121066304-blog-86603050.pc_relevant_3mothn_strategy_and_data_recovery&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-121066304-blog-86603050.pc_relevant_3mothn_strategy_and_data_recovery&utm_relevant_index=1\">(65Êù°Ê∂àÊÅØ) „ÄêC++„ÄëvectorÔºúboolÔºûÁöÑÁâπÂà´‰πãÂ§Ñ_Â∞èÈô∂ÂêåÂ≠¶_ÁöÑÂçöÂÆ¢-CSDNÂçöÂÆ¢</a></p>\n<p><a href=\"https://blog.csdn.net/u013249689/article/details/25297657\">(65Êù°Ê∂àÊÅØ) ‰∏ç‰ΩøÁî®vectorÁöÑÂéüÂõ†ÂíåÊõø‰ª£ÊñπÊ≥ï_jackycmuÁöÑÂçöÂÆ¢-CSDNÂçöÂÆ¢</a></p>\n",
            "tags": [
                "STL",
                "Vector",
                "C/C++",
                "bool"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/28/Linux004/",
            "url": "https://xingyuanjie.top/2023/02/28/Linux004/",
            "title": "C/C++ÂÖ≥ÈîÆÂ≠ó‰πãrestrict",
            "date_published": "2023-02-28T11:45:09.000Z",
            "content_html": "<h1 id=\"C-x2F-C-ÂÖ≥ÈîÆÂ≠ó‰πãrestrict\"><a href=\"#C-x2F-C-ÂÖ≥ÈîÆÂ≠ó‰πãrestrict\" class=\"headerlink\" title=\"C&#x2F;C++ÂÖ≥ÈîÆÂ≠ó‰πãrestrict\"></a>C&#x2F;C++ÂÖ≥ÈîÆÂ≠ó‰πãrestrict</h1><p>Âú®CËØ≠Ë®Ä‰∏≠ÔºårestrictÂÖ≥ÈîÆÂ≠óÁî®‰∫é‰øÆÈ•∞ÊåáÈíàÔºàC99Ê†áÂáÜÔºâ„ÄÇÈÄöËøáÂä†‰∏ärestrictÂÖ≥ÈîÆÂ≠óÔºåÁ®ãÂ∫èÂëòÂèØÊèêÁ§∫ÁºñËØëÂô®ÔºöÂú®ËØ•ÊåáÈíàÁöÑÁîüÂëΩÂë®ÊúüÂÜÖÔºåÂÖ∂ÊåáÂêëÁöÑÂØπË±°‰∏ç‰ºöË¢´Âà´ÁöÑÊåáÈíàÊâÄÂºïÁî®„ÄÇ</p>\n<p>ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåÂú®C++‰∏≠ÔºåÂπ∂Êó†ÊòéÁ°ÆÁªü‰∏ÄÁöÑÊ†áÂáÜÊîØÊåÅrestrictÂÖ≥ÈîÆÂ≠ó„ÄÇ‰ΩÜÊòØÂæàÂ§öÁºñËØëÂô®ÂÆûÁé∞‰∫ÜÂäüËÉΩÁõ∏ÂêåÁöÑÂÖ≥ÈîÆÂ≠óÔºå‰æãÂ¶ÇgccÂíåclang‰∏≠ÁöÑ__restrictÂÖ≥ÈîÆÂ≠ó„ÄÇ</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">add1</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>*a, <span class=\"hljs-keyword\">int</span>* b)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    *a = <span class=\"hljs-number\">10</span>;<br>    *b = <span class=\"hljs-number\">12</span>;<br>    <span class=\"hljs-keyword\">return</span> *a + *b;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>add1ÂáΩÊï∞ÁöÑËøîÂõûÂÄº‰ºöÊ∞∏ËøúÊòØ10 + 12 &#x3D; 22ÂêóÔºü</p>\n<p>Á≠îÊ°àÊòØ‰∏ç‰∏ÄÂÆö„ÄÇÂú®ÊåáÈíàaÂíåbÁöÑÂú∞ÂùÄ‰∏çÂêåÊó∂ÔºåËøîÂõû22Ê≤°ÊúâÈóÆÈ¢ò„ÄÇ‰ΩÜÊòØÂΩìÊåáÈíàa‰∏ébÊåáÂêëÁöÑÊòØÂêå‰∏Ä‰∏™intÂØπË±°Êó∂ÔºåËØ•ÂØπË±°ÂÖàË¢´ËµãÂÄº‰∏∫10ÔºåÂêéË¢´ËµãÂÄº‰∏∫12ÔºåÂõ†Ê≠§aÂíåbÈÉΩËøîÂõû12ÔºåÂõ†Ê≠§add1ÂáΩÊï∞ÊúÄÁªàËøîÂõû24„ÄÇ</p>\n<p>‰∏ãÈù¢ÊòØ‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠êÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">add1</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>* a, <span class=\"hljs-keyword\">int</span>* b)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    *a = <span class=\"hljs-number\">10</span>;<br>    *b = <span class=\"hljs-number\">12</span>;<br>    <span class=\"hljs-keyword\">return</span> *a + *b;<br>&#125;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span>&#123;<br>    <span class=\"hljs-keyword\">int</span>* c;<br>    <span class=\"hljs-keyword\">int</span>* d;<br>    d=(<span class=\"hljs-keyword\">int</span>*)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(<span class=\"hljs-keyword\">int</span>)*<span class=\"hljs-number\">1</span>);<br>    c=(<span class=\"hljs-keyword\">int</span>*)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(<span class=\"hljs-keyword\">int</span>)*<span class=\"hljs-number\">1</span>);<br>    *c=<span class=\"hljs-number\">10</span>;<br>    *d=<span class=\"hljs-number\">12</span>;<br>    *d=<span class=\"hljs-number\">12</span>;<br>    cout&lt;&lt;<span class=\"hljs-string\">&quot;c:&quot;</span>&lt;&lt;*c&lt;&lt;endl;<br>    cout&lt;&lt;<span class=\"hljs-string\">&quot;d:&quot;</span>&lt;&lt;*d&lt;&lt;endl;<br>    cout&lt;&lt;<span class=\"hljs-string\">&quot;When Pointers a and b have different addresses&quot;</span>&lt;&lt;endl;<br>    cout&lt;&lt;<span class=\"hljs-built_in\">add1</span>(c,d)&lt;&lt;endl;<br>    cout&lt;&lt;<span class=\"hljs-string\">&quot;When Pointers a and b have the same address&quot;</span>&lt;&lt;endl;<br>    cout&lt;&lt;<span class=\"hljs-built_in\">add1</span>(c,c)&lt;&lt;endl;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>Á®ãÂ∫èËæìÂá∫Ôºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">c:<span class=\"hljs-number\">10</span><br>d:<span class=\"hljs-number\">12</span><br>When Pointers a <span class=\"hljs-keyword\">and</span> b have different addresses<br><span class=\"hljs-number\">22</span><br>When Pointers a <span class=\"hljs-keyword\">and</span> b have the same address<br><span class=\"hljs-number\">24</span><br></code></pre></div></td></tr></table></figure>\n\n<p>ÂºÄÂêØ-O3‰ºòÂåñÔºåadd1ÂØπÂ∫îÁöÑÊ±áÁºñ‰ª£Á†ÅÂ¶Ç‰∏ã:</p>\n<p>‰∏∫‰∫ÜÂæóÂà∞<code>*a</code>ÁöÑÂÄºËÆøÈóÆ‰∫Ü1Ê¨°ÂÜÖÂ≠òÔºåËÄå‰∏çÁÆ°Âú®‰ΩïÁßçÊù°‰ª∂‰∏ã(<code>a == b</code> or <code>a != b</code>)Ôºå<code>*b</code>ÁöÑÂÄºÈÉΩÊòØ12„ÄÇÂõ†Ê≠§ÁºñËØëÂô®Â∞Ü<code>*a</code>ÁöÑÂÄºËΩΩÂÖ•<code>eax</code>ÂØÑÂ≠òÂô®ÂêéÔºåÁõ¥Êé•Âä†‰∏äÁ´ãÂç≥Êï∞12ÔºåËÄåÊó†ÈúÄÂÜçËÆøÈóÆÂÜÖÂ≠òËé∑Âèñ<code>*b</code>ÁöÑÂÄº„ÄÇÂú®Êó†Ê≥ïÁ°ÆÂÆöÊåáÈíàaÂíåbÊòØÂê¶Áõ∏ÂêåÁöÑÊÉÖÂÜµ‰∏ãÔºåÁºñËØëÂô®Âè™ËÉΩÂ∏Æ‰Ω†‰ºòÂåñÂà∞ËøôÈáå‰∫Ü„ÄÇ</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs fortran\"><span class=\"hljs-number\">0000000000400</span>a10 &lt;_Z4add1PiS_&gt;:<br>  <span class=\"hljs-number\">400</span>a10:   c7 <span class=\"hljs-number\">07</span> <span class=\"hljs-number\">0</span>a <span class=\"hljs-number\">00</span> <span class=\"hljs-number\">00</span> <span class=\"hljs-number\">00</span>       movl   $<span class=\"hljs-number\">0</span>xa,(%rdi) ; *a = <span class=\"hljs-number\">10</span><br>  <span class=\"hljs-number\">400</span>a16:   c7 <span class=\"hljs-number\">06</span> <span class=\"hljs-number\">0</span>c <span class=\"hljs-number\">00</span> <span class=\"hljs-number\">00</span> <span class=\"hljs-number\">00</span>       movl   $<span class=\"hljs-number\">0</span>xc,(%rsi) ; *b = <span class=\"hljs-number\">10</span><br>  <span class=\"hljs-number\">400</span>a1c:   <span class=\"hljs-number\">8</span>b <span class=\"hljs-number\">07</span>                   mov    (%rdi),%eax ; ÁªìÊûú = *a<br>  <span class=\"hljs-number\">400</span>a1e:   <span class=\"hljs-number\">83</span> c0 <span class=\"hljs-number\">0</span>c                add    $<span class=\"hljs-number\">0</span>xc,%eax   ; ÁªìÊûú += <span class=\"hljs-number\">12</span> <br>  <span class=\"hljs-number\">400</span>a21:   c3                      retq<br></code></pre></div></td></tr></table></figure>\n\n<p>Âä†‰∏ä‰∫ÜrestrictÂÖ≥ÈîÆÂ≠óËøáÂêéÔºåÂêåÊ†∑ÂºÄÂêØ-O3‰ºòÂåñÔºåadd1ÂØπÂ∫îÁöÑÊ±áÁºñ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p>\n<p>Âä†‰∏äÂÖ≥ÈîÆÂ≠órestrictÂêéÔºåÁºñËØëÂô®ËÉΩÂ§üÁ°ÆËÆ§ÊåáÈíàaÂíåb‰∏çÂèØËÉΩÊåáÂêëÂêå‰∏Ä‰∏™ÂÜÖÂ≠òÂú∞ÂùÄÔºåÂõ†Ê≠§Âú®Ê±Ç*a + *bÊó∂ÔºåÊó†ËôöËÆøÈóÆÂÜÖÂ≠òÔºåÂõ†‰∏∫*aÂøÖÁÑ∂Á≠â‰∫éÁ´ãÂç≥Êï∞10Ôºå*bÂøÖÁÑ∂Á≠â‰∫éÁ´ãÂç≥Êï∞12„ÄÇ</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">add2</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>* __restrict  a, <span class=\"hljs-keyword\">int</span>* __restrict b)</span> </span><br><span class=\"hljs-function\"></span>&#123;<br>    *a = <span class=\"hljs-number\">10</span>;<br>    *b = <span class=\"hljs-number\">12</span>;<br>    <span class=\"hljs-keyword\">return</span> *a + *b ;<br>&#125;<br><span class=\"hljs-number\">0000000000400</span>a30 &lt;_Z4add2PiS_&gt;:<br>  <span class=\"hljs-number\">400</span>a30:   c7 <span class=\"hljs-number\">07</span> <span class=\"hljs-number\">0</span>a <span class=\"hljs-number\">00</span> <span class=\"hljs-number\">00</span> <span class=\"hljs-number\">00</span>       movl   $<span class=\"hljs-number\">0xa</span>,(%rdi) ; *a = <span class=\"hljs-number\">10</span><br>  <span class=\"hljs-number\">400</span>a36:   b8 <span class=\"hljs-number\">16</span> <span class=\"hljs-number\">00</span> <span class=\"hljs-number\">00</span> <span class=\"hljs-number\">00</span>          mov    $<span class=\"hljs-number\">0x16</span>,%eax  ; ÁªìÊûú = <span class=\"hljs-number\">22</span><br>  <span class=\"hljs-number\">400</span>a3b:   c7 <span class=\"hljs-number\">06</span> <span class=\"hljs-number\">0</span>c <span class=\"hljs-number\">00</span> <span class=\"hljs-number\">00</span> <span class=\"hljs-number\">00</span>       movl   $<span class=\"hljs-number\">0xc</span>,(%rsi) ; *b = <span class=\"hljs-number\">12</span><br>  <span class=\"hljs-number\">400</span>a41:   c3  <br></code></pre></div></td></tr></table></figure>\n\n<p>ÊúâÊó†restrictÂÖ≥ÈîÆÂ≠óÁöÑ‰∏§ÁßçÊÉÖÂÜµ‰∏ãÁöÑÊ±áÁºñÊåá‰ª§ÂèØÁúãÂà∞ÔºåÂêéËÄÖÊØîÂâçËÄÖÂ∞ëËÆøÈóÆ‰∏ÄÊ¨°ÂÜÖÂ≠òÔºå‰∏îÂ∞ëÊâßË°å‰∏ÄÊù°Êåá‰ª§„ÄÇÂ∞±ÊòØÂõ†‰∏∫Ê≤°Âä†restructÂÖ≥ÈîÆÂ≠óÊó∂ÔºåÁºñËØëÂô®‰∏çËÉΩÁ°ÆÂÆöÂà´ÁöÑÂú∞ÊñπÊòØ‰∏çÊòØ‰ºö‰øÆÊîπÊ≠§ÂÄºÔºåÊâÄ‰ª•‰ºöÂéªÁõ∏Â∫îÁöÑÂú∞ÂùÄÊü•Áúã„ÄÇ</p>\n<p><strong>ËøôÊ†∑ÂΩìÊàë‰ª¨ÊòéÁ°ÆÁü•ÈÅì‰∏§‰∏™ÊåáÈíà‰∏çÂèØËÉΩÊåáÂêëÂêå‰∏Ä‰∏™Âú∞ÂùÄÊó∂ÔºåÊàë‰ª¨Â∞±ÂèØ‰ª•ÈÄöËøá‰ΩøÁî®restrictÂÖ≥ÈîÆÂ≠óÊù•ËøõË°åÊÄßËÉΩ‰ºòÂåñ„ÄÇ</strong></p>\n<p>Ê≥®ÊÑè‰ΩøÁî®restrictÁöÑÊó∂ÂÄôÔºåÁ®ãÂ∫èÂëòÂøÖÈ°ªÁ°Æ‰øù‰∏ç‰ºöÂá∫Áé∞<strong>pointer aliasing</strong>ÔºåÂç≥Âêå‰∏ÄÂùóÂÜÖÂ≠òÊó†Ê≥ïÈÄöËøá‰∏§‰∏™Êàñ‰ª•‰∏äÁöÑÊåáÈíàÂèòÈáèÂêçËÆøÈóÆ„ÄÇ‰∏çÊª°Ë∂≥Ëøô‰∏™Êù°‰ª∂Âº∫Ë°åÊåáÂÆörestrictÔºåÂ∞Ü‰ºöÂá∫Áé∞<strong>underfined behavior</strong>„ÄÇ</p>\n<p>ÈÄöÂ∏∏ÁºñÂÜô‰ª£Á†ÅÊó∂‰ºöÂøΩÁï•pointer aliasingÁöÑÈóÆÈ¢ò„ÄÇÊõ¥Â∏∏ËßÅÊòØÂú®ÊÄßËÉΩÂàÜÊûêÊó∂ÔºåÈÄöËøáÂèçÊ±áÁºñÁúãÂà∞ÂæàÂ§öÂÜó‰ΩôÁöÑËØªÂèñÊåá‰ª§ÔºåÊâç‰ºöÊÉ≥Âà∞Âä†ÂÖ•restrictÂÖ≥ÈîÆÂ≠óÊù•ÊèêÂçáÊÄßËÉΩ„ÄÇ</p>\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p><a href=\"https://zhuanlan.zhihu.com/p/349726808\">C&#x2F;C++ÂÖ≥ÈîÆÂ≠ó‰πãrestrict - Áü•‰πé (zhihu.com)</a></p>\n<p><a href=\"https://github.com/ClickHouse/ClickHouse/pull/19946\">Improve performance of aggregate functions by alexey-milovidov ¬∑ Pull Request #19946 ¬∑ ClickHouse&#x2F;ClickHouse (github.com)</a></p>\n<p><a href=\"https://en.cppreference.com/w/c/language/restrict\">restrict type qualifier - cppreference.com</a></p>\n<p><a href=\"https://www.zhihu.com/question/41653775/answer/2535730128\">Â¶Ç‰ΩïÁêÜËß£CËØ≠Ë®ÄÂÖ≥ÈîÆÂ≠órestrictÔºü - Áü•‰πé (zhihu.com)</a></p>\n<p><a href=\"https://blog.csdn.net/qq_41822235/article/details/83479562\">(65Êù°Ê∂àÊÅØ) ÂÖ≥ÈîÆÂ≠ó_restrict___restrict_Ê•öÊ•öÂèØËñáÁöÑÂçöÂÆ¢-CSDNÂçöÂÆ¢</a></p>\n<p><a href=\"https://blog.csdn.net/qq_41950508/article/details/126619881?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-126619881-blog-102577325.pc_relevant_3mothn_strategy_recovery&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-126619881-blog-102577325.pc_relevant_3mothn_strategy_recovery&utm_relevant_index=1\">(65Êù°Ê∂àÊÅØ) „ÄêC++„ÄëÂÖ≥ÈîÆÂ≠órestrictÁöÑ‰ΩúÁî®_restrictÂÖ≥ÈîÆÂ≠óÁöÑ‰ΩúÁî®_‰∏çÁü•ÊâÄÊé™ÁöÑÊ∏£Ê∏£ËæâÁöÑÂçöÂÆ¢-CSDNÂçöÂÆ¢</a></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/26/intel001/",
            "url": "https://xingyuanjie.top/2023/02/26/intel001/",
            "title": "unroll_and_jam/nounroll_and_jam",
            "date_published": "2023-02-26T11:12:51.000Z",
            "content_html": "<h1 id=\"unroll-and-jam-x2F-nounroll-and-jam\"><a href=\"#unroll-and-jam-x2F-nounroll-and-jam\" class=\"headerlink\" title=\"unroll_and_jam&#x2F;nounroll_and_jam\"></a>unroll_and_jam&#x2F;nounroll_and_jam</h1><p>ÂêØÁî®ÊàñÁ¶ÅÁî®Âæ™ÁéØÂ±ïÂºÄÂíåÈòªÂ°û„ÄÇËøô‰∫õÊåá‰ª§Âè™ËÉΩÂ∫îÁî®‰∫éËø≠‰ª£forÂæ™ÁéØ„ÄÇ</p>\n<h2 id=\"Syntax\"><a href=\"#Syntax\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h2><p>#pragma unroll_and_jam\t#pragma unroll_and_jam (n)\t#pragma nounroll_and_jam</p>\n<h2 id=\"Arguments\"><a href=\"#Arguments\" class=\"headerlink\" title=\"Arguments\"></a>Arguments</h2><p>Â±ïÂºÄÂõ†Â≠êÔºåË°®Á§∫Â±ïÂºÄÂæ™ÁéØÁöÑÊ¨°Êï∞;ÂøÖÈ°ªÊòØ0Âà∞255‰πãÈó¥ÁöÑÊï¥Êï∞Â∏∏Êï∞</p>\n<h2 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h2><p>unroll_and_jamÊåá‰ª§ÈÉ®ÂàÜÂ±ïÂºÄÂ•ó‰∏≠ÊØîÊúÄÂÜÖÂ±ÇÂæ™ÁéØÊõ¥È´òÁöÑ‰∏Ä‰∏™ÊàñÂ§ö‰∏™Âæ™ÁéØÔºåÂπ∂Â∞ÜÁªìÊûúÂæ™ÁéØËûçÂêà&#x2F;ÈòªÂ°ûÂõû‰∏ÄËµ∑„ÄÇËøôÁßçËΩ¨Êç¢ÂÖÅËÆ∏Âú®Âæ™ÁéØ‰∏≠ËøõË°åÊõ¥Â§öÁöÑÈáçÁî®„ÄÇ</p>\n<p>Ê≠§pragmaÂØπÊúÄÂÜÖÂ±ÇÂæ™ÁéØÊó†Êïà„ÄÇÁ°Æ‰øùÁ¥ßÈöèÂÖ∂ÂêéÁöÑÂæ™ÁéØ‰∏çÊòØÁºñËØëÂô®ÂèëËµ∑ÁöÑ‰∫§Êç¢ÂÆåÊàêÂêéÁöÑÊúÄÂÜÖÂ±ÇÂæ™ÁéØ„ÄÇ</p>\n<p>ÊåáÂÆöÊ≠§pragmaÊòØÂêëÁºñËØëÂô®ÊèêÁ§∫Â±ïÂºÄÂíåÈòªÂ°ûÂ∫èÂàóÊòØÂêàÊ≥ï‰∏îÊúâÂà©ÂèØÂõæÁöÑ„ÄÇÁºñËØëÂô®‰ºöÂú®‰ªª‰ΩïÂèØËÉΩÁöÑÊÉÖÂÜµ‰∏ãÂêØÁî®ËøôÁßçËΩ¨Êç¢„ÄÇ</p>\n<p>ÂØπ‰∫éÂÆÉÂΩ±ÂìçÁöÑÊØè‰∏™forÂæ™ÁéØÔºåunroll_and_jamÊåá‰ª§ÂøÖÈ°ªÂú®forËØ≠Âè•‰πãÂâç„ÄÇÂ¶ÇÊûúÊåáÂÆö‰∫ÜnÔºå‰ºòÂåñÂô®Â∞ÜÂ±ïÂºÄÂæ™ÁéØnÊ¨°„ÄÇÂ¶ÇÊûúnË¢´ÁúÅÁï•ÊàñË∂ÖÂá∫ÂÖÅËÆ∏ÁöÑËåÉÂõ¥Ôºå‰ºòÂåñÂô®Â∞ÜÂàÜÈÖçÂ±ïÂºÄÂæ™ÁéØÁöÑÊ¨°Êï∞„ÄÇÁºñËØëÂô®ÈÄöËøáÊØîËæÉnÂíåÂæ™ÁéØËÆ°Êï∞ÁîüÊàêÊ≠£Á°ÆÁöÑ‰ª£Á†Å„ÄÇ</p>\n<p>Âè™ÊúâÂú®ËÆæÁΩÆ‰∫ÜÁºñËØëÂô®ÈÄâÈ°πO3Êó∂ÔºåÊâçÊîØÊåÅÊ≠§pragma„ÄÇunroll_and_jamÊåá‰ª§Â∞ÜË¶ÜÁõñ‰ªéÂëΩ‰ª§Ë°åÂ±ïÂºÄÂæ™ÁéØÁöÑ‰ªª‰ΩïËÆæÁΩÆ„ÄÇ</p>\n<p>ÂΩìÂ±ïÂºÄÂæ™ÁéØ‰ºöÂ¢ûÂä†ÂØÑÂ≠òÂô®ÂéãÂäõÂíå‰ª£Á†ÅÂ§ßÂ∞èÊó∂ÔºåÂèØËÉΩÈúÄË¶ÅÈò≤Ê≠¢Â±ïÂºÄÂµåÂ•óÂæ™ÁéØÊàñ‰∏çÂÆåÁæéÁöÑÂµåÂ•óÂæ™ÁéØ„ÄÇÂú®ËøôÁßçÊÉÖÂÜµ‰∏ãÔºå‰ΩøÁî®nounroll_and_jamÁºñËØëÊåá‰ª§„ÄÇnounroll_and_jam pragmaÊèêÁ§∫ÁºñËØëÂô®‰∏çË¶ÅÂ±ïÂºÄÊåáÂÆöÁöÑÂæ™ÁéØ„ÄÇ</p>\n<p><strong>Examples</strong></p>\n<p><strong>Use the unroll_and_jam pragma:</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-keyword\">int</span> a[<span class=\"hljs-number\">10</span>][<span class=\"hljs-number\">10</span>]; <br><span class=\"hljs-keyword\">int</span> b[<span class=\"hljs-number\">10</span>][<span class=\"hljs-number\">10</span>]; <br><span class=\"hljs-keyword\">int</span> c[<span class=\"hljs-number\">10</span>][<span class=\"hljs-number\">10</span>]; <br><span class=\"hljs-keyword\">int</span> d[<span class=\"hljs-number\">10</span>][<span class=\"hljs-number\">10</span>]; <br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">unroll</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> n)</span> </span>&#123;<br>¬†¬†¬†¬†<span class=\"hljs-keyword\">int</span> i,j,k;<br>¬†¬†¬†¬†<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">pragma</span> unroll_and_jam (6)</span><br>¬†¬†¬†¬†<span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">1</span>; i &lt; n; i++) &#123;<br>¬†¬†¬†¬†¬†¬†¬†<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">pragma</span> unroll_and_jam (6)</span><br>¬†¬†¬†¬†¬†¬†¬†<span class=\"hljs-keyword\">for</span> (j = <span class=\"hljs-number\">1</span>; j &lt; n; j++) &#123;<br>¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†<span class=\"hljs-keyword\">for</span> (k = <span class=\"hljs-number\">1</span>; k &lt; n; k++)&#123;<br>¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†a[i][j] += b[i][k]*c[k][j];<br>¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†&#125;<br>¬†¬†¬†¬†¬†¬†¬†&#125;<br>¬†¬†¬†¬†&#125; <br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p><a href=\"https://www.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top/compiler-reference/pragmas/intel-specific-pragma-reference/unroll-and-jam-nounroll-and-jam.html\">unroll_and_jam nounroll_and_jam (intel.com)</a></p>\n",
            "tags": [
                "C++",
                "Intel"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/26/cache001/",
            "url": "https://xingyuanjie.top/2023/02/26/cache001/",
            "title": "Cache Blocking Techniques„Äê‰∏™‰∫∫ÁøªËØë„Äë",
            "date_published": "2023-02-26T10:02:29.000Z",
            "content_html": "<h2 id=\"Cache-Blocking-Techniques\"><a href=\"#Cache-Blocking-Techniques\" class=\"headerlink\" title=\"Cache Blocking Techniques\"></a>Cache Blocking Techniques</h2><p><strong>ÊñáÁ´†Êù•Ê∫êÔºö</strong><a href=\"https://www.intel.cn/content/www/cn/zh/developer/articles/technical/cache-blocking-techniques.html\">Cache Blocking Techniques (intel.cn)</a></p>\n<p><strong>ÊñáÁ´†‰ΩúËÄÖÔºö</strong><a href=\"https://community.intel.com/cipcp26785/plugins/custom/intel/intel/custom.userprofile?id=3UpJu61CDTyShonSVJNwDw==&iv=8843887237217530\">Amanda K Sharp</a></p>\n<h3 id=\"Overview\"><a href=\"#Overview\" class=\"headerlink\" title=\"Overview\"></a>Overview</h3><p>‰∏ÄÁ±ªÈáçË¶ÅÁöÑÁÆóÊ≥ïÊõ¥ÊîπÊ∂âÂèäÂàÜÂùóÊï∞ÊçÆÁªìÊûÑ‰ª•ÈÄÇÂ∫îÁºìÂ≠ò„ÄÇÈÄöËøáÁªÑÁªáÊï∞ÊçÆÂÜÖÂ≠òËÆøÈóÆÔºåÂèØ‰ª•Áî®‰∏Ä‰∏™Â§ßÂæóÂ§öÁöÑÊï∞ÊçÆÈõÜÁöÑ‰∏Ä‰∏™Â∞èÂ≠êÈõÜÂä†ËΩΩÁºìÂ≠ò„ÄÇÊé•‰∏ãÊù•ÁöÑÊÉ≥Ê≥ïÊòØÂú®ÁºìÂ≠ò‰∏≠Â§ÑÁêÜËøô‰∏™Êï∞ÊçÆÂùó„ÄÇÈÄöËøáÂú®ÁºìÂ≠ò‰∏≠‰ΩøÁî®&#x2F;ÈáçÁî®Ëøô‰∫õÊï∞ÊçÆÔºåÊàë‰ª¨ÂáèÂ∞ë‰∫ÜËÆøÈóÆÂÜÖÂ≠òÁöÑÈúÄË¶Å(ÂáèÂ∞ëÂÜÖÂ≠òÂ∏¶ÂÆΩÂéãÂäõ)„ÄÇ</p>\n<h3 id=\"Topic\"><a href=\"#Topic\" class=\"headerlink\" title=\"Topic\"></a>Topic</h3><p>ÂàÜÂùóÊòØ‰∏ÄÁßçËëóÂêçÁöÑ‰ºòÂåñÊäÄÊúØÔºåÂèØ‰ª•Â∏ÆÂä©ÈÅøÂÖçËÆ∏Â§öÂ∫îÁî®Á®ãÂ∫è‰∏≠ÁöÑÂÜÖÂ≠òÂ∏¶ÂÆΩÁì∂È¢à„ÄÇÂàÜÂùóËÉåÂêéÁöÑÂÖ≥ÈîÆÊÄùÊÉ≥ÊòØÂà©Áî®Â∫îÁî®Á®ãÂ∫è‰∏≠Âõ∫ÊúâÁöÑÊï∞ÊçÆÈáçÁî®ÔºåÁ°Æ‰øùÊï∞ÊçÆÂú®Â§ö‰∏™Áî®ÈÄî‰πãÈó¥‰øùÊåÅÂú®ÁºìÂ≠ò‰∏≠„ÄÇÂàÜÂùóÂèØ‰ª•Âú®1-D„ÄÅ2-DÊàñ3-DÁ©∫Èó¥Êï∞ÊçÆÁªìÊûÑ‰∏äÊâßË°å„ÄÇ‰∏Ä‰∫õËø≠‰ª£Â∫îÁî®Á®ãÂ∫èÂèØ‰ª•Ëøõ‰∏ÄÊ≠•ÂèóÁõä‰∫éÂ§öÊ¨°Ëø≠‰ª£ÁöÑÂàÜÂùó(ÈÄöÂ∏∏Áß∞‰∏∫Êó∂Èó¥ÂàÜÂùó)Ôºå‰ª•Ëøõ‰∏ÄÊ≠•ÁºìËß£Â∏¶ÂÆΩÁì∂È¢à„ÄÇÂ∞±‰ª£Á†ÅÊõ¥ÊîπËÄåË®ÄÔºåÂàÜÂùóÈÄöÂ∏∏Ê∂âÂèäÂæ™ÁéØÂàÜÂâ≤Âíå‰∫§Êç¢ÁöÑÁªÑÂêà„ÄÇÂú®Â§ßÂ§öÊï∞Â∫îÁî®Á®ãÂ∫è‰ª£Á†Å‰∏≠ÔºåÈÄöËøáÂØπÂàÜÂùóÂõ†Â≠êËøõË°å‰∏Ä‰∫õÂèÇÊï∞ÂåñÔºåÂØπÊ∫êËøõË°åÊ≠£Á°ÆÁöÑÊõ¥ÊîπÔºåÁî®Êà∑ÂèØ‰ª•ÊúÄÂ•ΩÂú∞ÊâßË°åÂàÜÂùó„ÄÇ</p>\n<h3 id=\"Original-Source\"><a href=\"#Original-Source\" class=\"headerlink\" title=\"Original Source\"></a>Original Source</h3><figure class=\"highlight fortran\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs fortran\">for (body1 = <span class=\"hljs-number\">0</span>; body1 &lt; NBODIES; body1 ++) &#123;<br>   for (body2=<span class=\"hljs-number\">0</span>; body2 &lt; NBODIES; body2++) &#123;<br>     <span class=\"hljs-keyword\">OUT</span>[body1] += compute(body1, body2);<br>   &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>Âú®Êú¨‰æã‰∏≠ÔºåÊï∞ÊçÆ(body2)Êù•Ëá™ÂÜÖÂ≠ò„ÄÇÂÅáËÆæNBODIESÂæàÂ§ßÔºåÊàë‰ª¨Â∞ÜÊó†Ê≥ïÂú®ÁºìÂ≠ò‰∏≠ÈáçÁî®„ÄÇÊ≠§Â∫îÁî®Á®ãÂ∫èÂèóÂÜÖÂ≠òÂ∏¶ÂÆΩÈôêÂà∂„ÄÇÂ∫îÁî®Á®ãÂ∫èÂ∞Ü‰ª•ÂÜÖÂ≠òÂà∞CPUÁöÑÈÄüÂ∫¶ËøêË°åÔºåËÄå‰∏çÊòØÊúÄ‰Ω≥ÈÄüÂ∫¶„ÄÇ</p>\n<p><strong>Modified Source (with 1-D blocking):</strong></p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs fortran\">for (body2 = <span class=\"hljs-number\">0</span>; body2 &lt; NBODIES; body2 += <span class=\"hljs-keyword\">BLOCK</span>) &#123;<br>   for (body1=<span class=\"hljs-number\">0</span>; body1 &lt; NBODIES; body1 ++) &#123;<br>      for (body22=<span class=\"hljs-number\">0</span>; body22 &lt; <span class=\"hljs-keyword\">BLOCK</span>; body22 ++) &#123;<br>         <span class=\"hljs-keyword\">OUT</span>[body1] += compute(body1, body2 + body22);<br>      &#125;<br>   &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>Âú®‰øÆÊîπÂêéÁöÑ‰ª£Á†Å‰∏≠ÔºåÊï∞ÊçÆ(body22)Âú®ÁºìÂ≠ò‰∏≠Ë¢´‰øùÁïôÂíåÈáçÁî®Ôºå‰ªéËÄåËé∑ÂæóÊõ¥Â•ΩÁöÑÊÄßËÉΩ„ÄÇ</p>\n<p>‰æãÂ¶ÇÔºå‰∏äÈù¢ÁöÑ‰ª£Á†ÅÁâáÊÆµÊòæÁ§∫‰∫Ü‰∏Ä‰∏™ÂàÜÂùóNBody‰ª£Á†ÅÁöÑÁ§∫‰æã„ÄÇÊúâ‰∏§‰∏™Âæ™ÁéØ(body1Âíåbody2)ÈÅçÂéÜÊâÄÊúâ‰∏ª‰Ωì„ÄÇÈ°∂ÈÉ®ÁöÑÂéüÂßã‰ª£Á†ÅÊµÅÁªèÂÜÖÈÉ®Âæ™ÁéØ‰∏≠ÁöÑÊï¥‰∏™‰∏ª‰ΩìÈõÜÔºåÂπ∂‰∏îÂøÖÈ°ªÂú®ÊØèÊ¨°Ëø≠‰ª£‰∏≠‰ªéÂÜÖÂ≠ò‰∏≠Âä†ËΩΩbody2ÂÄº„ÄÇÂ∫ïÈÉ®ÁöÑÂàÜÂùó‰ª£Á†ÅÊòØÈÄöËøáÂ∞Übody2Âæ™ÁéØÂàÜËß£‰∏∫‰∏Ä‰∏™Ëø≠‰ª£Â§ö‰∏™BLOCK‰∏≠ÁöÑbodyÁöÑÂ§ñÈÉ®Âæ™ÁéØÂíå‰∏Ä‰∏™Ëø≠‰ª£BLOCK‰∏≠ÁöÑÂÖÉÁ¥†ÁöÑÂÜÖÈÉ®body22Âæ™ÁéØÔºåÂπ∂‰∫§Áªábody1Âíåbody2Âæ™ÁéØÊù•Ëé∑ÂæóÁöÑ„ÄÇËøôÊÆµ‰ª£Á†ÅÂú®body1Âæ™ÁéØÁöÑÂ§öÊ¨°Ëø≠‰ª£‰∏≠ÈáçÁî®‰∫Ü‰∏ÄÁªÑBLOCK body2ÂÄº„ÄÇÂ¶ÇÊûúBLOCKË¢´ÈÄâ‰∏≠Ôºå‰ΩøÂæóËøôÁªÑÂÄºÈÄÇÂêàÁºìÂ≠òÔºåÂÜÖÂ≠òÊµÅÈáèÂ∞±‰ºöÈôç‰Ωé‰∏Ä‰∏™BLOCKÁöÑÂõ†Â≠ê„ÄÇ</p>\n<p>‰ª•‰∏ãÊòØÊù•Ëá™OpenMP*ÁâàÊú¨ÁöÑNBodyÂü∫ÂáÜÊµãËØïÁöÑÁõ∏ÂÖ≥‰ª£Á†ÅÁâáÊÆµ(‰ΩøÁî®CHUNK_SIZEÂõ†Â≠êËøõË°åÂàÜÂùóÂ∫îÁî®)„ÄÇ</p>\n<p>Âú®ËøôÁßçÊÉÖÂÜµ‰∏ãÔºåÂæ™ÁéØÂ±ïÂºÄ-ÈòªÂ°ûËΩ¨Êç¢Ë¢´Ë°®Á§∫‰∏∫‰∏Ä‰∏™pragmaÔºåÂπ∂Áî±ÁºñËØëÂô®ÂÆåÊàê„ÄÇÂú®ËøôÁßçÊÉÖÂÜµ‰∏ãÔºåÁ†îÁ©∂-opt-reportÁöÑËæìÂá∫ÂèØ‰ª•Á°ÆËÆ§ÁºñËØëÂô®Á°ÆÂÆû‰∏∫‰Ω†ÁöÑÂæ™ÁéØÊâßË°å‰∫ÜÂ±ïÂºÄÈòªÂ°û‰ºòÂåñ„ÄÇ</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs fortran\">#define CHUNK_SIZE <span class=\"hljs-number\">8192</span><br><br>#pragma omp parallel <span class=\"hljs-keyword\">private</span>(body_start_index)<br>  for(body_start_index = <span class=\"hljs-number\">0</span>; body_start_index &lt; global_number_of_bodies; body_start_index += CHUNK_SIZE) &#123;<br>    <span class=\"hljs-built_in\">int</span> i;<br>    <span class=\"hljs-built_in\">int</span> body_end_index = body_start_index + CHUNK_SIZE;<br><br>    #pragma omp for <span class=\"hljs-keyword\">private</span>(i) schedule(guided)<br>    #pragma unroll_and_jam (<span class=\"hljs-number\">4</span>)<br>    for(i=starting_index; i&lt;ending_index; i++) &#123;<br>      <span class=\"hljs-built_in\">int</span> j;<br>      <span class=\"hljs-keyword\">TYPE</span> acc_x_0 = <span class=\"hljs-number\">0</span>, acc_y_0 = <span class=\"hljs-number\">0</span>, acc_z_0 = <span class=\"hljs-number\">0</span>;<br>      for(j=body_start_index; j&lt;body_end_index; j+=<span class=\"hljs-number\">1</span>) &#123;<br>        <span class=\"hljs-keyword\">TYPE</span> delta_x_0 = Input_Position_X[(j+<span class=\"hljs-number\">0</span>)] - Input_Position_X[i];<br>        <span class=\"hljs-keyword\">TYPE</span> delta_y_0 = Input_Position_Y[(j+<span class=\"hljs-number\">0</span>)] - Input_Position_Y[i];<br>        <span class=\"hljs-keyword\">TYPE</span> delta_z_0 = Input_Position_Z[(j+<span class=\"hljs-number\">0</span>)] - Input_Position_Z[i];<br><br>        <span class=\"hljs-keyword\">TYPE</span> gamma_0 = delta_x_0*delta_x_0 + delta_y_0*delta_y_0 + delta_z_0*delta_z_0 + epsilon_sqr;<br>        <span class=\"hljs-keyword\">TYPE</span> s_0 = Mass[j+<span class=\"hljs-number\">0</span>]/(gamma_0 * <span class=\"hljs-built_in\">SQRT</span>(gamma_0));<br>        acc_x_0 += s_0*delta_x_0;<br>        acc_y_0 += s_0*delta_y_0;<br>        acc_z_0 += s_0*delta_z_0;<br>      &#125;<br>      Output_Acceleration[<span class=\"hljs-number\">3</span>*(i+<span class=\"hljs-number\">0</span>)+<span class=\"hljs-number\">0</span>] += acc_x_0;<br>      Output_Acceleration[<span class=\"hljs-number\">3</span>*(i+<span class=\"hljs-number\">0</span>)+<span class=\"hljs-number\">1</span>] += acc_y_0;<br>      Output_Acceleration[<span class=\"hljs-number\">3</span>*(i+<span class=\"hljs-number\">0</span>)+<span class=\"hljs-number\">2</span>] += acc_z_0;<br>    &#125;<br>  &#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>‰∏ãÈù¢ÊòØFortran‰∏≠ÁöÑ‰∏Ä‰∏™Áü©Èòµ‰πòÊ≥ï‰ª£Á†ÅÁ§∫‰æãÔºåÂÖ∂‰∏≠Áî®Êà∑ÊâßË°åÈ´òÁ∫ßÂùóÂ±ïÂºÄ-ÂàÜÂùóËΩ¨Êç¢(Âú®‰øÆÊîπÁâàÊú¨‰∏≠)ÔºåÊ∂âÂèäÊú¨Âú∞Â§çÂà∂Êï∞ÁªÑ‰ª•Ëé∑ÂæóÊúÄ‰Ω≥ÊÄßËÉΩ„ÄÇ</p>\n<p><strong>Fortran Source Example:</strong></p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs fortran\"><span class=\"hljs-keyword\">do</span> j=<span class=\"hljs-number\">1</span>,N<br>  <span class=\"hljs-keyword\">do</span> k = <span class=\"hljs-number\">1</span>,N<br>    <span class=\"hljs-keyword\">do</span> i = <span class=\"hljs-number\">1</span>,N<br>      c(i,j) = c(i,j) + a(i,k) * b(k,j)<br>    <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br>  <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br><span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br></code></pre></div></td></tr></table></figure>\n\n<p><strong>Modified Fortran Source:</strong></p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs fortran\"><span class=\"hljs-keyword\">do</span> JJ = <span class=\"hljs-number\">1</span>, N, TJ<br><br>       <span class=\"hljs-keyword\">do</span> KK = <span class=\"hljs-number\">1</span>, N, TK<br>         <span class=\"hljs-keyword\">do</span> jjj = <span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">min</span>(tj,N-jj+<span class=\"hljs-number\">1</span>)                     <span class=\"hljs-comment\">! BCOPY - no transpose</span><br>           <span class=\"hljs-keyword\">do</span> kkk = <span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">min</span>(tk,N-kk+<span class=\"hljs-number\">1</span>)<br>             p(kkk,jjj-<span class=\"hljs-number\">1</span>+<span class=\"hljs-number\">1</span>) = B(kk+kkk-<span class=\"hljs-number\">1</span>, jj+jjj-<span class=\"hljs-number\">1</span>)<br>           <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br>         <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br>         <span class=\"hljs-keyword\">do</span> II = <span class=\"hljs-number\">1</span>, N, TI<br>           <span class=\"hljs-keyword\">do</span> iii = <span class=\"hljs-number\">1</span>,<br>             <span class=\"hljs-built_in\">min</span>(ti,N-ii+<span class=\"hljs-number\">1</span>)                   <span class=\"hljs-comment\">!ACOPY - transpose</span><br>             <span class=\"hljs-keyword\">do</span> kkk = <span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">min</span>(tk,N-kk+<span class=\"hljs-number\">1</span>)<br>                Q(kkk,iii) = A(ii+iii-<span class=\"hljs-number\">1</span>, kk+kkk-<span class=\"hljs-number\">1</span>)<br>             <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br>           <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br>           <span class=\"hljs-keyword\">do</span> J = <span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">min</span>(tj,N-jj+<span class=\"hljs-number\">1</span>), <span class=\"hljs-number\">4</span><br>             <span class=\"hljs-keyword\">do</span> I = <span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">min</span>(ti,N-ii+<span class=\"hljs-number\">1</span>), <span class=\"hljs-number\">2</span><br>                t1 = <span class=\"hljs-number\">0</span> ; t2 = <span class=\"hljs-number\">0</span> ; t5 = <span class=\"hljs-number\">0</span> ; t6 = <span class=\"hljs-number\">0</span> ; t9 = <span class=\"hljs-number\">0</span> ; t10 = <span class=\"hljs-number\">0</span> ; t13 =<span class=\"hljs-number\">0</span> ; t14 = <span class=\"hljs-number\">0</span><br>                <span class=\"hljs-comment\">!DIR$ vector aligned                      !DIR$ unroll(2)</span><br>                <span class=\"hljs-keyword\">do</span> K = <span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">min</span>(TK,N-kk+<span class=\"hljs-number\">1</span>)      <span class=\"hljs-comment\">! Innermost loop, vectorized and unrolled by 2 after that</span><br>                   qi = Q(K,I)           ;    qi1 = Q(K,I+<span class=\"hljs-number\">1</span>)  <br>                   t1 = t1+qi*P(K,J)     ;    t2 = t2+ qi1*P(K,J)<br>                   t5 = t5+ qi*P(K,J+<span class=\"hljs-number\">1</span>)  ;    t6 = t6+ qi1*P(K,J+<span class=\"hljs-number\">1</span>)<br>                   t9 = t9+ qi*P(K,J+<span class=\"hljs-number\">2</span>)  ;    t10 = t10+ qi1*P(K,J+<span class=\"hljs-number\">2</span>)<br>                   t13 = t13+ qi*P(K,J+<span class=\"hljs-number\">3</span>);    t14 = t14+qi1*P(K,J+<span class=\"hljs-number\">3</span>)<br>                <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br>               c(i+ii-<span class=\"hljs-number\">1</span>,j+jj-<span class=\"hljs-number\">1</span>) = c(i+ii-<span class=\"hljs-number\">1</span>,j+jj-<span class=\"hljs-number\">1</span>) +t1          ; c(i+<span class=\"hljs-number\">1</span>+ii-<span class=\"hljs-number\">1</span>,j+jj-<span class=\"hljs-number\">1</span>) = c(i+<span class=\"hljs-number\">1</span>+ii-<span class=\"hljs-number\">1</span>,j+jj-<span class=\"hljs-number\">1</span>) + t2<br>               c(i+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">1</span>+jj-<span class=\"hljs-number\">1</span>) = c(i+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">1</span>+jj-<span class=\"hljs-number\">1</span>) + t5     ; c(i+<span class=\"hljs-number\">1</span>+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">1</span>+jj-<span class=\"hljs-number\">1</span>) = c(i+<span class=\"hljs-number\">1</span>+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">1</span>+jj-<span class=\"hljs-number\">1</span>) + t6<br>               c(i+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">2</span>+jj-<span class=\"hljs-number\">1</span>) = c(i+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">2</span>+jj-<span class=\"hljs-number\">1</span>) + t9     ; c(i+<span class=\"hljs-number\">1</span>+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">2</span>+jj-<span class=\"hljs-number\">1</span>) = c(i+<span class=\"hljs-number\">1</span>+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">2</span>+jj-<span class=\"hljs-number\">1</span>) + t10<br>               c(i+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">3</span>+jj-<span class=\"hljs-number\">1</span>) = c(i+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">3</span>+jj-<span class=\"hljs-number\">1</span>) + t13    ; c(i+<span class=\"hljs-number\">1</span>+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">3</span>+jj-<span class=\"hljs-number\">1</span>) = c(i+<span class=\"hljs-number\">1</span>+ii-<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">3</span>+jj-<span class=\"hljs-number\">1</span>) + t14<br>             <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br>           <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br>         <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br>       <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br>     <span class=\"hljs-keyword\">end</span> <span class=\"hljs-keyword\">do</span><br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"Take-Aways\"><a href=\"#Take-Aways\" class=\"headerlink\" title=\"Take Aways\"></a>Take Aways</h3><p>ÁºìÂ≠òÂàÜÂùóÊòØ‰∏ÄÁßçÈáçÊñ∞ÂÆâÊéíÊï∞ÊçÆËÆøÈóÆÁöÑÊäÄÊúØÔºåÂ∞ÜÊï∞ÊçÆÂ≠êÈõÜ(Âùó)ÊãâÂÖ•ÁºìÂ≠òÔºåÂπ∂ÂØπËøô‰∏™ÂùóËøõË°åÊìç‰ΩúÔºå‰ª•ÈÅøÂÖç‰∏çÂæó‰∏çÈáçÂ§ç‰ªé‰∏ªÂ≠ò‰∏≠Ëé∑ÂèñÊï∞ÊçÆ„ÄÇÊ≠£Â¶Ç‰∏äÈù¢ÁöÑÁ§∫‰æãÊâÄÁ§∫ÔºåÂèØ‰ª•‰ª•ËøôÁßçÊñπÂºèÊâãÂä®ÂàÜÂùóÂæ™ÁéØÊï∞ÊçÆ‰ª•ÈáçÁî®ÁºìÂ≠ò„ÄÇ</p>\n<p>ÂØπ‰∫éÊÄßËÉΩÂÖ≥ÈîÆÁöÑÂæ™ÁéØÔºåÂÖ∂‰∏≠ÊÄßËÉΩÂàÜÊûêË°®ÊòéÂÜÖÂ≠òÂ∏¶ÂÆΩÈôêÂà∂ÔºåËÄå-opt-reportÊòæÁ§∫ÁºñËØëÂô®Ê≤°Êúâ‰ª•ÊúÄ‰Ω≥ÊñπÂºèÂàÜÂùóÂæ™ÁéØÔºåÊÇ®ÂèØ‰ª•ËÄÉËôëÊâãÂä®Â±ïÂºÄÂæ™ÁéØÔºå‰ª•‰æøÊõ¥Â•ΩÂú∞ÂàÜÂùóÊï∞ÊçÆ‰ª•ÂÆûÁé∞ÁºìÂ≠òÈáçÁî®„ÄÇ</p>\n<h3 id=\"NEXT-STEPS\"><a href=\"#NEXT-STEPS\" class=\"headerlink\" title=\"NEXT STEPS\"></a>NEXT STEPS</h3><p>ÊÇ®ÂøÖÈ°ª‰ªéÂ§¥Âà∞Â∞æÈòÖËØªÊú¨ÊåáÂçóÔºå‰ΩøÁî®ÂÜÖÁΩÆÁöÑË∂ÖÈìæÊé•Êù•ÊåáÂØºÊÇ®Âú®Intel¬ÆXeonÂ§ÑÁêÜÂô®‰∏äÊàêÂäüÂú∞ÁßªÊ§çÂíåË∞É‰ºòÂ∫îÁî®Á®ãÂ∫è„ÄÇÊú¨ÊåáÂçó‰∏≠Êèê‰æõÁöÑË∑ØÂæÑÂèçÊò†‰∫ÜËé∑ÂæóÊúÄ‰Ω≥Â∫îÁî®Á®ãÂ∫èÊÄßËÉΩÊâÄÈúÄÁöÑÊ≠•È™§„ÄÇ</p>\n",
            "tags": [
                "Cache",
                "Blocking"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/26/openmp008/",
            "url": "https://xingyuanjie.top/2023/02/26/openmp008/",
            "title": "OpenMP:Internal Control Variables",
            "date_published": "2023-02-26T09:36:54.000Z",
            "content_html": "<h2 id=\"2-5-Internal-Control-Variables\"><a href=\"#2-5-Internal-Control-Variables\" class=\"headerlink\" title=\"2.5 Internal Control Variables\"></a>2.5 Internal Control Variables</h2><p>OpenMPÂÆûÁé∞ÂøÖÈ°ªÂÉèÂÜÖÈÉ®ÊéßÂà∂ÂèòÈáè(icv)‰∏ÄÊ†∑ÊéßÂà∂OpenMPÁ®ãÂ∫èÁöÑË°å‰∏∫„ÄÇËøô‰∫õicvÂ≠òÂÇ®ÁöÑ‰ø°ÊÅØÂåÖÊã¨Áî®‰∫éÊú™Êù•Âπ∂Ë°åÂå∫ÂüüÁöÑÁ∫øÁ®ãÊï∞„ÄÅÁî®‰∫éÂ∑•‰ΩúÂÖ±‰∫´Âæ™ÁéØÁöÑË∞ÉÂ∫¶‰ª•ÂèäÊòØÂê¶ÂêØÁî®ÂµåÂ•óÂπ∂Ë°å„ÄÇÂú®Á®ãÂ∫èÊâßË°åÊúüÈó¥ÔºåicvÂú®‰∏çÂêåÁöÑÊó∂Èó¥Ë¢´Ëµã‰∫àÂÄº(Â¶Ç‰∏ãÊâÄËø∞)„ÄÇÂÆÉ‰ª¨ÊòØÁî±ÂÆûÁé∞Êú¨Ë∫´ÂàùÂßãÂåñÁöÑÔºåÂπ∂‰∏îÂèØ‰ª•ÈÄöËøáOpenMPÁéØÂ¢ÉÂèòÈáèÂíåË∞ÉÁî®OpenMP API‰æãÁ®ãÊù•ËµãÂÄº„ÄÇÁ®ãÂ∫èÂè™ËÉΩÈÄöËøáOpenMP API‰æãÁ®ãÊ£ÄÁ¥¢Ëøô‰∫õicvÁöÑÂÄº„ÄÇ</p>\n<p>Âá∫‰∫éËØ¥ÊòéÁöÑÁõÆÁöÑÔºåÊú¨ÊñáÊ°£‰ΩøÁî®ÁâπÂÆöÁöÑÂêçÁß∞Êù•ÂºïÁî®icvÔºå‰ΩÜÊòØÂÆûÁé∞‰∏çÈúÄË¶Å‰ΩøÁî®Ëøô‰∫õÂêçÁß∞Ôºå‰πü‰∏çÈúÄË¶ÅÊèê‰æõËÆøÈóÆÂèòÈáèÁöÑ‰ªª‰ΩïÊñπÊ≥ïÔºåÈô§ÈùûÈÄöËøáÁ¨¨<a href=\"https://www.openmp.org/spec-html/5.0/openmpsu31.html#x50-680002.5.2\">189</a>È°µÁ¨¨<a href=\"https://www.openmp.org/spec-html/5.0/openmpsu31.html#x50-680002.5.2\">2.5.2ËäÇ</a>ÊâÄÁ§∫ÁöÑÊñπÊ≥ï„ÄÇ</p>\n<p>2.5.1 <a href=\"https://www.openmp.org/spec-html/5.0/openmpsu30.html#x49-670002.5.1\">ICV Descriptions</a></p>\n<p>2.5.2 <a href=\"https://www.openmp.org/spec-html/5.0/openmpsu31.html#x50-680002.5.2\">ICV Initialization</a></p>\n<p>2.5.3 <a href=\"https://www.openmp.org/spec-html/5.0/openmpsu32.html#x51-710002.5.3\">Modifying and Retrieving ICV Values</a></p>\n<p>2.5.4 <a href=\"https://www.openmp.org/spec-html/5.0/openmpsu33.html#x52-740002.5.4\">How ICVs are Scoped</a></p>\n<p>‚Äã\t\t 2.5.4.1 <a href=\"https://www.openmp.org/spec-html/5.0/openmpsu33.html#x52-760002.5.4.1\">How the Per-Data Environment ICVs Work</a></p>\n<p>2.5.5 <a href=\"https://www.openmp.org/spec-html/5.0/openmpsu34.html#x53-770002.5.5\">ICV Override Relationships</a></p>\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p><a href=\"https://www.openmp.org/spec-html/5.0/openmpse13.html#x48-660002.5\">Internal Control Variables (openmp.org)</a></p>\n",
            "tags": [
                "OpenMP"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/26/openmp007/",
            "url": "https://xingyuanjie.top/2023/02/26/openmp007/",
            "title": "OpenMPÁ∫øÁ®ãÁªëÂÆö„ÄêÊú™ÂÆåÁªì„Äë",
            "date_published": "2023-02-26T09:06:59.000Z",
            "content_html": "<h2 id=\"OpenMPÁ∫øÁ®ãÁªëÂÆö\"><a href=\"#OpenMPÁ∫øÁ®ãÁªëÂÆö\" class=\"headerlink\" title=\"OpenMPÁ∫øÁ®ãÁªëÂÆö\"></a>OpenMPÁ∫øÁ®ãÁªëÂÆö</h2><h3 id=\"OpenMPÁõ∏ÂÖ≥ÁéØÂ¢ÉÂèòÈáè‰∏éÊåá‰ª§\"><a href=\"#OpenMPÁõ∏ÂÖ≥ÁéØÂ¢ÉÂèòÈáè‰∏éÊåá‰ª§\" class=\"headerlink\" title=\"OpenMPÁõ∏ÂÖ≥ÁéØÂ¢ÉÂèòÈáè‰∏éÊåá‰ª§\"></a>OpenMPÁõ∏ÂÖ≥ÁéØÂ¢ÉÂèòÈáè‰∏éÊåá‰ª§</h3><h4 id=\"OMP-PROC-BIND\"><a href=\"#OMP-PROC-BIND\" class=\"headerlink\" title=\"OMP_PROC_BIND\"></a>OMP_PROC_BIND</h4><p>OMP_PROC_BINDÁéØÂ¢ÉÂèòÈáèËÆæÁΩÆbind-var ICVÁöÑÂàùÂßãÂÄº„ÄÇËøô‰∏™ÁéØÂ¢ÉÂèòÈáèÁöÑÂÄºÂèØ‰ª•ÊòØtrue„ÄÅfalseÔºåÊàñËÄÖÁî®ÈÄóÂè∑ÂàÜÈöîÁöÑmaster„ÄÅcloseÊàñspreadÂàóË°®„ÄÇÂàóË°®ÁöÑÂÄºËÆæÁΩÆ‰∫ÜÂØπÂ∫îÂµåÂ•óÁ∫ßÂà´ÁöÑÂπ∂Ë°åÂå∫ÂüüË¶Å‰ΩøÁî®ÁöÑÁ∫øÁ®ã‰∫≤ÂíåÁ≠ñÁï•„ÄÇ</p>\n<p>Â¶ÇÊûúÁéØÂ¢ÉÂèòÈáèËÆæÁΩÆ‰∏∫falseÔºåÂàôÊâßË°åÁéØÂ¢ÉÂèØËÉΩ‰ºöÂú®OpenMP‰ΩçÁΩÆ‰πãÈó¥ÁßªÂä®OpenMPÁ∫øÁ®ãÔºåÁ∫øÁ®ãÁõ∏ÂÖ≥ÊÄßÂ∞ÜË¢´Á¶ÅÁî®ÔºåÂπ∂Ë°åÊûÑÈÄ†‰∏äÁöÑproc_bindÂ≠êÂè•Â∞ÜË¢´ÂøΩÁï•„ÄÇ</p>\n<p>Âê¶ÂàôÔºåÊâßË°åÁéØÂ¢É‰∏çÂ∫îËØ•Âú®OpenMP‰ΩçÁΩÆ‰πãÈó¥ÁßªÂä®OpenMPÁ∫øÁ®ãÔºåÁ∫øÁ®ã‰∫≤ÂíåÊÄßË¢´ÂêØÁî®ÔºåÂπ∂‰∏îÂàùÂßãÁ∫øÁ®ãË¢´ÁªëÂÆöÂà∞OpenMP‰ΩçÁΩÆÂàóË°®‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™‰ΩçÁΩÆÔºåÂÖà‰∫éÁ¨¨‰∏Ä‰∏™Ê¥ªÂä®Âπ∂Ë°åÂå∫Âüü„ÄÇ</p>\n<p>Â¶ÇÊûúOMP_PROC_BINDÁéØÂ¢ÉÂèòÈáè‰∏≠ÁöÑÂÄº‰∏çÊòØtrue„ÄÅfalseÊàñmaster„ÄÅcloseÊàñspreadÁöÑÈÄóÂè∑ÂàÜÈöîÂàóË°®ÔºåÂàôÁ®ãÂ∫èÁöÑË°å‰∏∫ÊòØÂÆûÁé∞ÂÆö‰πâÁöÑ„ÄÇÂ¶ÇÊûúÂàùÂßãÁ∫øÁ®ã‰∏çËÉΩÁªëÂÆöÂà∞OpenMP‰ΩçÁΩÆÂàóË°®‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™‰ΩçÁΩÆÔºåÂàôËØ•Ë°å‰∏∫‰πüÊòØÂÆûÁé∞ÂÆö‰πâÁöÑ„ÄÇ</p>\n<p>‰æãÂ≠êÔºö</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">setenv OMP_PROC_BIND false<br>setenv OMP_PROC_BIND &quot;spread,\tspread, close&quot;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h3><p><a href=\"https://harrychen.xyz/2022/05/08/numa-processor-and-cpu-binding/\">NUMA Â§ÑÁêÜÂô®‰∏éËøõÁ®ãÁªëÂÆö - Harry Chen‚Äôs Blog</a></p>\n<p><a href=\"https://www.openmp.org/spec-html/5.0/openmpse52.html\">OMP_PROC_BIND (openmp.org)</a></p>\n<p><a href=\"https://www.openmp.org/spec-html/5.0/openmpsu36.html#x56-900002.6.2\">Controlling OpenMP Thread Affinity</a></p>\n<p><a href=\"https://www.openmp.org/spec-html/5.0/openmpse53.html\">OMP_PLACES (openmp.org)</a></p>\n<p><a href=\"https://www.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top/optimization-and-programming/openmp-support/openmp-library-support/thread-affinity-interface.html\">Thread Affinity Interface (intel.com)</a></p>\n",
            "tags": [
                "OpenMP"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/24/Linux003/",
            "url": "https://xingyuanjie.top/2023/02/24/Linux003/",
            "title": "Âü∫‰∫éGDBÁöÑÁ®ãÂ∫èË∞ÉËØï",
            "date_published": "2023-02-24T08:50:20.000Z",
            "content_html": "<h2 id=\"Âü∫‰∫éGDBÁöÑÁ®ãÂ∫èË∞ÉËØï\"><a href=\"#Âü∫‰∫éGDBÁöÑÁ®ãÂ∫èË∞ÉËØï\" class=\"headerlink\" title=\"Âü∫‰∫éGDBÁöÑÁ®ãÂ∫èË∞ÉËØï\"></a>Âü∫‰∫éGDBÁöÑÁ®ãÂ∫èË∞ÉËØï</h2><h3 id=\"Á®ãÂ∫èË∞ÉËØïÂ∑•ÂÖ∑GDB\"><a href=\"#Á®ãÂ∫èË∞ÉËØïÂ∑•ÂÖ∑GDB\" class=\"headerlink\" title=\"Á®ãÂ∫èË∞ÉËØïÂ∑•ÂÖ∑GDB\"></a>Á®ãÂ∫èË∞ÉËØïÂ∑•ÂÖ∑GDB</h3><p>ÁºñËØëÂô®GCCÔºåÈ°πÁõÆÊûÑÂª∫Â∑•ÂÖ∑MakeÔºàÂèàÁß∞gmakeÔºâÔºå‰ª•ÂèäGDB„ÄÇ</p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224165344672.png\" alt=\"image-20230224165344672\"></p>\n<p><strong>GDBÊòØ‰ªÄ‰πàÔºü</strong></p>\n<p>GDBÔºöGNU symbolic debuggerÊòØLinux‰∏ãÂ∏∏Áî®ÁöÑÁ®ãÂ∫èË∞ÉËØïÂô®</p>\n<p><strong>GDBÂèØ‰ª•ÂÅö‰ªÄ‰πàÔºü</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224165606636.png\" alt=\"image-20230224165606636\"></p>\n<p><strong>GDBÂÆòÁΩëÔºö</strong><a href=\"https://www.sourceware.org/gdb/\">GDB: The GNU Project Debugger (sourceware.org)</a></p>\n<h3 id=\"Ë∞ÉËØïÊ°à‰æã‰∏Ä\"><a href=\"#Ë∞ÉËØïÊ°à‰æã‰∏Ä\" class=\"headerlink\" title=\"Ë∞ÉËØïÊ°à‰æã‰∏Ä\"></a>Ë∞ÉËØïÊ°à‰æã‰∏Ä</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">unsigned</span> <span class=\"hljs-keyword\">long</span> <span class=\"hljs-keyword\">long</span> <span class=\"hljs-keyword\">int</span> n,sum;<br>    n = <span class=\"hljs-number\">1</span>;<br>    sum = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">while</span>( n &lt;= <span class=\"hljs-number\">100</span>)<br>    &#123;<br>        sum = sum + n;<br>        n = n + <span class=\"hljs-number\">1</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>Âú®ÁºñËØëÁ®ãÂ∫èÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÂä†Ë∞ÉËØïÈÄâÈ°πÔºö -g</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">gcc gdb001.c -g -o ex1<br></code></pre></div></td></tr></table></figure>\n\n<p>‰ΩøÁî®gdbÂêØÂä®Á®ãÂ∫èÔºö</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">gdb ./ex1<br></code></pre></div></td></tr></table></figure>\n\n<p><strong>ËøõÂÖ•gdbË∞ÉËØïÁéØÂ¢É</strong>Ôºö</p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224170419171.png\" alt=\"image-20230224170419171\"></p>\n<p><strong>Âú®Ë∞ÉËØïÁéØÂ¢É‰∏≠Ôºö‰ΩøÁî®lÈÄâÈ°π‰ºöÊòæÁ§∫Â∏¶Ë°åÂè∑ÁöÑÊ∫ê‰ª£Á†Å</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224170620617.png\" alt=\"image-20230224170620617\"></p>\n<p><strong>‰ΩÜÊòØÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºålÈÄâÈ°πÂè™ÊòæÁ§∫10Ë°åÊ∫ê‰ª£Á†ÅÔºåÂ¶ÇÊûúÊü•ÁúãÂêéÁª≠‰ª£Á†ÅÔºåÂú®Ë∞ÉËØïÁïåÈù¢EnterÂõûËΩ¶Âç≥ÂèØ</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224170804048.png\" alt=\"image-20230224170804048\"></p>\n<p><strong>Âú®Á¨¨7Ë°åÊ∫ê‰ª£Á†ÅÂ§ÑÊâìÊñ≠ÁÇπÔºö</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224171858691.png\" alt=\"image-20230224171858691\"></p>\n<p><strong>ËøêË°åÁ®ãÂ∫èÔºåÈÅáÂà∞Êñ≠ÁÇπÂÅúÊ≠¢Ôºö</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224172105514.png\" alt=\"image-20230224172105514\"></p>\n<p><strong>Êü•Áúã‰ª£Á†Å‰∏≠ÂèòÈáènÁöÑÂÄº</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224172200662.png\" alt=\"image-20230224172200662\"></p>\n<p>ÂΩìÂâçnÁöÑÂÄº‰∏∫1Ôºå$1Ë°®Á§∫ËØ•ÂèòÈáèÊâÄÂú®Â≠òÂÇ®Âå∫ÁöÑÂêçÁß∞</p>\n<p><strong>Âú®Á®ãÂ∫èÁ¨¨12Ë°åÂ§ÑÊâìÊñ≠ÁÇπ</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224172321002.png\" alt=\"image-20230224172321002\"></p>\n<p><strong>ÁªßÁª≠ÊâßË°åÁ®ãÂ∫è</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224172356622.png\" alt=\"image-20230224172356622\"></p>\n<p><strong>Êü•ÁúãÂΩìÂâçnÂèòÈáèÁöÑÂÄº</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224172422998.png\" alt=\"image-20230224172422998\"></p>\n<p>ÂΩìÂâçnÁöÑÂÄº‰∏∫101</p>\n<p><strong>ÈÄÄÂá∫Ë∞ÉËØï</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224172456626.png\" alt=\"image-20230224172456626\"></p>\n<p><strong>Êü•ÁúãË∞ÉËØïÁéØÂ¢ÉÊâÄÊúâÊñ≠ÁÇπÔºö</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224172650422.png\" alt=\"image-20230224172650422\"></p>\n<p><strong>Âà†Èô§Á¨¨7Ë°åÁöÑÊñ≠ÁÇπÔºö</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224172745323.png\" alt=\"image-20230224172745323\"></p>\n<p><strong>Á¶ÅÁî®ÁºñÂè∑‰∏∫2ÁöÑÊñ≠ÁÇπÔºö</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224172832507.png\" alt=\"image-20230224172832507\"></p>\n<p>Ê≥®ÊÑèÊñ≠ÁÇπÁä∂ÊÄÅEnb(enable)Áî±yÂèòÊàênÔºå‰ª£Ë°®Á¶ÅÁî®</p>\n<p><strong>ÊÅ¢Â§çÁºñÂè∑‰∏∫2ÁöÑÊñ≠ÁÇπÔºö</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224173006975.png\" alt=\"image-20230224173006975\"></p>\n<h3 id=\"Â∞èÁªì\"><a href=\"#Â∞èÁªì\" class=\"headerlink\" title=\"Â∞èÁªì\"></a>Â∞èÁªì</h3><p>GDBÊúâ‰∏âÁßçË∞ÉËØïÊ®°ÂºèÔºö</p>\n<p><strong>Ë∞ÉËØïÊâßË°åÁ®ãÂ∫èÔºö</strong>ÔºàÂâçÈù¢ÁöÑÊ°à‰æãÔºâÔºåÊ≥®ÊÑèÁºñËØëÂä†Ë∞ÉËØï‰ø°ÊÅØ(-g)</p>\n<p><strong>Ë∞ÉËØïcoreÊñá‰ª∂   Ôºö</strong>ÈúÄË¶ÅÂØπÁ≥ªÁªüËÆæÁΩÆÁöÑcoreÊñá‰ª∂Â§ßÂ∞è‰ΩúË∞ÉÊï¥Ôºàulimit - c unlimlitedÔºâÔºåÂê¶ÂàôÂèØËÉΩÊó†Ê≥ï\t\t\t\t\t\t\t  ‰∫ßÁîücoreÊñá‰ª∂</p>\n<p><strong>Ë∞ÉËØïÊ≠£Âú®ÊâßË°åÁöÑÁ®ãÂ∫èÔºàgdb attachÔºâ Ôºö</strong>TopÊâæÂà∞ËøõÁ®ãÁºñÂè∑pidÔºåGdb attach pid</p>\n<p><strong>GDBÁªìÊûÑÁªÑÊàêÔºö</strong></p>\n<p><img src=\"/2023/02/24/Linux003/image-20230224173613247.png\" alt=\"image-20230224173613247\"></p>\n<h3 id=\"Â∏∏Áî®Ë∞ÉËØïÊåá‰ª§Ôºö\"><a href=\"#Â∏∏Áî®Ë∞ÉËØïÊåá‰ª§Ôºö\" class=\"headerlink\" title=\"Â∏∏Áî®Ë∞ÉËØïÊåá‰ª§Ôºö\"></a>Â∏∏Áî®Ë∞ÉËØïÊåá‰ª§Ôºö</h3><h4 id=\"ÂêØÂä®Êåá‰ª§\"><a href=\"#ÂêØÂä®Êåá‰ª§\" class=\"headerlink\" title=\"ÂêØÂä®Êåá‰ª§\"></a>ÂêØÂä®Êåá‰ª§</h4><p>Ë∞ÉËØïÁ®ãÂ∫èÔºögdb program</p>\n<p>Ê†πÊçÆcoreÊñá‰ª∂Ë∞ÉËØïÁ®ãÂ∫èÔºögdb program corefile</p>\n<p>Ë∑üË∏™Ë∞ÉËØïËøõÁ®ãÔºögdb attach pid</p>\n<h4 id=\"Á®ãÂ∫èËøêË°å\"><a href=\"#Á®ãÂ∫èËøêË°å\" class=\"headerlink\" title=\"Á®ãÂ∫èËøêË°å\"></a>Á®ãÂ∫èËøêË°å</h4><p>runÔºåËØ•ÂëΩ‰ª§‰ºöËøêË°åËá≥Á®ãÂ∫èÁªìÊùüÔºåÈô§ÈùûÈÅáÂà∞Êñ≠ÁÇπÊàñÊä•Èîô</p>\n<h4 id=\"ÂçïÊ≠•ÊâßË°å\"><a href=\"#ÂçïÊ≠•ÊâßË°å\" class=\"headerlink\" title=\"ÂçïÊ≠•ÊâßË°å\"></a>ÂçïÊ≠•ÊâßË°å</h4><p>Ê≠•ËøõÊâßË°å‰∏çËøõÊ†àÔºünext</p>\n<p>Ê≠•ËøõÊâßË°åÔºåËøõÊ†àstep</p>\n<h4 id=\"‰ª£Á†ÅÊü•Áúã\"><a href=\"#‰ª£Á†ÅÊü•Áúã\" class=\"headerlink\" title=\"‰ª£Á†ÅÊü•Áúã\"></a>‰ª£Á†ÅÊü•Áúã</h4><p>ÂàóÂá∫Êñ≠ÁÇπÈôÑËøëÊàñÁ®ãÂ∫èÊâÄÊúâ‰ª£Á†Ålist</p>\n<p>ËÆæÁΩÆÁé∞ÂÆû‰ª£Á†ÅÁöÑË°åÊï∞ set listsize &lt;n&gt;</p>\n<h4 id=\"ÈÄÄÂá∫Ë∞ÉËØï\"><a href=\"#ÈÄÄÂá∫Ë∞ÉËØï\" class=\"headerlink\" title=\"ÈÄÄÂá∫Ë∞ÉËØï\"></a>ÈÄÄÂá∫Ë∞ÉËØï</h4><p>quit</p>\n<h4 id=\"Êü•ÁúãÊ†à‰ø°ÊÅØ\"><a href=\"#Êü•ÁúãÊ†à‰ø°ÊÅØ\" class=\"headerlink\" title=\"Êü•ÁúãÊ†à‰ø°ÊÅØ\"></a>Êü•ÁúãÊ†à‰ø°ÊÅØ</h4><p>bt\tÊâìÂç∞ÂΩìÂâçÁöÑÂáΩÊï∞Ë∞ÉÁî®Ê†àÁöÑÊâÄÊúâ‰ø°ÊÅØ</p>\n<p>bt &lt;n&gt;\tnÊòØ‰∏Ä‰∏™Ê≠£Êï¥Êï∞ÔºåË°®Á§∫Âè™ÊâìÂç∞Ê†àÈ°∂‰∏änÂ±ÇÁöÑÊ†à‰ø°ÊÅØ</p>\n<p>bt &lt;-n&gt;\tË°®Á§∫Âè™ÊâìÂç∞Ê†àÂ∫ï‰∏ãnÂ±ÇÁöÑÊ†à‰ø°ÊÅØ</p>\n<h4 id=\"ËÆæÁΩÆÊñ≠ÁÇπ\"><a href=\"#ËÆæÁΩÆÊñ≠ÁÇπ\" class=\"headerlink\" title=\"ËÆæÁΩÆÊñ≠ÁÇπ\"></a>ËÆæÁΩÆÊñ≠ÁÇπ</h4><p><strong>‰ª£Á†ÅÊñ≠ÁÇπÔºö</strong></p>\n<ul>\n<li>break lineNumber | functionName</li>\n<li>break lineNumber | functionName if condition</li>\n<li>tbreak lineNumber | functionName  ‰∏¥Êó∂Êñ≠ÁÇπÔºå‰ªÖËÉΩ‰ΩøÁî®‰∏ÄÊ¨°</li>\n</ul>\n<p><strong>ÂÜÖÂ≠òÊñ≠ÁÇπÔºàËßÇÂØüÁÇπÔºâÔºö</strong></p>\n<ul>\n<li>ÁõëÊéßÂÜÖÂ≠òÂÄºÊîπÂèò watch expr [if condition]</li>\n<li>ÁõëÊéßÂÜÖÂ≠òÂÄºË¢´ËØªÂèñ rwatch expr [if condition]</li>\n<li>ÁõëÊéßÂÜÖÂ≠òÂÄºË¢´ËØªÂèñÂíåÂÜôÂÖ• awatch wxpr [if condition]</li>\n</ul>\n<p><strong>‰∫ã‰ª∂Êñ≠ÁÇπÔºö</strong></p>\n<ul>\n<li>C++ exceptionÔºå‰ΩøÁî®catch exception [name]</li>\n<li>Ada exceptionÔºå‰ΩøÁî®catch handlers [name]</li>\n<li>exec‰∫ã‰ª∂Ôºå‰ΩøÁî®catch exec</li>\n<li>fork‰∫ã‰ª∂Ôºå‰ΩøÁî®catch fork ÊàñËÄÖ catch vfork</li>\n<li>Âä†ËΩΩÂíåÂç∏ËΩΩÂä®ÊÄÅso‰∫ã‰ª∂Ôºå‰ΩøÁî®catch load|unload [regexp]</li>\n<li>ÁõëÂê¨Á≥ªÁªü‰ø°Âè∑Ôºå‰ΩøÁî®catch signal [signal]</li>\n<li>ÁõëÂê¨Á≥ªÁªüË∞ÉÁî®Ôºå‰ΩøÁî®catch syscall[name|number|group:groupname|g:groupname]‚Ä¶</li>\n</ul>\n<p><strong>ÊâìÂç∞ÂèòÈáèÔºö</strong></p>\n<ul>\n<li>Print [file | func]::variable Êü•ÁúãÂ±ÄÈÉ®ÂèòÈáèÊàñÂÖ®Â±ÄÂèòÈáè</li>\n<li>Print *array@len  Êï∞ÁªÑÈ¶ñÂú∞ÂùÄ@Êü•ÁúãÈïøÂ∫¶</li>\n<li>x&#x2F;[n | u] &lt;addr&gt;\txÂëΩ‰ª§Êü•ÁúãÂÜÖÂ≠òÂú∞ÂùÄÈíüÁöÑÂÄºÔºånÔºöË°®Á§∫ÊòæÁ§∫ÂÜÖÂ≠òÁöÑÈïøÂ∫¶ÔºåuÔºöË°®Á§∫‰ªéÂΩìÂâçÂú∞ÂùÄÂæÄÂêéËØ∑Ê±ÇÁöÑÂ≠óËäÇÊï∞</li>\n</ul>\n<p><strong>ÊâìÂç∞ÂØÑÂ≠òÂô®Ôºö</strong></p>\n<p>info register\tÊü•ÁúãÂØÑÂ≠òÂô®ÔºàÈô§‰∫ÜÊµÆÁÇπÂØÑÂ≠òÂô®Ôºâ</p>\n<p>all-registers\tÊü•ÁúãÊâÄÊúâÂØÑÂ≠òÂô®</p>\n<p>info registers &lt;reg_name ‚Ä¶&gt;Êü•ÁúãÊâÄÊåáÂÆöÂØÑÂ≠òÂô®</p>\n<h3 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h3><p><strong>Êù•Ê∫êÂüπËÆ≠PPT ‰ΩúËÄÖÔºöRelax  ÈÇÆÁÆ±Ôºö<a href=\"mailto:&#119;&#x61;&#x6e;&#x67;&#119;&#x31;&#49;&#x31;&#x40;&#105;&#x63;&#x6c;&#x6f;&#x75;&#100;&#46;&#x63;&#111;&#109;\">&#119;&#x61;&#x6e;&#x67;&#119;&#x31;&#49;&#x31;&#x40;&#105;&#x63;&#x6c;&#x6f;&#x75;&#100;&#46;&#x63;&#111;&#109;</a></strong></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/19/Matrix002/",
            "url": "https://xingyuanjie.top/2023/02/19/Matrix002/",
            "title": "Áü©Èòµ‰πòÊ≥ïËÆ°ÁÆóÊãÜÂàÜÂ±ïÁ§∫",
            "date_published": "2023-02-19T09:04:23.000Z",
            "content_html": "<h2 id=\"Áü©Èòµ‰πòÊ≥ïËÆ°ÁÆóÊãÜÂàÜÂ±ïÁ§∫\"><a href=\"#Áü©Èòµ‰πòÊ≥ïËÆ°ÁÆóÊãÜÂàÜÂ±ïÁ§∫\" class=\"headerlink\" title=\"Áü©Èòµ‰πòÊ≥ïËÆ°ÁÆóÊãÜÂàÜÂ±ïÁ§∫\"></a>Áü©Èòµ‰πòÊ≥ïËÆ°ÁÆóÊãÜÂàÜÂ±ïÁ§∫</h2><h3 id=\"ÈÄöÁî®Áü©Èòµ‰πòÊ¶ÇÂøµ\"><a href=\"#ÈÄöÁî®Áü©Èòµ‰πòÊ¶ÇÂøµ\" class=\"headerlink\" title=\"ÈÄöÁî®Áü©Èòµ‰πòÊ¶ÇÂøµ\"></a>ÈÄöÁî®Áü©Èòµ‰πòÊ¶ÇÂøµ</h3><p><img src=\"/2023/02/19/Matrix002/image-20230219171156738.png\" alt=\"image-20230219171156738\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i++)&#123;\t\t\t\t<span class=\"hljs-comment\">//ÈÅçÂéÜCÁü©ÈòµÂêÑË°åÔºåÂÖ∂Ë°åÊï∞‰∏éAÁöÑË°åÊï∞Áõ∏Á≠â </span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j++)&#123;\t\t\t<span class=\"hljs-comment\">//ÈÅçÂéÜCÁü©ÈòµiË°åjÂàó</span><br>        c[i][j] = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> p = <span class=\"hljs-number\">0</span>; p &lt; k; p++)&#123;\t\t<span class=\"hljs-comment\">//Áî®pÂæ™ÁéØÁ¥ØÂä†ÂíåËÆ°ÁÆóC[i][j] </span><br>            <span class=\"hljs-comment\">//ËÆ°ÁÆóÂå∫Âüü</span><br>           C[i][j] += A[i][p] * B[p][j];\t\t<span class=\"hljs-comment\">//ÈÅçÂéÜAÁü©ÈòµÂêÑË°å‰∏éBÁü©ÈòµÂêÑÂàó</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n\n\n<h3 id=\"ËÆ°ÁÆóÊãÜÂàÜÂ±ïÁ§∫\"><a href=\"#ËÆ°ÁÆóÊãÜÂàÜÂ±ïÁ§∫\" class=\"headerlink\" title=\"ËÆ°ÁÆóÊãÜÂàÜÂ±ïÁ§∫\"></a>ËÆ°ÁÆóÊãÜÂàÜÂ±ïÁ§∫</h3><p>ÂõæÂõõÂ∞ÜËæìÂá∫ËÆ°ÁÆóÊãÜÂàÜ‰∏∫ <strong>1 √ó 4</strong> ÁöÑÂ∞èÂùóÔºåÂç≥Â∞Ü <strong>N</strong> Áª¥Â∫¶ÊãÜÂàÜ‰∏∫‰∏§ÈÉ®ÂàÜ„ÄÇËÆ°ÁÆóËØ•ÂùóËæìÂá∫Êó∂ÔºåÈúÄË¶Å‰ΩøÁî® <strong>A</strong> Áü©ÈòµÁöÑ1Ë°åÔºåÂíå <strong>B</strong> Áü©ÈòµÁöÑ4Âàó „ÄÇ</p>\n<p><img src=\"/2023/02/19/Matrix002/image-20230219171904249.png\" alt=\"image-20230219171904249\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i++)&#123;\t\t\t\t<span class=\"hljs-comment\">//ÈÅçÂéÜCÁü©ÈòµÂêÑË°åÔºåÂÖ∂Ë°åÊï∞‰∏éAÁöÑË°åÊï∞Áõ∏Á≠â </span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j +=<span class=\"hljs-number\">4</span>)&#123;\t\t\t<span class=\"hljs-comment\">//ÈÅçÂéÜCÁü©Èòµj-j+3Âàó</span><br>        c[i][j + <span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">0</span>;<br>        c[i][j + <span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">0</span>;<br>        c[i][j + <span class=\"hljs-number\">2</span>] = <span class=\"hljs-number\">0</span>;<br>        c[i][j + <span class=\"hljs-number\">3</span>] = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> p = <span class=\"hljs-number\">0</span>; p &lt; k; p++)&#123;\t\t<span class=\"hljs-comment\">//Áî®pÂæ™ÁéØÁ¥ØÂä†ÂíåËÆ°ÁÆóC[i][j] </span><br>            <span class=\"hljs-comment\">//ËÆ°ÁÆóÂå∫Âüü</span><br>            <span class=\"hljs-comment\">//ÈÅçÂéÜAÁü©ÈòµÂêÑË°å‰∏éBÁü©ÈòµÂêÑÂàó</span><br>           C[i][j + <span class=\"hljs-number\">0</span>] += A[i][p] * B[p][j + <span class=\"hljs-number\">0</span>];    <br>           C[i][j + <span class=\"hljs-number\">1</span>] += A[i][p] * B[p][j + <span class=\"hljs-number\">1</span>];<br>           C[i][j + <span class=\"hljs-number\">2</span>] += A[i][p] * B[p][j + <span class=\"hljs-number\">2</span>];<br>           C[i][j + <span class=\"hljs-number\">3</span>] += A[i][p] * B[p][j + <span class=\"hljs-number\">3</span>];<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>ÊúÄÂÜÖ‰æßËÆ°ÁÆó‰ΩøÁî®ÁöÑÁü©Èòµ<strong>A</strong>ÁöÑÂÖÉÁ¥†ÊòØ‰∏ÄËá¥ÁöÑ„ÄÇÂõ†Ê≠§ÂèØ‰ª•Â∞Ü**A[i][p]**ËØªÂèñÂà∞ÂØÑÂ≠òÂô®‰∏≠Ôºå‰ªéËÄåÂÆûÁé∞4Ê¨°Êï∞ÊçÆÂ§çÁî®„ÄÇ‰æãÂ¶ÇÔºö</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-keyword\">register</span> <span class=\"hljs-keyword\">double</span> temp = A[i][p];<br></code></pre></div></td></tr></table></figure>\n\n<p>‰∏ÄËà¨Â∞ÜÊúÄÂÜÖ‰æßÂæ™ÁéØÁß∞‰ΩúËÆ°ÁÆóÊ†∏(micro kernel)</p>\n<p>Á±ª‰ººÂú∞ÔºåÊàë‰ª¨ÂèØ‰ª•ÁªßÁª≠ÊãÜÂàÜËæìÂá∫<strong>M</strong>Áª¥Â∫¶Ôºå‰ªéËÄåÂú®ÂÜÖÊµãÂæ™ÁéØ‰∏≠ËÆ°ÁÆó <strong>4 √ó 4</strong> ËæìÂá∫ÔºåÂ¶ÇÂõæ‰∫î„ÄÇ</p>\n<p><img src=\"/2023/02/19/Matrix002/image-20230219174355047.png\" alt=\"image-20230219174355047\"></p>\n<p>ÂêåÊ†∑ÁöÑÔºåÂ∞ÜËÆ°ÁÆóÊ†∏ÂøÉÂ±ïÂºÄÔºåÂèØ‰ª•ÂæóÂà∞‰∏ãÈù¢ÁöÑ‰º™‰ª£Á†Å„ÄÇËøôÈáåÊàë‰ª¨Â∞Ü <strong>1 √ó 4</strong> ‰∏≠Â±ïÁ§∫ËøáÁöÑNÁª¥Â∫¶ÁöÑËÆ°ÁÆóÁÆÄÂåñË°®Á§∫„ÄÇËøôÁßçÊãÜÂàÜÂèØÁúãÊàêÊòØ<strong>4 √ó 1 √ó 4</strong>ÔºåËøôÊ†∑AÂíåBÁöÑËÆøÂ≠òÂùáÂèØÂ§çÁî®ÂõõÊ¨°„ÄÇ</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i+=<span class=\"hljs-number\">4</span>)&#123;\t\t\t\t<span class=\"hljs-comment\">//ÈÅçÂéÜCÁü©Èòµi-i+3Ë°åÔºåÂÖ∂Ë°åÊï∞‰∏éAÁöÑË°åÊï∞Áõ∏Á≠â </span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j +=<span class=\"hljs-number\">4</span>)&#123;\t\t\t<span class=\"hljs-comment\">//ÈÅçÂéÜCÁü©ÈòµÁ¨¨j-j+3Âàó</span><br>        c[i + <span class=\"hljs-number\">0</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] = <span class=\"hljs-number\">0</span>;<br>        c[i + <span class=\"hljs-number\">1</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] = <span class=\"hljs-number\">0</span>;<br>        c[i + <span class=\"hljs-number\">2</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] = <span class=\"hljs-number\">0</span>;<br>        c[i + <span class=\"hljs-number\">3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> p = <span class=\"hljs-number\">0</span>; p &lt; k; p++)&#123;\t\t<span class=\"hljs-comment\">//Áî®pÂæ™ÁéØÁ¥ØÂä†ÂíåËÆ°ÁÆóC[i][j] </span><br>            <span class=\"hljs-comment\">//ËÆ°ÁÆóÂå∫Âüü</span><br>            <span class=\"hljs-comment\">//ÈÅçÂéÜAÁü©ÈòµÂêÑË°å‰∏éBÁü©ÈòµÂêÑÂàó</span><br>           C[i + <span class=\"hljs-number\">0</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] += A[i + <span class=\"hljs-number\">0</span>][p] * B[p][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>];    <br>           C[i + <span class=\"hljs-number\">1</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] += A[i + <span class=\"hljs-number\">1</span>][p] * B[p][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>];<br>           C[i + <span class=\"hljs-number\">2</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] += A[i + <span class=\"hljs-number\">2</span>][p] * B[p][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>];<br>           C[i + <span class=\"hljs-number\">3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] += A[i + <span class=\"hljs-number\">3</span>][p] * B[p][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>];<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>Âà∞ÁõÆÂâç‰∏∫Ê≠¢„ÄÇÊàë‰ª¨ÈÉΩÊòØÂú®ËæìÂá∫ÁöÑ‰∏§‰∏™Áª¥Â∫¶‰∏äÂ±ïÂºÄÔºåËÄåÊï¥‰∏™ËÆ°ÁÆóËøòÂåÖÂê´‰∏Ä‰∏™ËßÑÁ∫¶(Reduction)Áª¥Â∫¶K„ÄÇÂõæÂÖ≠Â±ïÁ§∫‰∫ÜÂú®ËÆ°ÁÆó<strong>4 √ó 4</strong>ËæìÂá∫Êó∂ÔºåÂ∞ÜÁª¥Â∫¶KÊãÜÂàÜÔºå‰ªéËÄåÊØèÊ¨°ÊúÄÂÜÖ‰æßÂæ™ÁéØËÆ°ÁÆóÂá∫ËæìÂá∫Áü©ÈòµCÁöÑ<strong>4&#x2F;K</strong>ÁöÑÈÉ®ÂàÜÂíå„ÄÇ</p>\n<p><img src=\"/2023/02/19/Matrix002/image-20230219180147184.png\" alt=\"image-20230219180147184\"></p>\n<p>‰∏ãÈù¢Â±ïÁ§∫ÁöÑÊòØËøôÈÉ®ÂàÜËÆ°ÁÆóÁöÑÂ±ïÂºÄ‰º™‰ª£Á†ÅÔºåÂÖ∂‰∏≠Áª¥Â∫¶MÂíåNÂ∑≤ÁªèË¢´ÁÆÄÂÜô„ÄÇ</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; m; i+=<span class=\"hljs-number\">4</span>)&#123;\t\t\t\t<span class=\"hljs-comment\">//ÈÅçÂéÜCÁü©Èòµi-i+3Ë°åÔºåÂÖ∂Ë°åÊï∞‰∏éAÁöÑË°åÊï∞Áõ∏Á≠â </span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; n; j +=<span class=\"hljs-number\">4</span>)&#123;\t\t\t<span class=\"hljs-comment\">//ÈÅçÂéÜCÁü©ÈòµÁ¨¨j-j+3Âàó</span><br>        c[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] = <span class=\"hljs-number\">0</span>;<br>        c[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] = <span class=\"hljs-number\">0</span>;<br>        c[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] = <span class=\"hljs-number\">0</span>;<br>        c[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> p = <span class=\"hljs-number\">0</span>; p &lt; k; p+=<span class=\"hljs-number\">4</span>)&#123;\t\t<span class=\"hljs-comment\">//Áî®pÂæ™ÁéØÁ¥ØÂä†ÂíåËÆ°ÁÆóC[i][j] </span><br>            <span class=\"hljs-comment\">//ËÆ°ÁÆóÂå∫Âüü</span><br>           C[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] += A[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][p + <span class=\"hljs-number\">0</span>] * B[p + <span class=\"hljs-number\">0</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>];    <br>           C[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] += A[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][p + <span class=\"hljs-number\">1</span>] * B[p + <span class=\"hljs-number\">1</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>];<br>           C[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] += A[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][p + <span class=\"hljs-number\">2</span>] * B[p + <span class=\"hljs-number\">2</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>];<br>           C[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>] += A[i + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>][p + <span class=\"hljs-number\">3</span>] * B[p + <span class=\"hljs-number\">3</span>][j + <span class=\"hljs-number\">0.</span><span class=\"hljs-number\">.3</span>];<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>Âú®ÂØπMÂíåNÂ±ïÂºÄÂºèÔºåÊàë‰ª¨ÂèØ‰ª•ÂàÜÂà´Â§çÁî®BÂíåAÁöÑÊï∞ÊçÆÔºõÂú®ÂØπKÂ±ïÂºÄÊó∂ÔºåÂÖ∂Â±ÄÈÉ®‰ΩøÁî®ÁöÑCÁöÑÂÜÖÂ≠òÊòØ‰∏ÄËá¥ÁöÑÔºåÈÇ£‰πàKËø≠‰ª£Êó∂ÂèØ‰ª•Â∞ÜÈÉ®ÂàÜÂíåÁ¥ØÂä†Âú®ÂØÑÂ≠òÂô®‰∏≠‚Äî‚ÄîÊúÄÂÜÖÂ±ÇÂæ™ÁéØÊï¥‰∏™Ëø≠‰ª£‰∏ÄÊ¨°ÂÜôÂà∞CÁöÑÂÜÖÂ≠ò‰∏≠„ÄÇ</p>\n<h3 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h3><p><a href=\"https://zhenhuaw.me/blog/2019/gemm-optimization.html\">ÈÄöÁî®Áü©Èòµ‰πòÔºàGEMMÔºâ‰ºòÂåñÁÆóÊ≥ï | ÈªéÊòéÁÅ∞ÁÉ¨ ÂçöÂÆ¢ (zhenhuaw.me)</a></p>\n",
            "tags": [
                "Matrix",
                "GEMM"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/18/leetcode11/",
            "url": "https://xingyuanjie.top/2023/02/18/leetcode11/",
            "title": "11. ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô®",
            "date_published": "2023-02-18T08:27:01.000Z",
            "content_html": "<h2 id=\"11-ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô®\"><a href=\"#11-ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô®\" class=\"headerlink\" title=\"11.ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô®\"></a>11.ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô®</h2><h2 id=\"È¢òÁõÆÈìæÊé•\"><a href=\"#È¢òÁõÆÈìæÊé•\" class=\"headerlink\" title=\"È¢òÁõÆÈìæÊé•\"></a>È¢òÁõÆÈìæÊé•</h2><h4 id=\"11-ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô®-1\"><a href=\"#11-ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô®-1\" class=\"headerlink\" title=\"11. ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô®\"></a><a href=\"https://leetcode.cn/problems/container-with-most-water/\">11. ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô®</a></h4><h2 id=\"ÂÆåÊï¥‰ª£Á†Å\"><a href=\"#ÂÆåÊï¥‰ª£Á†Å\" class=\"headerlink\" title=\"ÂÆåÊï¥‰ª£Á†Å\"></a>ÂÆåÊï¥‰ª£Á†Å</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> &#123;</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">maxArea</span><span class=\"hljs-params\">(vector&lt;<span class=\"hljs-keyword\">int</span>&gt;&amp; height)</span> </span>&#123;<br>        <span class=\"hljs-comment\">//ÂèåÊåáÈíàÔºõ</span><br>        <span class=\"hljs-keyword\">int</span> ans =<span class=\"hljs-number\">-1</span>;<br>        <span class=\"hljs-keyword\">int</span> left=<span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">int</span> right=height.<span class=\"hljs-built_in\">size</span>()<span class=\"hljs-number\">-1</span>;<br>        <span class=\"hljs-keyword\">while</span>(left&lt;right)&#123;<br>            <span class=\"hljs-keyword\">int</span> temp=<span class=\"hljs-number\">0</span>;<br>            <span class=\"hljs-keyword\">if</span>(height[left]&lt;=height[right])&#123;<br>                temp = height[left]*(right-left);<br>                ans = std::<span class=\"hljs-built_in\">max</span>(ans,temp);<br>                left++;<br>            &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>                temp = height[right]*(right-left);<br>                ans = std::<span class=\"hljs-built_in\">max</span>(ans,temp);<br>                right--;<br>            &#125;<br>            <br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> ans;<br>        <br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p><a href=\"https://leetcode.cn/problems/container-with-most-water/solution/sheng-zui-duo-shui-de-rong-qi-by-leetcode-solution/\">ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô® - ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô® - ÂäõÊâ£ÔºàLeetCodeÔºâ</a></p>\n",
            "tags": [
                "C++",
                "LeetCode",
                "ÂèåÊåáÈíà"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/17/leetcode001/",
            "url": "https://xingyuanjie.top/2023/02/17/leetcode001/",
            "title": "146.LRU cache",
            "date_published": "2023-02-17T06:31:45.000Z",
            "content_html": "<h2 id=\"146-LRU-cache\"><a href=\"#146-LRU-cache\" class=\"headerlink\" title=\"146.LRU cache\"></a>146.LRU cache</h2><h2 id=\"È¢òÁõÆÈìæÊé•\"><a href=\"#È¢òÁõÆÈìæÊé•\" class=\"headerlink\" title=\"È¢òÁõÆÈìæÊé•\"></a>È¢òÁõÆÈìæÊé•</h2><p><a href=\"https://leetcode.cn/problems/lru-cache/\">146. LRU ÁºìÂ≠ò - ÂäõÊâ£ÔºàLeetCodeÔºâ</a></p>\n<h2 id=\"ÂÆåÊï¥‰ª£Á†Å\"><a href=\"#ÂÆåÊï¥‰ª£Á†Å\" class=\"headerlink\" title=\"ÂÆåÊï¥‰ª£Á†Å\"></a>ÂÆåÊï¥‰ª£Á†Å</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">LRUCache</span> &#123;</span><br><span class=\"hljs-keyword\">private</span>:<br>    <span class=\"hljs-keyword\">int</span> cap=<span class=\"hljs-number\">0</span>;<br>    list&lt;pair&lt;<span class=\"hljs-keyword\">int</span>,<span class=\"hljs-keyword\">int</span>&gt;&gt; lru;   <span class=\"hljs-comment\">//ÁúüÊ≠£ÁöÑcache</span><br>    unordered_map&lt;<span class=\"hljs-keyword\">int</span>,list&lt;pair&lt;<span class=\"hljs-keyword\">int</span>,<span class=\"hljs-keyword\">int</span>&gt;&gt;::iterator&gt; mp;   <span class=\"hljs-comment\">//‰∏ªË¶ÅÁî®Â§ÑÂ∞±ÊòØÊü•Êâæ</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-built_in\">LRUCache</span>(<span class=\"hljs-keyword\">int</span> capacity) &#123;<br>        cap = capacity;\t\t\t\t\t\t<span class=\"hljs-comment\">//ÂÆπÈáè</span><br>    &#125;<br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">get</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> key)</span> </span>&#123;\t\t\t\t\t\t<span class=\"hljs-comment\">//‰Ωú‰∏∫Â∞±ÊòØÊääÊúÄËøëËÆøÈóÆÁöÑÊîæÂú®Ë°®Â§¥</span><br>        <span class=\"hljs-keyword\">if</span>(mp.<span class=\"hljs-built_in\">find</span>(key)!=mp.<span class=\"hljs-built_in\">end</span>())&#123;\t\t\t\t\t\t\t<span class=\"hljs-comment\">//ÊúâËøô‰∏™ÂÖÉÁ¥†</span><br>            lru.<span class=\"hljs-built_in\">splice</span>(lru.<span class=\"hljs-built_in\">begin</span>(),lru,mp[key]);\t\t\t<span class=\"hljs-comment\">//Â∞Ü‰∏Ä‰∏™ list ÂÆπÂô®‰∏≠ÁöÑÂÖÉÁ¥†ÊèíÂÖ•Âà∞Âè¶‰∏Ä‰∏™ÂÆπÂô®ÁöÑÊåáÂÆö‰ΩçÁΩÆ</span><br>            <span class=\"hljs-keyword\">return</span> lru.<span class=\"hljs-built_in\">begin</span>()-&gt;second;\t\t\t\t<span class=\"hljs-comment\">//ËøîÂõûÂÖÉÁ¥†</span><br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//Ê≤°ÊúâËøô‰∏™ÂÖÉÁ¥†</span><br>        &#125;<br>    &#125;<br><br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">put</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> key, <span class=\"hljs-keyword\">int</span> value)</span> </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">get</span>(key)!=<span class=\"hljs-number\">-1</span>)&#123;\t\t\t\t<span class=\"hljs-comment\">//cache‰∏≠ÊúâkeyÔºåË∞ÉÁî®getÂêéËá™Âä®ÊèíÂÖ•Âà∞Ë°®Â§¥„ÄêkeyÂ≠òÂú®„Äë</span><br>            lru.<span class=\"hljs-built_in\">begin</span>()-&gt;second = value;<br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;\t\t\t<span class=\"hljs-comment\">//„Äêkey‰∏çÂ≠òÂú®„Äë</span><br>            <span class=\"hljs-keyword\">if</span>(lru.<span class=\"hljs-built_in\">size</span>()==cap)&#123;\t\t\t<span class=\"hljs-comment\">//Â¶ÇÊûúÂÆπÈáèÊª°‰∫Ü</span><br>                <span class=\"hljs-keyword\">int</span> delkey = lru.<span class=\"hljs-built_in\">back</span>().first;\t\t <span class=\"hljs-comment\">//ËÆ∞ÂΩïÊúÄ‰πÖÊú™ËÆøÈóÆÁöÑkey</span><br>                lru.<span class=\"hljs-built_in\">pop_back</span>();\t\t\t\t\t\t <span class=\"hljs-comment\">//popÊéâÔºåÁΩÆÊç¢</span><br>                mp.<span class=\"hljs-built_in\">erase</span>(delkey);\t\t\t\t\t <span class=\"hljs-comment\">//Êü•ÊâæË°®‰∏≠‰πüÂà†Èô§\t</span><br>            &#125;<br>            lru.<span class=\"hljs-built_in\">emplace_front</span>(key,value);\t\t\t<span class=\"hljs-comment\">//Â§¥ÈÉ®ÁîüÊàê‰∏Ä‰∏™ÂÖÉÁ¥†</span><br>            mp[key]=lru.<span class=\"hljs-built_in\">begin</span>();\t\t\t\t\t<span class=\"hljs-comment\">//Âä†ÂÖ•Êü•ÊâæË°®</span><br>        &#125;<br>    &#125;<br>&#125;;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * Your LRUCache object will be instantiated and called as such:</span><br><span class=\"hljs-comment\"> * LRUCache* obj = new LRUCache(capacity);</span><br><span class=\"hljs-comment\"> * int param_1 = obj-&gt;get(key);</span><br><span class=\"hljs-comment\"> * obj-&gt;put(key,value);</span><br><span class=\"hljs-comment\"> */</span><br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"ÂèÇËÄÉËµÑÊñô\"><a href=\"#ÂèÇËÄÉËµÑÊñô\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñô\"></a>ÂèÇËÄÉËµÑÊñô</h2><p><a href=\"https://www.jianshu.com/p/bbea4b2410e6\">C++ÂÆûÁé∞LRUÁºìÂ≠ò‚Äî‚ÄîLeetCode146 - ÁÆÄ‰π¶ (jianshu.com)</a></p>\n",
            "tags": [
                "C++",
                "LeetCode"
            ]
        },
        {
            "id": "https://xingyuanjie.top/2023/02/15/blislab003/",
            "url": "https://xingyuanjie.top/2023/02/15/blislab003/",
            "title": "BLISlab‰∏≠CÁü©ÈòµÂàùÂßãÂåñÈÄüÂ∫¶ÊµãËØï",
            "date_published": "2023-02-15T03:48:16.000Z",
            "content_html": "<h2 id=\"BLISlab‰∏≠CÁü©ÈòµÂàùÂßãÂåñÈÄüÂ∫¶ÊµãËØï\"><a href=\"#BLISlab‰∏≠CÁü©ÈòµÂàùÂßãÂåñÈÄüÂ∫¶ÊµãËØï\" class=\"headerlink\" title=\"BLISlab‰∏≠CÁü©ÈòµÂàùÂßãÂåñÈÄüÂ∫¶ÊµãËØï\"></a>BLISlab‰∏≠CÁü©ÈòµÂàùÂßãÂåñÈÄüÂ∫¶ÊµãËØï</h2><p><strong>ÂÅáËÆæÊàë‰ª¨ÊÉ≥ÊääC‰∏≠ÁöÑÊâÄÊúâÂÖÉÁ¥†ÈÉΩËÆæ‰∏∫0„ÄÇ</strong></p>\n<p><strong>Áªü‰∏ÄÁºñËØëÂëΩ‰ª§Ôºö</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">g++  xxx.cpp -O0 -std=c++11 -o xxx<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"ÁâàÊú¨‰∏ÄÔºö\"><a href=\"#ÁâàÊú¨‰∏ÄÔºö\" class=\"headerlink\" title=\"ÁâàÊú¨‰∏ÄÔºö\"></a>ÁâàÊú¨‰∏ÄÔºö</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> C( i, j )     C[ (j)*ldc + (i) ]</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;\t<br>\t<span class=\"hljs-keyword\">int</span> i,j,m,n;<br>\tm=<span class=\"hljs-number\">20000</span>;<br>\tn=<span class=\"hljs-number\">20000</span>;<br>\t<span class=\"hljs-keyword\">int</span> ldc=m;<br>\t<span class=\"hljs-keyword\">double</span>*\tC =(<span class=\"hljs-keyword\">double</span>*)_mm_malloc(m*n*<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(<span class=\"hljs-keyword\">double</span>),<span class=\"hljs-number\">32</span>);<br>\tstd::chrono::high_resolution_clock::time_point tp1 = std::chrono::high_resolution_clock::<span class=\"hljs-built_in\">now</span>();<br>\t\t<span class=\"hljs-keyword\">for</span>( i = <span class=\"hljs-number\">0</span>; i &lt; m; i++)&#123;<br>    \t\t<span class=\"hljs-keyword\">for</span>( j = <span class=\"hljs-number\">0</span>; j &lt; n; j++)&#123; <br>        \t\t<span class=\"hljs-built_in\">C</span>(i,j) = <span class=\"hljs-number\">0.0</span>;<br>   \t\t \t&#125;<br>\t\t&#125;<br>\tstd::chrono::high_resolution_clock::time_point tp2 = std::chrono::high_resolution_clock::<span class=\"hljs-built_in\">now</span>();<br>\tstd::chrono::duration&lt;<span class=\"hljs-keyword\">size_t</span>, std::nano&gt; dur = tp2 - tp1;<br>\tstd::cout &lt;&lt; <span class=\"hljs-string\">&quot;1 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; Á∫≥Áßí&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;2 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÂæÆÂ¶ô&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;3 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÊØ´Áßí&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;4 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::seconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÁßíÈíü&quot;</span> &lt;&lt; std::endl;<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125; <br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"ÂÆûÊµãÁªìÊûúÔºö\"><a href=\"#ÂÆûÊµãÁªìÊûúÔºö\" class=\"headerlink\" title=\"ÂÆûÊµãÁªìÊûúÔºö\"></a>ÂÆûÊµãÁªìÊûúÔºö</h3><figure class=\"highlight basic\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs basic\"><span class=\"hljs-symbol\">1 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">10776901341</span> Á∫≥Áßí<br><span class=\"hljs-symbol\">2 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">10776901</span> ÂæÆÂ¶ô<br><span class=\"hljs-symbol\">3 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">10776</span> ÊØ´Áßí<br><span class=\"hljs-symbol\">4 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">10</span> ÁßíÈíü<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"ÁâàÊú¨‰∫åÔºö\"><a href=\"#ÁâàÊú¨‰∫åÔºö\" class=\"headerlink\" title=\"ÁâàÊú¨‰∫åÔºö\"></a>ÁâàÊú¨‰∫åÔºö</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> C( i, j )     C[ (j)*ldc + (i) ]</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;\t<br>\t<span class=\"hljs-keyword\">int</span> i,j,m,n;<br>\tm=<span class=\"hljs-number\">20000</span>;<br>\tn=<span class=\"hljs-number\">20000</span>;<br>\t<span class=\"hljs-keyword\">int</span> ldc=m;<br>\t<span class=\"hljs-keyword\">double</span>*\tC =(<span class=\"hljs-keyword\">double</span>*)_mm_malloc(m*n*<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(<span class=\"hljs-keyword\">double</span>),<span class=\"hljs-number\">32</span>);<br>\t<span class=\"hljs-keyword\">double</span> *cp;<br>\tstd::chrono::high_resolution_clock::time_point tp1 = std::chrono::high_resolution_clock::<span class=\"hljs-built_in\">now</span>();<br>\t<span class=\"hljs-keyword\">for</span>( j = <span class=\"hljs-number\">0</span>; j &lt; n; j++)&#123;<br>    \tcp = &amp;C[ j*ldc ];\t\t\t<span class=\"hljs-comment\">//point cp to top of ith column</span><br>    \t<span class=\"hljs-keyword\">for</span>( i = <span class=\"hljs-number\">0</span>; i &lt; m; i++)&#123;<br>        \t*cp++ = <span class=\"hljs-number\">0.0</span>;\t\t<span class=\"hljs-comment\">//set element that cp points to to zero and</span><br>    \t&#125;\t\t<span class=\"hljs-comment\">//advance the pointer</span><br>\t&#125;<br>\tstd::chrono::high_resolution_clock::time_point tp2 = std::chrono::high_resolution_clock::<span class=\"hljs-built_in\">now</span>();<br>\tstd::chrono::duration&lt;<span class=\"hljs-keyword\">size_t</span>, std::nano&gt; dur = tp2 - tp1;<br>\tstd::cout &lt;&lt; <span class=\"hljs-string\">&quot;1 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; Á∫≥Áßí&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;2 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÂæÆÂ¶ô&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;3 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÊØ´Áßí&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;4 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::seconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÁßíÈíü&quot;</span> &lt;&lt; std::endl;<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125; <br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"ÂÆûÊµãÁªìÊûúÔºö-1\"><a href=\"#ÂÆûÊµãÁªìÊûúÔºö-1\" class=\"headerlink\" title=\"ÂÆûÊµãÁªìÊûúÔºö\"></a>ÂÆûÊµãÁªìÊûúÔºö</h3><figure class=\"highlight basic\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs basic\"><span class=\"hljs-symbol\">1 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">3455968000</span> Á∫≥Áßí<br><span class=\"hljs-symbol\">2 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">3455968</span> ÂæÆÂ¶ô<br><span class=\"hljs-symbol\">3 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">3455</span> ÊØ´Áßí<br><span class=\"hljs-symbol\">4 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">3</span> ÁßíÈíü<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"ÁâàÊú¨‰∏âÔºö\"><a href=\"#ÁâàÊú¨‰∏âÔºö\" class=\"headerlink\" title=\"ÁâàÊú¨‰∏âÔºö\"></a>ÁâàÊú¨‰∏âÔºö</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> C( i, j )     C[ (j)*ldc + (i) ]</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;\t<br>\t<span class=\"hljs-keyword\">int</span> i,j,m,n;<br>\tm=<span class=\"hljs-number\">20000</span>;<br>\tn=<span class=\"hljs-number\">20000</span>;<br>\t<span class=\"hljs-keyword\">int</span> ldc=m;<br>\t<span class=\"hljs-keyword\">double</span>*\tC =(<span class=\"hljs-keyword\">double</span>*)_mm_malloc(m*n*<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(<span class=\"hljs-keyword\">double</span>),<span class=\"hljs-number\">32</span>);<br>\t<span class=\"hljs-keyword\">double</span> *cp;<br>\tstd::chrono::high_resolution_clock::time_point tp1 = std::chrono::high_resolution_clock::<span class=\"hljs-built_in\">now</span>();<br>\t<span class=\"hljs-keyword\">for</span>( j = <span class=\"hljs-number\">0</span>; j &lt; n; j++)&#123;<br>    \tcp = &amp;C[ j * ldc ];<br>    \t<span class=\"hljs-keyword\">for</span>( i = <span class=\"hljs-number\">0</span>; i &lt; m; i+=<span class=\"hljs-number\">4</span>)&#123;<br>       \t\t*(cp+<span class=\"hljs-number\">0</span>) = <span class=\"hljs-number\">0.0</span>;<br>        \t*(cp+<span class=\"hljs-number\">1</span>) = <span class=\"hljs-number\">0.0</span>;<br>        \t*(cp+<span class=\"hljs-number\">2</span>) = <span class=\"hljs-number\">0.0</span>;<br>        \t*(cp+<span class=\"hljs-number\">3</span>) = <span class=\"hljs-number\">0.0</span>;<br>        \tcp+=<span class=\"hljs-number\">4</span>;<br>   \t\t&#125;<br>\t&#125;\t<br>\tstd::chrono::high_resolution_clock::time_point tp2 = std::chrono::high_resolution_clock::<span class=\"hljs-built_in\">now</span>();<br>\tstd::chrono::duration&lt;<span class=\"hljs-keyword\">size_t</span>, std::nano&gt; dur = tp2 - tp1;<br>\tstd::cout &lt;&lt; <span class=\"hljs-string\">&quot;1 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; Á∫≥Áßí&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;2 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÂæÆÂ¶ô&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;3 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÊØ´Áßí&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;4 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::seconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÁßíÈíü&quot;</span> &lt;&lt; std::endl;<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125; <br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"ÂÆûÊµãÁªìÊûúÔºö-2\"><a href=\"#ÂÆûÊµãÁªìÊûúÔºö-2\" class=\"headerlink\" title=\"ÂÆûÊµãÁªìÊûúÔºö\"></a>ÂÆûÊµãÁªìÊûúÔºö</h3><figure class=\"highlight basic\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs basic\"><span class=\"hljs-symbol\">1 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">2581347801</span> Á∫≥Áßí<br><span class=\"hljs-symbol\">2 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">2581347</span> ÂæÆÂ¶ô<br><span class=\"hljs-symbol\">3 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">2581</span> ÊØ´Áßí<br><span class=\"hljs-symbol\">4 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">2</span> ÁßíÈíü<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"ÁâàÊú¨ÂõõÔºö\"><a href=\"#ÁâàÊú¨ÂõõÔºö\" class=\"headerlink\" title=\"ÁâàÊú¨ÂõõÔºö\"></a>ÁâàÊú¨ÂõõÔºö</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> C( i, j )     C[ (j)*ldc + (i) ]</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;\t<br>\t<span class=\"hljs-keyword\">int</span> i,j,m,n;<br>\tm=<span class=\"hljs-number\">20000</span>;<br>\tn=<span class=\"hljs-number\">20000</span>;<br>\t<span class=\"hljs-keyword\">int</span> ldc=m;<br>\t<span class=\"hljs-keyword\">double</span>*\tC =(<span class=\"hljs-keyword\">double</span>*)_mm_malloc(m*n*<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(<span class=\"hljs-keyword\">double</span>),<span class=\"hljs-number\">32</span>);<br>\t<span class=\"hljs-keyword\">double</span> *cp;<br>\tstd::chrono::high_resolution_clock::time_point tp1 = std::chrono::high_resolution_clock::<span class=\"hljs-built_in\">now</span>();<br>    <span class=\"hljs-keyword\">register</span> <span class=\"hljs-keyword\">double</span> c0 =<span class=\"hljs-number\">0.0</span>,c1=<span class=\"hljs-number\">0.0</span>,c2=<span class=\"hljs-number\">0.0</span>,c3=<span class=\"hljs-number\">0.0</span>;<br>\t<span class=\"hljs-keyword\">for</span>( j = <span class=\"hljs-number\">0</span>; j &lt; n; j++)&#123;<br>    \tcp = &amp;C[ j * ldc ];<br>    \t<span class=\"hljs-keyword\">for</span>( i = <span class=\"hljs-number\">0</span>; i &lt; m; i+=<span class=\"hljs-number\">4</span>)&#123;<br>        \t*(cp+<span class=\"hljs-number\">0</span>) = c0;<br>        \t*(cp+<span class=\"hljs-number\">1</span>) = c1;<br>        \t*(cp+<span class=\"hljs-number\">2</span>) = c2;<br>        \t*(cp+<span class=\"hljs-number\">3</span>) = c3;<br>        \tcp+=<span class=\"hljs-number\">4</span>;<br>   \t\t &#125;<br>\t&#125;<br>\tstd::chrono::high_resolution_clock::time_point tp2 = std::chrono::high_resolution_clock::<span class=\"hljs-built_in\">now</span>();<br>\tstd::chrono::duration&lt;<span class=\"hljs-keyword\">size_t</span>, std::nano&gt; dur = tp2 - tp1;<br>\tstd::cout &lt;&lt; <span class=\"hljs-string\">&quot;1 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; Á∫≥Áßí&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;2 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÂæÆÂ¶ô&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;3 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÊØ´Áßí&quot;</span> &lt;&lt; std::endl;<br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;4 Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö&quot;</span> &lt;&lt; std::chrono::duration_cast&lt;std::chrono::seconds&gt;(dur).<span class=\"hljs-built_in\">count</span>() &lt;&lt; <span class=\"hljs-string\">&quot; ÁßíÈíü&quot;</span> &lt;&lt; std::endl;<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"ÂÆûÊµãÁªìÊûúÔºö-3\"><a href=\"#ÂÆûÊµãÁªìÊûúÔºö-3\" class=\"headerlink\" title=\"ÂÆûÊµãÁªìÊûúÔºö\"></a>ÂÆûÊµãÁªìÊûúÔºö</h3><figure class=\"highlight basic\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs basic\"><span class=\"hljs-symbol\">1 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">2269606428</span> Á∫≥Áßí<br><span class=\"hljs-symbol\">2 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">2269606</span> ÂæÆÂ¶ô<br><span class=\"hljs-symbol\">3 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">2269</span> ÊØ´Áßí<br><span class=\"hljs-symbol\">4 </span>Ë¢´ËÆ°Êó∂‰ª£Á†ÅËÄóÊó∂Ôºö<span class=\"hljs-number\">2</span> ÁßíÈíü<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"ÂèÇËÄÉËµÑÊñôÔºö\"><a href=\"#ÂèÇËÄÉËµÑÊñôÔºö\" class=\"headerlink\" title=\"ÂèÇËÄÉËµÑÊñôÔºö\"></a>ÂèÇËÄÉËµÑÊñôÔºö</h3><p><a href=\"https://gukaifeng.cn/posts/c-11-chrono-gao-jing-du-ji-shi-fang-fa/\">C++11 chrono È´òÁ≤æÂ∫¶ËÆ°Êó∂ÊñπÊ≥ï | GuKaifeng‚Äôs Blog</a></p>\n",
            "tags": [
                "Linux",
                "dgemm"
            ]
        }
    ]
}