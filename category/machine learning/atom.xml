<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>Amicoyuan • Posts by &#34;machine learning&#34; category</title>
    <link href="http://example.com" />
    <updated>2021-12-09T06:59:11.000Z</updated>
    <category term="AVX" />
    <category term="Data Structure" />
    <category term="String" />
    <category term="Find" />
    <category term="STL" />
    <category term="C++" />
    <category term="Set" />
    <category term="团体程序设计天梯赛" />
    <category term="Sort" />
    <category term="LinkList" />
    <category term="双向链表" />
    <category term="Graph" />
    <category term="邻接表" />
    <category term="Vector" />
    <category term="Binary tree" />
    <category term="BFS" />
    <category term="模拟" />
    <category term="邻接矩阵" />
    <category term="DFS" />
    <category term="结构体" />
    <category term="贪心" />
    <category term="Double类型相等比较" />
    <category term="并查集" />
    <category term="Map" />
    <category term="Pair" />
    <category term="KMP" />
    <category term="线索二叉树" />
    <category term="Tree" />
    <category term="森林" />
    <category term="Linux" />
    <category term="MPI" />
    <category term="Numactl" />
    <category term="Slurm" />
    <category term="Tensorflow" />
    <category term="性能分析工具" />
    <category term="gcov" />
    <entry>
        <id>http://example.com/2021/12/09/tensorflow001/</id>
        <title>Machine Learning(一) 一个神经元网络-线性函数</title>
        <link rel="alternate" href="http://example.com/2021/12/09/tensorflow001/"/>
        <content type="html">&lt;h1 id=&#34;一个神经元的网络-线性函数&#34;&gt;&lt;a href=&#34;#一个神经元的网络-线性函数&#34; class=&#34;headerlink&#34; title=&#34;一个神经元的网络(线性函数)&#34;&gt;&lt;/a&gt;一个神经元的网络(线性函数)&lt;/h1&gt;&lt;p&gt;线性函数 y &amp;#x3D; 2 * x -1 &lt;/p&gt;
&lt;h2 id=&#34;程序源代码&#34;&gt;&lt;a href=&#34;#程序源代码&#34; class=&#34;headerlink&#34; title=&#34;程序源代码&#34;&gt;&lt;/a&gt;程序源代码&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;python&#34;&gt;from tensorflow import keras
import numpy as np
#构建模型
model = keras.Sequential([keras.layers.Dense(units=1,input_shape=[1])])
model.compile(optimizer=&amp;#39;sgd&amp;#39;,loss=&amp;#39;mean_squared_error&amp;#39;)
#准备训练数据
xs=np.array([-1.0,0.0,1.0,2.0,3.0,4.0], dtype = float)
ys=np.array([-3.0,-1.0,1.0,3.0,5.0,7.0], dtype = float)
#训练模型
model.fit(xs,ys,epochs=500)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;训练模型过程-截取&#34;&gt;&lt;a href=&#34;#训练模型过程-截取&#34; class=&#34;headerlink&#34; title=&#34;训练模型过程(截取)&#34;&gt;&lt;/a&gt;训练模型过程(截取)&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;python&#34;&gt;Epoch 1/500
1/1 [==============================] - 0s 388ms/step - loss: 3.4976
Epoch 2/500
1/1 [==============================] - 0s 3ms/step - loss: 2.9127
Epoch 3/500
1/1 [==============================] - 0s 3ms/step - loss: 2.4493
Epoch 4/500
1/1 [==============================] - 0s 3ms/step - loss: 2.0814
Epoch 5/500
1/1 [==============================] - 0s 4ms/step - loss: 1.7888
Epoch 6/500
1/1 [==============================] - 0s 4ms/step - loss: 1.5555
Epoch 7/500
1/1 [==============================] - 0s 4ms/step - loss: 1.3689
Epoch 8/500
1/1 [==============================] - 0s 4ms/step - loss: 1.2191
Epoch 9/500
1/1 [==============================] - 0s 3ms/step - loss: 1.0983
Epoch 10/500
1/1 [==============================] - 0s 4ms/step - loss: 1.0005
Epoch 11/500
1/1 [==============================] - 0s 4ms/step - loss: 0.9207
Epoch 12/500
1/1 [==============================] - 0s 2ms/step - loss: 0.8551
Epoch 13/500
1/1 [==============================] - 0s 5ms/step - loss: 0.8009
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;使用模型&#34;&gt;&lt;a href=&#34;#使用模型&#34; class=&#34;headerlink&#34; title=&#34;使用模型&#34;&gt;&lt;/a&gt;使用模型&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;python&#34;&gt;#使用模型(输入)
print(model.predict([2021]))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;python&#34;&gt;#输出
[[4036.6035]]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;python&#34;&gt;#输入
model.predict([10.0])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;python&#34;&gt;#输出
array([[18.984968]], dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="Tensorflow" />
        <updated>2021-12-09T06:59:11.000Z</updated>
    </entry>
</feed>
