<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>Amicoyuan</title>
    <link href="http://example.com" />
    <updated>2022-07-31T07:55:24.000Z</updated>
    <category term="AVX" />
    <category term="Data Structure" />
    <category term="String" />
    <category term="Find" />
    <category term="STL" />
    <category term="C++" />
    <category term="Set" />
    <category term="团体程序设计天梯赛" />
    <category term="Sort" />
    <category term="LinkList" />
    <category term="双向链表" />
    <category term="Graph" />
    <category term="邻接表" />
    <category term="Vector" />
    <category term="Binary tree" />
    <category term="BFS" />
    <category term="模拟" />
    <category term="邻接矩阵" />
    <category term="DFS" />
    <category term="结构体" />
    <category term="贪心" />
    <category term="Double类型相等比较" />
    <category term="并查集" />
    <category term="Map" />
    <category term="Pair" />
    <category term="KMP" />
    <category term="线索二叉树" />
    <category term="Tree" />
    <category term="森林" />
    <category term="QuickSort" />
    <category term="Stack" />
    <category term="Queue" />
    <category term="Array" />
    <category term="Linux" />
    <category term="MPI" />
    <category term="Mirror" />
    <category term="Numactl" />
    <category term="Slurm" />
    <category term="Tensorflow" />
    <category term="性能分析工具" />
    <category term="gcov" />
    <entry>
        <id>http://example.com/2022/07/31/DS005/</id>
        <title>数组的应用题</title>
        <link rel="alternate" href="http://example.com/2022/07/31/DS005/"/>
        <content type="html">&lt;h1 id=&#34;数组的应用题&#34;&gt;&lt;a href=&#34;#数组的应用题&#34; class=&#34;headerlink&#34; title=&#34;数组的应用题&#34;&gt;&lt;/a&gt;数组的应用题&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;特别提醒：理解对称矩阵，三角矩阵，三对角矩阵的图形和区域的划分，需会手推这三种矩阵的一位数组的公式！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特别提醒：注意题目中数组的开始起始下标是0还是1！&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-对称矩阵&#34;&gt;&lt;a href=&#34;#1-对称矩阵&#34; class=&#34;headerlink&#34; title=&#34;1.对称矩阵&#34;&gt;&lt;/a&gt;1.对称矩阵&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2022/07/31/DS005/image-20220731155906163.png&#34; alt=&#34;image-20220731155906163&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/07/31/DS005/image-20220731155922230.png&#34; alt=&#34;image-20220731155922230&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-三角矩阵&#34;&gt;&lt;a href=&#34;#2-三角矩阵&#34; class=&#34;headerlink&#34; title=&#34;2.三角矩阵&#34;&gt;&lt;/a&gt;2.三角矩阵&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2022/07/31/DS005/image-20220731155953294.png&#34; alt=&#34;image-20220731155953294&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/07/31/DS005/image-20220731160009059.png&#34; alt=&#34;image-20220731160009059&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-三角矩阵&#34;&gt;&lt;a href=&#34;#3-三角矩阵&#34; class=&#34;headerlink&#34; title=&#34;3.三角矩阵&#34;&gt;&lt;/a&gt;3.三角矩阵&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2022/07/31/DS005/image-20220731160030225.png&#34; alt=&#34;image-20220731160030225&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-稀疏矩阵&#34;&gt;&lt;a href=&#34;#4-稀疏矩阵&#34; class=&#34;headerlink&#34; title=&#34;4.稀疏矩阵&#34;&gt;&lt;/a&gt;4.稀疏矩阵&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;特别提醒：稀疏矩阵压缩储存后便失去了随机出去特性！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/07/31/DS005/image-20220731160115967.png&#34; alt=&#34;image-20220731160115967&#34;&gt;&lt;/p&gt;
</content>
        <category term="Data Structure" />
        <category term="Array" />
        <updated>2022-07-31T07:55:24.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/07/30/DS004/</id>
        <title>队列应用题</title>
        <link rel="alternate" href="http://example.com/2022/07/30/DS004/"/>
        <content type="html">&lt;h1 id=&#34;队列应用题&#34;&gt;&lt;a href=&#34;#队列应用题&#34; class=&#34;headerlink&#34; title=&#34;队列应用题&#34;&gt;&lt;/a&gt;队列应用题&lt;/h1&gt;&lt;h2 id=&#34;1-队列的顺序存储结构&#34;&gt;&lt;a href=&#34;#1-队列的顺序存储结构&#34; class=&#34;headerlink&#34; title=&#34;1.队列的顺序存储结构&#34;&gt;&lt;/a&gt;1.队列的顺序存储结构&lt;/h2&gt;&lt;h3 id=&#34;图像描述&#34;&gt;&lt;a href=&#34;#图像描述&#34; class=&#34;headerlink&#34; title=&#34;图像描述&#34;&gt;&lt;/a&gt;图像描述&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;特别提醒：注意头尾指针初始位置，以及队列满时的位置！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/07/30/DS004/image-20220730143027917.png&#34; alt=&#34;image-20220730143027917&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;队列的顺序储存类型描述&#34;&gt;&lt;a href=&#34;#队列的顺序储存类型描述&#34; class=&#34;headerlink&#34; title=&#34;队列的顺序储存类型描述&#34;&gt;&lt;/a&gt;队列的顺序储存类型描述&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; MaxSize 100								&lt;span class=&#34;hljs-comment&#34;&gt;//定义队列中元素的最大个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; data[MaxSize];							&lt;span class=&#34;hljs-comment&#34;&gt;//存放队列指针&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; rear,front;								&lt;span class=&#34;hljs-comment&#34;&gt;//对头元素和队尾指针&lt;/span&gt;&lt;br&gt;&amp;#125;SqQueue; &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;2-循环队列&#34;&gt;&lt;a href=&#34;#2-循环队列&#34; class=&#34;headerlink&#34; title=&#34;2.循环队列&#34;&gt;&lt;/a&gt;2.循环队列&lt;/h2&gt;&lt;h3 id=&#34;1-图像描述&#34;&gt;&lt;a href=&#34;#1-图像描述&#34; class=&#34;headerlink&#34; title=&#34;1.图像描述&#34;&gt;&lt;/a&gt;1.图像描述&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;特别提醒：方案一的本质就是牺牲掉一个储存单位来区分是队空还是队满！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/07/30/DS004/image-20220730143502062.png&#34; alt=&#34;image-20220730143502062&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-初始化&#34;&gt;&lt;a href=&#34;#2-初始化&#34; class=&#34;headerlink&#34; title=&#34;2.初始化&#34;&gt;&lt;/a&gt;2.初始化&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InitQueue&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SqQueue &amp;amp;Q)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    Q.front=Q.rear=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;							&lt;span class=&#34;hljs-comment&#34;&gt;//初始化队首、队尾指针&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-判断空&#34;&gt;&lt;a href=&#34;#3-判断空&#34; class=&#34;headerlink&#34; title=&#34;3.判断空&#34;&gt;&lt;/a&gt;3.判断空&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;isEmpty&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SqQueue &amp;amp;Q)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(Q.front == Q.rear) &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;;				&lt;span class=&#34;hljs-comment&#34;&gt;//队空条件&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-入队&#34;&gt;&lt;a href=&#34;#4-入队&#34; class=&#34;headerlink&#34; title=&#34;4.入队&#34;&gt;&lt;/a&gt;4.入队&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;EnQueue&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SqQueue &amp;amp;Q,Elemtype x)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;((Q.rear+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)%MaxSize == Q.front ) &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;;			&lt;span class=&#34;hljs-comment&#34;&gt;//队满则报错&lt;/span&gt;&lt;br&gt;    Q.data=[Q.rear]=x;&lt;br&gt;    Q.rear=(Q.rear+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)%Maxsize;									&lt;span class=&#34;hljs-comment&#34;&gt;//队尾指针加1取模&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;5-出队&#34;&gt;&lt;a href=&#34;#5-出队&#34; class=&#34;headerlink&#34; title=&#34;5.出队&#34;&gt;&lt;/a&gt;5.出队&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;DeQueue&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Squeue &amp;amp;Q,Elemtype &amp;amp;x)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(Q.rear == Q.front )  &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;;						&lt;span class=&#34;hljs-comment&#34;&gt;//队空则报错&lt;/span&gt;&lt;br&gt;    x=Q.data[Q.front];&lt;br&gt;    Q.front=(Q.front+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)%MaxSize;								&lt;span class=&#34;hljs-comment&#34;&gt;//对头指针加1取模&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;3-队列的链式储存结构&#34;&gt;&lt;a href=&#34;#3-队列的链式储存结构&#34; class=&#34;headerlink&#34; title=&#34;3.队列的链式储存结构&#34;&gt;&lt;/a&gt;3.队列的链式储存结构&lt;/h2&gt;&lt;h3 id=&#34;1-图像描述-1&#34;&gt;&lt;a href=&#34;#1-图像描述-1&#34; class=&#34;headerlink&#34; title=&#34;1.图像描述&#34;&gt;&lt;/a&gt;1.图像描述&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;不带头节点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/07/30/DS004/image-20220730144635084.png&#34; alt=&#34;image-20220730144635084&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;带头节点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/07/30/DS004/image-20220730144714656.png&#34; alt=&#34;image-20220730144714656&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-队列的链式储存类型描述为&#34;&gt;&lt;a href=&#34;#2-队列的链式储存类型描述为&#34; class=&#34;headerlink&#34; title=&#34;2.队列的链式储存类型描述为&#34;&gt;&lt;/a&gt;2.队列的链式储存类型描述为&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;特别提醒：这里需要强加掌握！&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;LinkNode&lt;/span&gt;&amp;#123;&lt;/span&gt;									&lt;span class=&#34;hljs-comment&#34;&gt;//链式队列结点&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; data;&lt;br&gt;    &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Linknode&lt;/span&gt; *&lt;span class=&#34;hljs-title&#34;&gt;next&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&amp;#125;LinkNode;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;												&lt;span class=&#34;hljs-comment&#34;&gt;//链式队列&lt;/span&gt;&lt;br&gt;    linkNode *front,*rear;									&lt;span class=&#34;hljs-comment&#34;&gt;//队列的队头和队尾指针&lt;/span&gt;&lt;br&gt;&amp;#125;LinkQueue;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-初始化&#34;&gt;&lt;a href=&#34;#3-初始化&#34; class=&#34;headerlink&#34; title=&#34;3.初始化&#34;&gt;&lt;/a&gt;3.初始化&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InitQueue&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(LinkQueue &amp;amp;Q)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    Q.front=Q.rear=(LinkNode*)&lt;span class=&#34;hljs-built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;&lt;/span&gt;(LinkNode));				&lt;span class=&#34;hljs-comment&#34;&gt;//建立头结点&lt;/span&gt;&lt;br&gt;    Q.front-&amp;gt;next =&lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;;											&lt;span class=&#34;hljs-comment&#34;&gt;//初始为空&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-判队空&#34;&gt;&lt;a href=&#34;#4-判队空&#34; class=&#34;headerlink&#34; title=&#34;4.判队空&#34;&gt;&lt;/a&gt;4.判队空&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;IsEmpty&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(LinkQueue &amp;amp;Q)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(Q.front == Q.rear) &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;5-入队&#34;&gt;&lt;a href=&#34;#5-入队&#34; class=&#34;headerlink&#34; title=&#34;5.入队&#34;&gt;&lt;/a&gt;5.入队&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Enqueue&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(LinkQueue &amp;amp;Q,Elentype x)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    LinkNode *s =(LinkNode*)&lt;span class=&#34;hljs-built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;&lt;/span&gt;(LinkNode));&lt;br&gt;    s&amp;gt;data = x;									&lt;span class=&#34;hljs-comment&#34;&gt;//创建新结点，插入到表尾&lt;/span&gt;&lt;br&gt;    s-&amp;gt;next =&lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;;&lt;br&gt;    Q.rear-&amp;gt;next = s;&lt;br&gt;    Q.rear = s;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;6-出队&#34;&gt;&lt;a href=&#34;#6-出队&#34; class=&#34;headerlink&#34; title=&#34;6.出队&#34;&gt;&lt;/a&gt;6.出队&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;特别提醒：这里需要注意如果删除后变为空队列需要怎么处理！&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;DeQueue&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(LinkQueue &amp;amp;Q,Elentype &amp;amp;x)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(Q.front == Q.rear)  &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;;&lt;br&gt;   	LinkNode *p=Q.front-&amp;gt;next;&lt;br&gt;    x=p-&amp;gt;data;&lt;br&gt;    Q.front-&amp;gt;next = p-&amp;gt;next;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(Q.rear = p)&lt;br&gt;        Q.rear = Q.front;						&lt;span class=&#34;hljs-comment&#34;&gt;//若原队列中只有一个结点，删除后变空&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;free&lt;/span&gt;(p);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="Data Structure" />
        <category term="Queue" />
        <updated>2022-07-30T06:23:10.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/07/29/DS003/</id>
        <title>栈应用题</title>
        <link rel="alternate" href="http://example.com/2022/07/29/DS003/"/>
        <content type="html">&lt;h2 id=&#34;栈应用题&#34;&gt;&lt;a href=&#34;#栈应用题&#34; class=&#34;headerlink&#34; title=&#34;栈应用题&#34;&gt;&lt;/a&gt;栈应用题&lt;/h2&gt;&lt;h3 id=&#34;栈&#34;&gt;&lt;a href=&#34;#栈&#34; class=&#34;headerlink&#34; title=&#34;栈&#34;&gt;&lt;/a&gt;栈&lt;/h3&gt;&lt;h4 id=&#34;1-顺序栈&#34;&gt;&lt;a href=&#34;#1-顺序栈&#34; class=&#34;headerlink&#34; title=&#34;1.顺序栈&#34;&gt;&lt;/a&gt;1.顺序栈&lt;/h4&gt;&lt;h5 id=&#34;顺序栈的图像&#34;&gt;&lt;a href=&#34;#顺序栈的图像&#34; class=&#34;headerlink&#34; title=&#34;顺序栈的图像&#34;&gt;&lt;/a&gt;顺序栈的图像&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;特别注意：top指针的初值！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/07/29/DS003/image-20220729163738618.png&#34; alt=&#34;image-20220729163738618&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;栈的顺序存储类型描述&#34;&gt;&lt;a href=&#34;#栈的顺序存储类型描述&#34; class=&#34;headerlink&#34; title=&#34;栈的顺序存储类型描述&#34;&gt;&lt;/a&gt;栈的顺序存储类型描述&lt;/h5&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; MaxSize 50										&lt;span class=&#34;hljs-comment&#34;&gt;//定义栈中元素的最大个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    Elemtype data[MaxSize];								&lt;span class=&#34;hljs-comment&#34;&gt;//存放栈中元素&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; top;											&lt;span class=&#34;hljs-comment&#34;&gt;//栈顶指针&lt;/span&gt;&lt;br&gt;&amp;#125;SqStack;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&#34;初始化&#34;&gt;&lt;a href=&#34;#初始化&#34; class=&#34;headerlink&#34; title=&#34;初始化&#34;&gt;&lt;/a&gt;初始化&lt;/h5&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InitStack&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SqStack &amp;amp;S)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;	S.top=&lt;span class=&#34;hljs-number&#34;&gt;-1&lt;/span&gt;                  						&lt;span class=&#34;hljs-comment&#34;&gt;//初始化栈顶指针&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&#34;判栈空&#34;&gt;&lt;a href=&#34;#判栈空&#34; class=&#34;headerlink&#34; title=&#34;判栈空&#34;&gt;&lt;/a&gt;判栈空&lt;/h5&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;StackEmpty&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SqStack &amp;amp;S)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(S.top == &lt;span class=&#34;hljs-number&#34;&gt;-1&lt;/span&gt;)									&lt;span class=&#34;hljs-comment&#34;&gt;//栈空&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;;				&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;											&lt;span class=&#34;hljs-comment&#34;&gt;//不空&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&#34;进栈&#34;&gt;&lt;a href=&#34;#进栈&#34; class=&#34;headerlink&#34; title=&#34;进栈&#34;&gt;&lt;/a&gt;进栈&lt;/h5&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Push&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SqStack &amp;amp;S,Elemtype x)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(S.top == MaxSize&lt;span class=&#34;hljs-number&#34;&gt;-1&lt;/span&gt;)							&lt;span class=&#34;hljs-comment&#34;&gt;//栈满，报错&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&lt;br&gt;        S.data[++S.top]=x;							&lt;span class=&#34;hljs-comment&#34;&gt;//指针先加1，再入栈&lt;/span&gt;&lt;br&gt;    	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&#34;出栈&#34;&gt;&lt;a href=&#34;#出栈&#34; class=&#34;headerlink&#34; title=&#34;出栈&#34;&gt;&lt;/a&gt;出栈&lt;/h5&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Pop&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SqStack &amp;amp;S,Elemtype &amp;amp;x)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(S.top ==&lt;span class=&#34;hljs-number&#34;&gt;-1&lt;/span&gt;)									&lt;span class=&#34;hljs-comment&#34;&gt;//栈空，报错&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&lt;br&gt;        x=S.data[S.top--];							&lt;span class=&#34;hljs-comment&#34;&gt;//先入栈，指针再减1&lt;/span&gt;&lt;br&gt;    	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&#34;读栈顶元素&#34;&gt;&lt;a href=&#34;#读栈顶元素&#34; class=&#34;headerlink&#34; title=&#34;读栈顶元素&#34;&gt;&lt;/a&gt;读栈顶元素&lt;/h5&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;GetTop&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SqStack &amp;amp;S,Elemtype &amp;amp;x)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(S.top == &lt;span class=&#34;hljs-number&#34;&gt;-1&lt;/span&gt;)									&lt;span class=&#34;hljs-comment&#34;&gt;//栈空，报错&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&lt;br&gt;        x = S.data[S.top];							&lt;span class=&#34;hljs-comment&#34;&gt;//x记录栈顶元素&lt;/span&gt;&lt;br&gt;    	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;2-共享栈&#34;&gt;&lt;a href=&#34;#2-共享栈&#34; class=&#34;headerlink&#34; title=&#34;2.共享栈&#34;&gt;&lt;/a&gt;2.共享栈&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;特别注意：top0指针和top1指针的初始化的问题！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/07/29/DS003/image-20220729165150586.png&#34; alt=&#34;image-20220729165150586&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;3-链栈&#34;&gt;&lt;a href=&#34;#3-链栈&#34; class=&#34;headerlink&#34; title=&#34;3.链栈&#34;&gt;&lt;/a&gt;3.链栈&lt;/h4&gt;&lt;h5 id=&#34;链栈的图像&#34;&gt;&lt;a href=&#34;#链栈的图像&#34; class=&#34;headerlink&#34; title=&#34;链栈的图像&#34;&gt;&lt;/a&gt;链栈的图像&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;特别注意：此链栈不带头结点，且所有操作都是在表头进行！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/07/29/DS003/image-20220729165541592.png&#34; alt=&#34;image-20220729165541592&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;栈的链式存储类型描述&#34;&gt;&lt;a href=&#34;#栈的链式存储类型描述&#34; class=&#34;headerlink&#34; title=&#34;栈的链式存储类型描述&#34;&gt;&lt;/a&gt;栈的链式存储类型描述&lt;/h5&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Linknode&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    ElemType data;									&lt;span class=&#34;hljs-comment&#34;&gt;//数据域&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Linknode&lt;/span&gt; *&lt;span class=&#34;hljs-title&#34;&gt;next&lt;/span&gt;;&lt;/span&gt;							&lt;span class=&#34;hljs-comment&#34;&gt;//指针域&lt;/span&gt;&lt;br&gt;&amp;#125;*LiStack;											&lt;span class=&#34;hljs-comment&#34;&gt;//栈类型定义&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="Data Structure" />
        <category term="Stack" />
        <updated>2022-07-29T08:31:44.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/07/25/DS002/</id>
        <title>快速排序</title>
        <link rel="alternate" href="http://example.com/2022/07/25/DS002/"/>
        <content type="html">&lt;h2 id=&#34;快速排序&#34;&gt;&lt;a href=&#34;#快速排序&#34; class=&#34;headerlink&#34; title=&#34;快速排序&#34;&gt;&lt;/a&gt;快速排序&lt;/h2&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;QuickSort&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(ElemType A[],&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; low,&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; high)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(low&amp;lt;high)&amp;#123;													&lt;span class=&#34;hljs-comment&#34;&gt;//递归跳出的条件&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Partition()就是划分操作，将表A[low...high]划分为满足上述条件的两个子表&lt;/span&gt;&lt;br&gt;        			&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; pivotpos = &lt;span class=&#34;hljs-built_in&#34;&gt;Partition&lt;/span&gt;(A,low,high);			&lt;span class=&#34;hljs-comment&#34;&gt;//划分&lt;/span&gt;&lt;br&gt;        			&lt;span class=&#34;hljs-built_in&#34;&gt;QuickSort&lt;/span&gt;(A,low,pivotpos&lt;span class=&#34;hljs-number&#34;&gt;-1&lt;/span&gt;);					&lt;span class=&#34;hljs-comment&#34;&gt;//依次对两个子表进行递归排序&lt;/span&gt;&lt;br&gt;        			&lt;span class=&#34;hljs-built_in&#34;&gt;QuickSort&lt;/span&gt;(A,pivotpos+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,high);					&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Partition&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(ElemType A[],&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; low,&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; high)&lt;/span&gt;&lt;/span&gt;&amp;#123;			&lt;span class=&#34;hljs-comment&#34;&gt;//一趟划分&lt;/span&gt;&lt;br&gt;		ElemType pivot = A[low];			&lt;span class=&#34;hljs-comment&#34;&gt;//将当前表中第一个元素设为枢轴，对表进行划分&lt;/span&gt;&lt;br&gt;    	&lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(low&amp;lt;high)&amp;#123;					&lt;span class=&#34;hljs-comment&#34;&gt;//循环跳出条件&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(low&amp;lt;high&amp;amp;&amp;amp;A[high]&amp;gt;=pivot)     --high;&lt;br&gt;           	A[low]=A[high];					&lt;span class=&#34;hljs-comment&#34;&gt;//将比枢轴小的元素移动到左侧&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(low&amp;lt;high&amp;amp;&amp;amp;A[low]&amp;lt;=pivot)  ++low;&lt;br&gt;            A[high]=A[low];					&lt;span class=&#34;hljs-comment&#34;&gt;//将比枢轴大的元素移动到右侧&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;    	A[low]=pivot;						&lt;span class=&#34;hljs-comment&#34;&gt;//枢轴元素存放到最终位置&lt;/span&gt;&lt;br&gt;    	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; low;							&lt;span class=&#34;hljs-comment&#34;&gt;//返回存放枢轴的最终位置&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="Data Structure" />
        <category term="QuickSort" />
        <updated>2022-07-25T08:54:55.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/06/24/DS001/</id>
        <title>数据结构第一章绪论</title>
        <link rel="alternate" href="http://example.com/2022/06/24/DS001/"/>
        <content type="html">&lt;h1 id=&#34;数据结构第一章绪论&#34;&gt;&lt;a href=&#34;#数据结构第一章绪论&#34; class=&#34;headerlink&#34; title=&#34;数据结构第一章绪论&#34;&gt;&lt;/a&gt;数据结构第一章绪论&lt;/h1&gt;&lt;h2 id=&#34;知识总览&#34;&gt;&lt;a href=&#34;#知识总览&#34; class=&#34;headerlink&#34; title=&#34;知识总览&#34;&gt;&lt;/a&gt;知识总览&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2022/06/24/DS001/image-20220628155551705.png&#34; alt=&#34;image-20220628155551705&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-1-1基本概念和术语&#34;&gt;&lt;a href=&#34;#1-1-1基本概念和术语&#34; class=&#34;headerlink&#34; title=&#34;1.1.1基本概念和术语&#34;&gt;&lt;/a&gt;1.1.1基本概念和术语&lt;/h3&gt;&lt;h4 id=&#34;1-数据&#34;&gt;&lt;a href=&#34;#1-数据&#34; class=&#34;headerlink&#34; title=&#34;1.数据&#34;&gt;&lt;/a&gt;1.数据&lt;/h4&gt;&lt;p&gt;​		数据是信息的载体，是描述客观事物属性的数，字符及所有能输入到计算机中并被计算机程序识别和处理的集合。&lt;/p&gt;
&lt;p&gt;数据是计算机程序加工的原料&lt;/p&gt;
&lt;h4 id=&#34;2-数据元素&#34;&gt;&lt;a href=&#34;#2-数据元素&#34; class=&#34;headerlink&#34; title=&#34;2.数据元素&#34;&gt;&lt;/a&gt;2.数据元素&lt;/h4&gt;&lt;p&gt;​		数据元素是数据的基本单位，通常作为一个整体进行考虑和处理。一个数据元素可由若干数据项组成，数据项是构成数据元素的不可分割的最小单位。	&lt;/p&gt;
&lt;h4 id=&#34;3-数据对象&#34;&gt;&lt;a href=&#34;#3-数据对象&#34; class=&#34;headerlink&#34; title=&#34;3.数据对象&#34;&gt;&lt;/a&gt;3.数据对象&lt;/h4&gt;&lt;p&gt;​		数据对象是具有相同性质的数据元素的集合，是数据的一个子集。&lt;/p&gt;
&lt;h4 id=&#34;4-数据类型是一个值的集合和定义在此集合上的一组操作的总称&#34;&gt;&lt;a href=&#34;#4-数据类型是一个值的集合和定义在此集合上的一组操作的总称&#34; class=&#34;headerlink&#34; title=&#34;4.数据类型是一个值的集合和定义在此集合上的一组操作的总称&#34;&gt;&lt;/a&gt;4.数据类型是一个值的集合和定义在此集合上的一组操作的总称&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;原子类型：其值不可再分的数据类型&lt;/li&gt;
&lt;li&gt;结构类型：其值可以再分解的数据类型&lt;/li&gt;
&lt;li&gt;抽象数据类型：抽象数据组织及与之相关的操作&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;1-1-2数据结构三要素&#34;&gt;&lt;a href=&#34;#1-1-2数据结构三要素&#34; class=&#34;headerlink&#34; title=&#34;1.1.2数据结构三要素&#34;&gt;&lt;/a&gt;1.1.2数据结构三要素&lt;/h3&gt;&lt;h4 id=&#34;1-数据的逻辑结构&#34;&gt;&lt;a href=&#34;#1-数据的逻辑结构&#34; class=&#34;headerlink&#34; title=&#34;1.数据的逻辑结构&#34;&gt;&lt;/a&gt;1.数据的逻辑结构&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;/2022/06/24/DS001/image-20220628155609948.png&#34; alt=&#34;image-20220628155609948&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2-数据的存储结构&#34;&gt;&lt;a href=&#34;#2-数据的存储结构&#34; class=&#34;headerlink&#34; title=&#34;2.数据的存储结构&#34;&gt;&lt;/a&gt;2.数据的存储结构&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;/2022/06/24/DS001/image-20220628155615386.png&#34; alt=&#34;image-20220628155615386&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;3-数据的运算&#34;&gt;&lt;a href=&#34;#3-数据的运算&#34; class=&#34;headerlink&#34; title=&#34;3.数据的运算&#34;&gt;&lt;/a&gt;3.数据的运算&lt;/h4&gt;&lt;p&gt;施加在数据上的运算包括运算的定义和实现。运算的定义是针对逻辑结构的，指出运算的功能;运算的实现是针对存储结构的，指出运算的具体步骤&lt;/p&gt;
&lt;h3 id=&#34;知识回顾与重要考点&#34;&gt;&lt;a href=&#34;#知识回顾与重要考点&#34; class=&#34;headerlink&#34; title=&#34;知识回顾与重要考点&#34;&gt;&lt;/a&gt;知识回顾与重要考点&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2022/06/24/DS001/image-20220628155619678.png&#34; alt=&#34;image-20220628155619678&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/06/24/DS001/image-20220628155623998.png&#34; alt=&#34;image-20220628155623998&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-2-1算法的基本概念&#34;&gt;&lt;a href=&#34;#1-2-1算法的基本概念&#34; class=&#34;headerlink&#34; title=&#34;1.2.1算法的基本概念&#34;&gt;&lt;/a&gt;1.2.1算法的基本概念&lt;/h3&gt;&lt;p&gt;算法是对特定问题求解步骤的一种描述。他是指令的有限序列，其中的每条指令表示一个或多个操作。&lt;/p&gt;
&lt;h3 id=&#34;知识回顾与重要考点-1&#34;&gt;&lt;a href=&#34;#知识回顾与重要考点-1&#34; class=&#34;headerlink&#34; title=&#34;知识回顾与重要考点&#34;&gt;&lt;/a&gt;知识回顾与重要考点&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2022/06/24/DS001/image-20220628155630085.png&#34; alt=&#34;image-20220628155630085&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-2-2算法效率的度量&#34;&gt;&lt;a href=&#34;#1-2-2算法效率的度量&#34; class=&#34;headerlink&#34; title=&#34;1.2.2算法效率的度量&#34;&gt;&lt;/a&gt;1.2.2算法效率的度量&lt;/h3&gt;&lt;h4 id=&#34;1-时间复杂度&#34;&gt;&lt;a href=&#34;#1-时间复杂度&#34; class=&#34;headerlink&#34; title=&#34;1.时间复杂度&#34;&gt;&lt;/a&gt;1.时间复杂度&lt;/h4&gt;&lt;p&gt;一个语句的频度是指该语句在算法中被重复执行的次数。算法中所有语句的频数之和记为T(n)，它是该算法问题规模n的函数，时间复杂度主要分析T(n)的数量级。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/06/24/DS001/image-20220628155634291.png&#34; alt=&#34;image-20220628155634291&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2-空间复杂度&#34;&gt;&lt;a href=&#34;#2-空间复杂度&#34; class=&#34;headerlink&#34; title=&#34;2.空间复杂度&#34;&gt;&lt;/a&gt;2.空间复杂度&lt;/h4&gt;&lt;p&gt;算法的空间复杂度S(n)定义为该算法所耗费的存储空间，它是问题规模n的函数。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/06/24/DS001/image-20220628155639858.png&#34; alt=&#34;image-20220628155639858&#34;&gt;&lt;/p&gt;
</content>
        <category term="Data Structure" />
        <updated>2022-06-24T08:25:52.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/06/22/mirror001/</id>
        <title>国内常用镜像源</title>
        <link rel="alternate" href="http://example.com/2022/06/22/mirror001/"/>
        <content type="html">&lt;h2 id=&#34;国内常用镜像源&#34;&gt;&lt;a href=&#34;#国内常用镜像源&#34; class=&#34;headerlink&#34; title=&#34;国内常用镜像源&#34;&gt;&lt;/a&gt;国内常用镜像源&lt;/h2&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;清华大学： https:&lt;span class=&#34;hljs-comment&#34;&gt;//pypi.tuna.tsinghua.edu.cn/simple/&lt;/span&gt;&lt;br&gt;阿里云： https:&lt;span class=&#34;hljs-comment&#34;&gt;//mirrors.aliyun.com/pypi/simple/&lt;/span&gt;&lt;br&gt;豆瓣： http:&lt;span class=&#34;hljs-comment&#34;&gt;//pypi.douban.com/simple/&lt;/span&gt;&lt;br&gt;中国科学技术大学： http:&lt;span class=&#34;hljs-comment&#34;&gt;//pypi.mirrors.ustc.edu.cn/simple/&lt;/span&gt;&lt;br&gt;华中科技大学：http:&lt;span class=&#34;hljs-comment&#34;&gt;//pypi.hustunique.com/simple/&lt;/span&gt;&lt;br&gt;山东理工大学：http:&lt;span class=&#34;hljs-comment&#34;&gt;//pypi.sdutlinux.org/simple/&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="Mirror" />
        <updated>2022-06-22T12:13:38.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/06/12/%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</id>
        <title>内存对齐</title>
        <link rel="alternate" href="http://example.com/2022/06/12/%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/"/>
        <content type="html">&lt;h1 id=&#34;内存对齐&#34;&gt;&lt;a href=&#34;#内存对齐&#34; class=&#34;headerlink&#34; title=&#34;内存对齐&#34;&gt;&lt;/a&gt;内存对齐&lt;/h1&gt;&lt;h2 id=&#34;CPU读取内存的方式&#34;&gt;&lt;a href=&#34;#CPU读取内存的方式&#34; class=&#34;headerlink&#34; title=&#34;CPU读取内存的方式&#34;&gt;&lt;/a&gt;CPU读取内存的方式&lt;/h2&gt;&lt;p&gt;CPU读取内存的方式其实非常复杂，为了更进一步的了解相关的原理，需要对计算机组成原理进行深度学习。&lt;/p&gt;
&lt;h3 id=&#34;Memory-access-granularity-内存读取粒度&#34;&gt;&lt;a href=&#34;#Memory-access-granularity-内存读取粒度&#34; class=&#34;headerlink&#34; title=&#34;Memory access granularity(内存读取粒度)&#34;&gt;&lt;/a&gt;Memory access granularity(内存读取粒度)&lt;/h3&gt;&lt;p&gt;However, your computer’s processor does not read from and write to memory in byte-sized chunks. Instead, it accesses memory in two-, four-, eight- 16- or even 32-byte chunks. We’ll call the size in which a processor accesses memory its memory access granularity.&lt;/p&gt;
&lt;p&gt;CPU把内存当成是一块一块的，块的大小可以是2，4，8，16字节大小，因此CPU在读取内存时是一块一块进行读取的。块大小成为&lt;em&gt;memory access granularity（粒度）&lt;/em&gt; 本人把它翻译为“内存读取粒度” 。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/feng9exe/p/10059543.html&#34;&gt;https://www.cnblogs.com/feng9exe/p/10059543.html&lt;/a&gt; ”内存对齐“&lt;/p&gt;
&lt;h2 id=&#34;内存对齐举例&#34;&gt;&lt;a href=&#34;#内存对齐举例&#34; class=&#34;headerlink&#34; title=&#34;内存对齐举例&#34;&gt;&lt;/a&gt;内存对齐举例&lt;/h2&gt;&lt;p&gt;假设此计算机的内存读取粒度是4。&lt;/p&gt;
&lt;h3 id=&#34;如果内存对齐时&#34;&gt;&lt;a href=&#34;#如果内存对齐时&#34; class=&#34;headerlink&#34; title=&#34;如果内存对齐时&#34;&gt;&lt;/a&gt;如果内存对齐时&lt;/h3&gt;&lt;p&gt;前提知识：&lt;/p&gt;
&lt;p&gt;1 Byte &amp;#x3D; 8bit &lt;/p&gt;
&lt;p&gt;1 int8 占用 1 Byte&lt;/p&gt;
&lt;p&gt;1 int16 占用 2 Byte&lt;/p&gt;
&lt;p&gt;1 int32 占用 4 Byte&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//一个结构体的定义如下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    int8 a;&lt;br&gt;    int32 b;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;4&lt;/th&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;th&gt;6&lt;/th&gt;
&lt;th&gt;7&lt;/th&gt;
&lt;th&gt;8&lt;/th&gt;
&lt;th&gt;9&lt;/th&gt;
&lt;th&gt;10&lt;/th&gt;
&lt;th&gt;11&lt;/th&gt;
&lt;th&gt;12&lt;/th&gt;
&lt;th&gt;13&lt;/th&gt;
&lt;th&gt;14&lt;/th&gt;
&lt;th&gt;15&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;int8 a&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;int32 b&lt;/td&gt;
&lt;td&gt;int32 b&lt;/td&gt;
&lt;td&gt;int32 b&lt;/td&gt;
&lt;td&gt;int32 b&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;我们可以发现int8 a储存在0号内存上，占用1个Byte，1-3号内存空下了3个Byte。int32 b储存在了4-7号内存，一共4个Byte。&lt;/p&gt;
&lt;p&gt;由于此计算机的内存读取粒度时是4&lt;/p&gt;
&lt;p&gt;当需要读取a(0号内存)时，计算机会读取0-3号一组内存，然后去掉1-3号内存。访问次数1次。&lt;/p&gt;
&lt;p&gt;当需要读取b(4-7号内存时)，计算机会读取4-7号内存，访问次数1次。&lt;/p&gt;
&lt;h3 id=&#34;如果内存没有对齐时&#34;&gt;&lt;a href=&#34;#如果内存没有对齐时&#34; class=&#34;headerlink&#34; title=&#34;如果内存没有对齐时&#34;&gt;&lt;/a&gt;如果内存没有对齐时&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;th&gt;6&lt;/th&gt;
&lt;th&gt;7&lt;/th&gt;
&lt;th&gt;8&lt;/th&gt;
&lt;th&gt;9&lt;/th&gt;
&lt;th&gt;10&lt;/th&gt;
&lt;th&gt;11&lt;/th&gt;
&lt;th&gt;12&lt;/th&gt;
&lt;th&gt;13&lt;/th&gt;
&lt;th&gt;14&lt;/th&gt;
&lt;th&gt;15&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;int8 a&lt;/td&gt;
&lt;td&gt;int32 b&lt;/td&gt;
&lt;td&gt;int32 b&lt;/td&gt;
&lt;td&gt;int32 b&lt;/td&gt;
&lt;td&gt;int32 b&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;我们可以发现int8 a储存在0号内存上，占用了1个Byte。int32 b储存在1-4号内存上，一共4个Byte。&lt;/p&gt;
&lt;p&gt;由于此计算机的内存读取粒度时是4&lt;/p&gt;
&lt;p&gt;当需要读取a(0号内存)时，计算机会读取0-3号一组内存，然后去掉1-3号内存。访问次数1次。&lt;/p&gt;
&lt;p&gt;当需要读取b(1-4号内存)时，计算机会先读取0-3号一组内存，去掉0号内存，再读取4-7号一组内存，去掉5-7号内存，随后再拼接1-3号内存和4号内存组成完整的b。访问次数2次。&lt;/p&gt;
&lt;h2 id=&#34;内存对齐的目的&#34;&gt;&lt;a href=&#34;#内存对齐的目的&#34; class=&#34;headerlink&#34; title=&#34;内存对齐的目的&#34;&gt;&lt;/a&gt;内存对齐的目的&lt;/h2&gt;&lt;p&gt;合理的内存对齐可以高效的利用硬件性能，减少处理器内存访问次数。&lt;/p&gt;
&lt;h2 id=&#34;相关链接&#34;&gt;&lt;a href=&#34;#相关链接&#34; class=&#34;headerlink&#34; title=&#34;相关链接&#34;&gt;&lt;/a&gt;相关链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1Vt4y1m7DP?from=search&amp;amp;amp;seid=13964421962700904405&amp;amp;amp;spm_id_from=333.337.0.0&#34;&gt;https://www.bilibili.com/video/BV1Vt4y1m7DP?from=search&amp;amp;amp;seid=13964421962700904405&amp;amp;amp;spm_id_from=333.337.0.0&lt;/a&gt; “内存对齐”&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1v64y1X7YP?spm_id_from=333.999.0.0&#34;&gt;https://www.bilibili.com/video/BV1v64y1X7YP?spm_id_from=333.999.0.0&lt;/a&gt; “内存对齐对程序性能的影响”&lt;/p&gt;
</content>
        <updated>2022-06-12T07:11:29.730Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/06/12/MPI%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E7%AE%80%E5%8D%95%E7%9A%84%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6/</id>
        <title>MPI学习(一)-简单的发送接收</title>
        <link rel="alternate" href="http://example.com/2022/06/12/MPI%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E7%AE%80%E5%8D%95%E7%9A%84%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6/"/>
        <content type="html">&lt;h1 id=&#34;MPI-简单的发送接收&#34;&gt;&lt;a href=&#34;#MPI-简单的发送接收&#34; class=&#34;headerlink&#34; title=&#34;MPI-简单的发送接收&#34;&gt;&lt;/a&gt;MPI-简单的发送接收&lt;/h1&gt;&lt;p&gt;打印来自进程问候语句的MPI程序&lt;/p&gt;
&lt;h2 id=&#34;所使用的MPI原语&#34;&gt;&lt;a href=&#34;#所使用的MPI原语&#34; class=&#34;headerlink&#34; title=&#34;所使用的MPI原语&#34;&gt;&lt;/a&gt;所使用的MPI原语&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2022/06/12/MPI%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E7%AE%80%E5%8D%95%E7%9A%84%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6/mpi001.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/06/12/MPI%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E7%AE%80%E5%8D%95%E7%9A%84%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6/mpi002.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;程序运行平台&#34;&gt;&lt;a href=&#34;#程序运行平台&#34; class=&#34;headerlink&#34; title=&#34;程序运行平台&#34;&gt;&lt;/a&gt;程序运行平台&lt;/h2&gt;&lt;p&gt;北京超级云计算中心A3分区&lt;/p&gt;
&lt;h2 id=&#34;环境变量&#34;&gt;&lt;a href=&#34;#环境变量&#34; class=&#34;headerlink&#34; title=&#34;环境变量&#34;&gt;&lt;/a&gt;环境变量&lt;/h2&gt;&lt;p&gt;mpi&amp;#x2F;intel&amp;#x2F;2017.5&lt;/p&gt;
&lt;h2 id=&#34;编译指令&#34;&gt;&lt;a href=&#34;#编译指令&#34; class=&#34;headerlink&#34; title=&#34;编译指令&#34;&gt;&lt;/a&gt;编译指令&lt;/h2&gt;&lt;p&gt;mpicc  3.1.cpp -o 3.1&lt;/p&gt;
&lt;h2 id=&#34;运行指令&#34;&gt;&lt;a href=&#34;#运行指令&#34; class=&#34;headerlink&#34; title=&#34;运行指令&#34;&gt;&lt;/a&gt;运行指令&lt;/h2&gt;&lt;p&gt;mpirun -np 4 .&amp;#x2F;3.1(本地提交,采取4个进程)&lt;/p&gt;
&lt;h2 id=&#34;程序源代码&#34;&gt;&lt;a href=&#34;#程序源代码&#34; class=&#34;headerlink&#34; title=&#34;程序源代码&#34;&gt;&lt;/a&gt;程序源代码&lt;/h2&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;mpi.h&amp;gt;&lt;/span&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;//头文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; MAX_STRING = &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt; ;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; argc,&lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt; **argv)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt; greeting[MAX_STRING];&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; comm_sz;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; my_rank;&lt;br&gt;	MPI_Status status;&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;MPI_Init&lt;/span&gt;(&amp;amp;argc,&amp;amp;argv);&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;MPI_Comm_size&lt;/span&gt;(MPI_COMM_WORLD,&amp;amp;comm_sz);&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;MPI_Comm_rank&lt;/span&gt;(MPI_COMM_WORLD,&amp;amp;my_rank);&lt;br&gt;	&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(my_rank != &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;)&lt;br&gt;	&amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-comment&#34;&gt;//其他进程向0号进程发消息&lt;/span&gt;&lt;br&gt;		&lt;span class=&#34;hljs-built_in&#34;&gt;sprintf&lt;/span&gt;(greeting,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Greetings from process %d of %d!&amp;quot;&lt;/span&gt;,my_rank,comm_sz);&lt;br&gt;		&lt;span class=&#34;hljs-built_in&#34;&gt;MPI_Send&lt;/span&gt;(greeting,&lt;span class=&#34;hljs-built_in&#34;&gt;strlen&lt;/span&gt;(greeting)+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,MPI_CHAR,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,MPI_COMM_WORLD); &lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&lt;br&gt;	&amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Greetings from process %d of %d!\n&amp;quot;&lt;/span&gt;,my_rank,comm_sz);&lt;br&gt;		&lt;span class=&#34;hljs-comment&#34;&gt;//0号进程接受来自其他进程的消息并输出&lt;/span&gt;&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; q=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;q&amp;lt;comm_sz;q++)&lt;br&gt;		&amp;#123;&lt;br&gt;			&lt;span class=&#34;hljs-built_in&#34;&gt;MPI_Recv&lt;/span&gt;(greeting,MAX_STRING,MPI_CHAR,q,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,MPI_COMM_WORLD,&amp;amp;status);&lt;br&gt;			&lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;,greeting);&lt;br&gt;		&amp;#125;&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;MPI_Finalize&lt;/span&gt;();&lt;br&gt;	&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;程序运行结果&#34;&gt;&lt;a href=&#34;#程序运行结果&#34; class=&#34;headerlink&#34; title=&#34;程序运行结果&#34;&gt;&lt;/a&gt;程序运行结果&lt;/h2&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;Greetings from process &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; of &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;!&lt;br&gt;Greetings from process &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; of &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;!&lt;br&gt;Greetings from process &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; of &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;!&lt;br&gt;Greetings from process &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; of &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;!&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="MPI" />
        <updated>2022-06-12T07:11:29.651Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/06/12/AVX%E5%90%91%E9%87%8F%E5%8C%96%E5%AD%A6%E4%B9%A0(%E4%BA%8C)-%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90%E7%9A%84%E5%BA%94%E7%94%A8/</id>
        <title>AVX向量化学习(二)-内存对齐的应用</title>
        <link rel="alternate" href="http://example.com/2022/06/12/AVX%E5%90%91%E9%87%8F%E5%8C%96%E5%AD%A6%E4%B9%A0(%E4%BA%8C)-%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90%E7%9A%84%E5%BA%94%E7%94%A8/"/>
        <content type="html">&lt;h1 id=&#34;AVX指令集的简单操作-内存对齐版&#34;&gt;&lt;a href=&#34;#AVX指令集的简单操作-内存对齐版&#34; class=&#34;headerlink&#34; title=&#34;AVX指令集的简单操作(内存对齐版)&#34;&gt;&lt;/a&gt;AVX指令集的简单操作(内存对齐版)&lt;/h1&gt;&lt;p&gt;使用AVX指令集进行2个double型的数组相加操作&lt;/p&gt;
&lt;h2 id=&#34;常用的内存对齐函数&#34;&gt;&lt;a href=&#34;#常用的内存对齐函数&#34; class=&#34;headerlink&#34; title=&#34;常用的内存对齐函数&#34;&gt;&lt;/a&gt;常用的内存对齐函数&lt;/h2&gt;&lt;p&gt;因为AVX中要求mem__addr必须在32字节边界上对齐，否则可能会产生通用保护异常。  &lt;/p&gt;
&lt;h3 id=&#34;1&#34;&gt;&lt;a href=&#34;#1&#34; class=&#34;headerlink&#34; title=&#34;1.&#34;&gt;&lt;/a&gt;1.&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*	a =(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*)&lt;span class=&#34;hljs-built_in&#34;&gt;memalign&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;*&lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;));&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2&#34;&gt;&lt;a href=&#34;#2&#34; class=&#34;headerlink&#34; title=&#34;2.&#34;&gt;&lt;/a&gt;2.&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*	a =(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*)_mm_malloc(&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;*&lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;),&lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3&#34;&gt;&lt;a href=&#34;#3&#34; class=&#34;headerlink&#34; title=&#34;3.&#34;&gt;&lt;/a&gt;3.&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*	a =(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*)&lt;span class=&#34;hljs-built_in&#34;&gt;aligned_alloc&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;*&lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;));&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4&#34;&gt;&lt;a href=&#34;#4&#34; class=&#34;headerlink&#34; title=&#34;4.&#34;&gt;&lt;/a&gt;4.&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;__attribute__ ((&lt;span class=&#34;hljs-built_in&#34;&gt;aligned&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;)))&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; a[&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;]  =&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1.1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2.2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3.3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4.4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5.5&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6.6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;7.7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8.8&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2.1&lt;/span&gt;&amp;#125;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;使用到的AVX函数介绍&#34;&gt;&lt;a href=&#34;#使用到的AVX函数介绍&#34; class=&#34;headerlink&#34; title=&#34;使用到的AVX函数介绍&#34;&gt;&lt;/a&gt;使用到的AVX函数介绍&lt;/h2&gt;&lt;h3 id=&#34;1-1&#34;&gt;&lt;a href=&#34;#1-1&#34; class=&#34;headerlink&#34; title=&#34;1.&#34;&gt;&lt;/a&gt;1.&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;__m256d _mm256_load_pd (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;const&lt;/span&gt; * mem_addr)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Load 256-bits (composed of 4 packed double-precision (64-bit) floating-point elements) from memory into dst. mem_addr must be aligned on a 32-byte boundary or a general-protection exception may be generated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Operation&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;dst[&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;] := MEM[mem_addr+&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;:mem_addr]&lt;br&gt;dst[MAX:&lt;span class=&#34;hljs-number&#34;&gt;256&lt;/span&gt;] := &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-1&#34;&gt;&lt;a href=&#34;#2-1&#34; class=&#34;headerlink&#34; title=&#34;2.&#34;&gt;&lt;/a&gt;2.&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;__m256 _mm256_add_ps (__m256 a, __m256 b)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Add packed single-precision (32-bit) floating-point elements in a and b, and store the results in dst.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Operation&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs apache&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;FOR&lt;/span&gt; j := &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; to &lt;span class=&#34;hljs-number&#34;&gt;7&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-attribute&#34;&gt;i&lt;/span&gt; := j*&lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-attribute&#34;&gt;dst&lt;/span&gt;[i+&lt;span class=&#34;hljs-number&#34;&gt;31&lt;/span&gt;:i] := a[i+&lt;span class=&#34;hljs-number&#34;&gt;31&lt;/span&gt;:i] + b[i+&lt;span class=&#34;hljs-number&#34;&gt;31&lt;/span&gt;:i]&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;ENDFOR&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;dst&lt;/span&gt;[MAX:&lt;span class=&#34;hljs-number&#34;&gt;256&lt;/span&gt;] := &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-stream的作用：绕过缓存直接写入内存&#34;&gt;&lt;a href=&#34;#3-stream的作用：绕过缓存直接写入内存&#34; class=&#34;headerlink&#34; title=&#34;3.stream的作用：绕过缓存直接写入内存&#34;&gt;&lt;/a&gt;3.stream的作用：绕过缓存直接写入内存&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; _mm256_stream_pd (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * mem_addr, __m256d a)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Store 256-bits (composed of 4 packed double-precision (64-bit) floating-point elements) from a into memory using a non-temporal memory hint. mem_addr must be aligned on a 32-byte boundary or a general-protection exception may be generated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Operation&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;MEM[mem_addr+&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;:mem_addr] := a[&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;样例程序举例：&#34;&gt;&lt;a href=&#34;#样例程序举例：&#34; class=&#34;headerlink&#34; title=&#34;样例程序举例：&#34;&gt;&lt;/a&gt;样例程序举例：&lt;/h2&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;malloc.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;immintrin.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*	a =(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*)&lt;span class=&#34;hljs-built_in&#34;&gt;memalign&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;*&lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;));&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*	b =(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*)&lt;span class=&#34;hljs-built_in&#34;&gt;memalign&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;*&lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;));&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; af[&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;]=&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1.1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2.2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3.3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4.4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5.5&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6.6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;7.7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8.8&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2.1&lt;/span&gt;&amp;#125; ;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; bf[&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;]=&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;2.1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3.2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6.4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8.6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3.7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9.9&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5.1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4.2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6.6&lt;/span&gt;&amp;#125;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*	c =(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;*)&lt;span class=&#34;hljs-built_in&#34;&gt;memalign&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;*&lt;span class=&#34;hljs-built_in&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt;));&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i =&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;;i++)&lt;br&gt;	&amp;#123;&lt;br&gt;		a[i]=af[i];&lt;br&gt;		b[i]=bf[i];&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;	__m256d v0;&lt;br&gt;	__m256d v1;&lt;br&gt;	__m256d v2;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(;i&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;-4&lt;/span&gt;;i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;)&lt;br&gt;	&amp;#123;	&lt;br&gt;			v0 = _mm256_load_pd(a+i);&lt;br&gt;			v1 = _mm256_load_pd(b+i);&lt;br&gt;			v2=_mm256_add_pd(v0,v1);&lt;br&gt;		 	_mm256_stream_pd(c+i,v2);&lt;br&gt;			&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(;i&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;;i++)&lt;br&gt;	&amp;#123;&lt;br&gt;		c[i]=a[i]+b[i];&lt;br&gt;	&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;this is c.\n&amp;quot;&lt;/span&gt;);&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;;i++)&lt;br&gt;	&amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%lf\n&amp;quot;&lt;/span&gt;,c[i]);&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt; &amp;#125; &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;样例程序输出：&#34;&gt;&lt;a href=&#34;#样例程序输出：&#34; class=&#34;headerlink&#34; title=&#34;样例程序输出：&#34;&gt;&lt;/a&gt;样例程序输出：&lt;/h2&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt; is c.&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;3.200000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;5.400000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;9.700000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;13.000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;9.200000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;16.500000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;12.800000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;13.000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;8.700000&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;相关链接&#34;&gt;&lt;a href=&#34;#相关链接&#34; class=&#34;headerlink&#34; title=&#34;相关链接&#34;&gt;&lt;/a&gt;相关链接&lt;/h2&gt;&lt;p&gt;[&lt;a href=&#34;https://software.intel.com/sites/landingpage/IntrinsicsGuide/]&#34;&gt;https://software.intel.com/sites/landingpage/IntrinsicsGuide/]&lt;/a&gt;: 	“Intel® Intrinsics Guide”&lt;/p&gt;
</content>
        <category term="AVX" />
        <updated>2022-06-12T07:11:29.549Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/06/12/AVX%E5%90%91%E9%87%8F%E5%8C%96%E5%AD%A6%E4%B9%A0(%E4%B8%80)/</id>
        <title>AVX向量化学习(一)</title>
        <link rel="alternate" href="http://example.com/2022/06/12/AVX%E5%90%91%E9%87%8F%E5%8C%96%E5%AD%A6%E4%B9%A0(%E4%B8%80)/"/>
        <content type="html">&lt;h1 id=&#34;AVX指令集的简单操作&#34;&gt;&lt;a href=&#34;#AVX指令集的简单操作&#34; class=&#34;headerlink&#34; title=&#34;AVX指令集的简单操作&#34;&gt;&lt;/a&gt;AVX指令集的简单操作&lt;/h1&gt;&lt;p&gt;使用AVX指令集进行2个double型的数组相加操作&lt;/p&gt;
&lt;h2 id=&#34;使用到的AVX函数介绍&#34;&gt;&lt;a href=&#34;#使用到的AVX函数介绍&#34; class=&#34;headerlink&#34; title=&#34;使用到的AVX函数介绍&#34;&gt;&lt;/a&gt;使用到的AVX函数介绍&lt;/h2&gt;&lt;h3 id=&#34;1&#34;&gt;&lt;a href=&#34;#1&#34; class=&#34;headerlink&#34; title=&#34;1.&#34;&gt;&lt;/a&gt;1.&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;__m256 _mm256_loadu_ps (&lt;span class=&#34;hljs-keyword&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;const&lt;/span&gt; * mem_addr)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Description&#34;&gt;&lt;a href=&#34;#Description&#34; class=&#34;headerlink&#34; title=&#34;Description&#34;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;p&gt;Load 256-bits (composed of 8 packed single-precision (32-bit) floating-point elements) from memory into dst. mem_addr does not need to be aligned on any particular boundary.&lt;/p&gt;
&lt;h3 id=&#34;Operation&#34;&gt;&lt;a href=&#34;#Operation&#34; class=&#34;headerlink&#34; title=&#34;Operation&#34;&gt;&lt;/a&gt;Operation&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;dst[&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;] := MEM[mem_addr+&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;:mem_addr]&lt;br&gt;dst[MAX:&lt;span class=&#34;hljs-number&#34;&gt;256&lt;/span&gt;] := &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2&#34;&gt;&lt;a href=&#34;#2&#34; class=&#34;headerlink&#34; title=&#34;2.&#34;&gt;&lt;/a&gt;2.&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;__m256d _mm256_add_pd (__m256d a, __m256d b)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Description-1&#34;&gt;&lt;a href=&#34;#Description-1&#34; class=&#34;headerlink&#34; title=&#34;Description&#34;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;p&gt;Add packed double-precision (64-bit) floating-point elements in a and b, and store the results in dst.&lt;/p&gt;
&lt;h3 id=&#34;Operation-1&#34;&gt;&lt;a href=&#34;#Operation-1&#34; class=&#34;headerlink&#34; title=&#34;Operation&#34;&gt;&lt;/a&gt;Operation&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;FOR j := &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; to &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;&lt;br&gt;	i := j*&lt;span class=&#34;hljs-number&#34;&gt;64&lt;/span&gt;&lt;br&gt;	dst[i+&lt;span class=&#34;hljs-number&#34;&gt;63&lt;/span&gt;:i] := a[i+&lt;span class=&#34;hljs-number&#34;&gt;63&lt;/span&gt;:i] + b[i+&lt;span class=&#34;hljs-number&#34;&gt;63&lt;/span&gt;:i]&lt;br&gt;ENDFOR&lt;br&gt;dst[MAX:&lt;span class=&#34;hljs-number&#34;&gt;256&lt;/span&gt;] := &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3&#34;&gt;&lt;a href=&#34;#3&#34; class=&#34;headerlink&#34; title=&#34;3.&#34;&gt;&lt;/a&gt;3.&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; _mm256_storeu_pd (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * mem_addr, __m256d a)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Description-2&#34;&gt;&lt;a href=&#34;#Description-2&#34; class=&#34;headerlink&#34; title=&#34;Description&#34;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;p&gt;Store 256-bits (composed of 4 packed double-precision (64-bit) floating-point elements) from a into memory. mem_addr does not need to be aligned on any particular boundary.&lt;/p&gt;
&lt;h3 id=&#34;Operation-2&#34;&gt;&lt;a href=&#34;#Operation-2&#34; class=&#34;headerlink&#34; title=&#34;Operation&#34;&gt;&lt;/a&gt;Operation&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;MEM[mem_addr+&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;:mem_addr] := a[&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;未进行AVX向量化的情况&#34;&gt;&lt;a href=&#34;#未进行AVX向量化的情况&#34; class=&#34;headerlink&#34; title=&#34;未进行AVX向量化的情况&#34;&gt;&lt;/a&gt;未进行AVX向量化的情况&lt;/h2&gt;&lt;h3 id=&#34;程序源代码&#34;&gt;&lt;a href=&#34;#程序源代码&#34; class=&#34;headerlink&#34; title=&#34;程序源代码&#34;&gt;&lt;/a&gt;程序源代码&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; a[&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1.1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2.2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3.3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4.4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5.5&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6.6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;7.7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8.8&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2.1&lt;/span&gt;&amp;#125;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; b[&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;2.1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3.2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6.4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8.6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3.7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9.9&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5.1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4.2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6.6&lt;/span&gt;&amp;#125;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; c[&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;br&gt;	&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ;i&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;;i++)	&lt;br&gt;	&amp;#123;&lt;br&gt;		c[i]=a[i]+b[i];&lt;br&gt;		&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;this is c.\n&amp;quot;&lt;/span&gt;);&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;;i++)&lt;br&gt;	&amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%lf\n&amp;quot;&lt;/span&gt;,c[i]);&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt; &amp;#125; &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;程序输出&#34;&gt;&lt;a href=&#34;#程序输出&#34; class=&#34;headerlink&#34; title=&#34;程序输出&#34;&gt;&lt;/a&gt;程序输出&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt; is c.&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;3.200000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;5.400000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;9.700000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;13.000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;9.200000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;16.500000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;12.800000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;13.000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;8.700000&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;进行AVX向量化的情况&#34;&gt;&lt;a href=&#34;#进行AVX向量化的情况&#34; class=&#34;headerlink&#34; title=&#34;进行AVX向量化的情况&#34;&gt;&lt;/a&gt;进行AVX向量化的情况&lt;/h2&gt;&lt;h3 id=&#34;程序源代码-1&#34;&gt;&lt;a href=&#34;#程序源代码-1&#34; class=&#34;headerlink&#34; title=&#34;程序源代码&#34;&gt;&lt;/a&gt;程序源代码&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;immintrin.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; a[&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1.1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2.2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3.3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4.4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5.5&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6.6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;7.7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8.8&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2.1&lt;/span&gt;&amp;#125;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; b[&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;2.1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3.2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6.4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8.6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3.7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9.9&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5.1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4.2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6.6&lt;/span&gt;&amp;#125;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; c[&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;br&gt;	__m256d v0;&lt;br&gt;	__m256d v1;&lt;br&gt;	__m256d v2;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(;i&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;-4&lt;/span&gt;;i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;)&lt;br&gt;	&amp;#123;	&lt;br&gt;			v0 = _mm256_loadu_pd(a+i);&lt;br&gt;			v1 = _mm256_loadu_pd(b+i);&lt;br&gt;			v2=_mm256_add_pd(v0,v1);&lt;br&gt;		 	_mm256_storeu_pd(c+i,v2);&lt;br&gt;			&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(;i&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;;i++)&lt;br&gt;	&amp;#123;&lt;br&gt;		c[i]=a[i]+b[i];&lt;br&gt;	&lt;br&gt;	&amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;this is c with AVX.\n&amp;quot;&lt;/span&gt;);&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;;i++)&lt;br&gt;	&amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%lf\n&amp;quot;&lt;/span&gt;,c[i]);&lt;br&gt;	&amp;#125;&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt; &amp;#125; &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;程序输出-1&#34;&gt;&lt;a href=&#34;#程序输出-1&#34; class=&#34;headerlink&#34; title=&#34;程序输出&#34;&gt;&lt;/a&gt;程序输出&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt; is c with AVX.&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;3.200000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;5.400000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;9.700000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;13.000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;9.200000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;16.500000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;12.800000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;13.000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;8.700000&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;相关链接&#34;&gt;&lt;a href=&#34;#相关链接&#34; class=&#34;headerlink&#34; title=&#34;相关链接&#34;&gt;&lt;/a&gt;相关链接&lt;/h2&gt;&lt;p&gt;[&lt;a href=&#34;https://software.intel.com/sites/landingpage/IntrinsicsGuide/]&#34;&gt;https://software.intel.com/sites/landingpage/IntrinsicsGuide/]&lt;/a&gt;: 	“ Intel® Intrinsics Guide”&lt;/p&gt;
</content>
        <category term="AVX" />
        <updated>2022-06-12T07:11:29.538Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/05/20/slurm001/</id>
        <title>Slurm</title>
        <link rel="alternate" href="http://example.com/2022/05/20/slurm001/"/>
        <content type="html">&lt;h2 id=&#34;Slurm&#34;&gt;&lt;a href=&#34;#Slurm&#34; class=&#34;headerlink&#34; title=&#34;Slurm&#34;&gt;&lt;/a&gt;Slurm&lt;/h2&gt;&lt;h4 id=&#34;1-sstat-查看RUNNING作业&#34;&gt;&lt;a href=&#34;#1-sstat-查看RUNNING作业&#34; class=&#34;headerlink&#34; title=&#34;1.sstat 查看RUNNING作业&#34;&gt;&lt;/a&gt;1.sstat 查看RUNNING作业&lt;/h4&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;sstat -e&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2022/05/20/slurm001/image-20220520174453969.png&#34; alt=&#34;image-20220520174453969&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用举例：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;sstat -a --format=&amp;quot;JobId,Pids,AveCPU,AveRSS,MaxRSS&amp;quot;  1755818&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2022/05/20/slurm001/image-20220520175001331.png&#34; alt=&#34;image-20220520175001331&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2-sacct-查看FINISHED作业&#34;&gt;&lt;a href=&#34;#2-sacct-查看FINISHED作业&#34; class=&#34;headerlink&#34; title=&#34;2.sacct 查看FINISHED作业&#34;&gt;&lt;/a&gt;2.sacct 查看FINISHED作业&lt;/h4&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;sacct -e&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2022/05/20/slurm001/image-20220520174622868.png&#34; alt=&#34;image-20220520174622868&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用举例：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;sacct --format=&amp;quot;JobId,Elapsed,CPUTime,CPUTimeRAW,AveCPU,TotalCPU,UserCPU,SystemCPU,AveRSS,MaxRSS&amp;quot; -j 1754217&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2022/05/20/slurm001/image-20220520174807162.png&#34; alt=&#34;image-20220520174807162&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;参考资料：&#34;&gt;&lt;a href=&#34;#参考资料：&#34; class=&#34;headerlink&#34; title=&#34;参考资料：&#34;&gt;&lt;/a&gt;参考资料：&lt;/h4&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/kongxx/article/details/52556943&#34;&gt;(28条消息) Slurm查看作业CPU和MEM_kongxx的博客-CSDN博客_slurm 查看节点&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <category term="Slurm" />
        <updated>2022-05-20T09:43:02.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/05/20/numactl001/</id>
        <title>numactl</title>
        <link rel="alternate" href="http://example.com/2022/05/20/numactl001/"/>
        <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;numactl --hardware&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2022/05/20/numactl001/image-20220520173911653.png&#34; alt=&#34;image-20220520173911653&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shelll&#34;&gt;numastat&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2022/05/20/numactl001/image-20220520174030171.png&#34; alt=&#34;image-20220520174030171&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;numactl --show&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2022/05/20/numactl001/image-20220520174148487.png&#34; alt=&#34;image-20220520174148487&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;参考资料：&#34;&gt;&lt;a href=&#34;#参考资料：&#34; class=&#34;headerlink&#34; title=&#34;参考资料：&#34;&gt;&lt;/a&gt;参考资料：&lt;/h5&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qccz123456/article/details/81979819&#34;&gt;(28条消息) Linux工具之numactl_qccz123456的博客-CSDN博客_numactl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://baijiahao.baidu.com/s?id=1699088343604813491&amp;wfr=spider&amp;for=pc&amp;searchword=numactl&#34;&gt;宋宝华：为什么numactl内存绑定对代码段不起作用 (baidu.com)&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <category term="Numactl" />
        <updated>2022-05-20T09:35:59.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/05/20/Linux002/</id>
        <title>linux的jobs,fg,bg命令</title>
        <link rel="alternate" href="http://example.com/2022/05/20/Linux002/"/>
        <content type="html">&lt;h3 id=&#34;linux让前台程序脱离终端运行&#34;&gt;&lt;a href=&#34;#linux让前台程序脱离终端运行&#34; class=&#34;headerlink&#34; title=&#34;linux让前台程序脱离终端运行&#34;&gt;&lt;/a&gt;linux让前台程序脱离终端运行&lt;/h3&gt;&lt;p&gt;1.首先运行你的程序&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/05/20/Linux002/image-20220520171436032.png&#34; alt=&#34;image-20220520171436032&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.随后使用Ctrl + z，挂起你的进程&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/05/20/Linux002/image-20220520171510946.png&#34; alt=&#34;image-20220520171510946&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.然后使用jobs查看所有的进程&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/05/20/Linux002/image-20220520171913979.png&#34; alt=&#34;image-20220520171913979&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.随后使用bg+id，表示该任务为后台1号任务&lt;/p&gt;
&lt;p&gt;bg命令用于将作业放到后台运行，使前台可以执行其他任务&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/05/20/Linux002/image-20220520172110992.png&#34; alt=&#34;image-20220520172110992&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;linux让后台程序移动到前台终端&#34;&gt;&lt;a href=&#34;#linux让后台程序移动到前台终端&#34; class=&#34;headerlink&#34; title=&#34;linux让后台程序移动到前台终端&#34;&gt;&lt;/a&gt;linux让后台程序移动到前台终端&lt;/h3&gt;&lt;p&gt;Linux常用命令fg主要用于将后台作业移动到前台终端运行&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/05/20/Linux002/image-20220520172358345.png&#34; alt=&#34;image-20220520172358345&#34;&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2022-05-20T09:13:08.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/05/20/Linux001/</id>
        <title>Linux常用指令</title>
        <link rel="alternate" href="http://example.com/2022/05/20/Linux001/"/>
        <content type="html">&lt;h2 id=&#34;Linux常用指令&#34;&gt;&lt;a href=&#34;#Linux常用指令&#34; class=&#34;headerlink&#34; title=&#34;Linux常用指令&#34;&gt;&lt;/a&gt;Linux常用指令&lt;/h2&gt;&lt;h4 id=&#34;杀死进程&#34;&gt;&lt;a href=&#34;#杀死进程&#34; class=&#34;headerlink&#34; title=&#34;杀死进程&#34;&gt;&lt;/a&gt;杀死进程&lt;/h4&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;kill &lt;span class=&#34;hljs-number&#34;&gt;-9&lt;/span&gt; id&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2022/05/20/Linux001/image-20220520171246860.png&#34; alt=&#34;image-20220520171246860&#34;&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2022-05-20T09:08:45.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/05/08/tool004/</id>
        <title>gcov代码覆盖率测试-完整样例-SLIC</title>
        <link rel="alternate" href="http://example.com/2022/05/08/tool004/"/>
        <content type="html">&lt;h2 id=&#34;gcov代码覆盖率测试-完整样例-SLIC&#34;&gt;&lt;a href=&#34;#gcov代码覆盖率测试-完整样例-SLIC&#34; class=&#34;headerlink&#34; title=&#34;gcov代码覆盖率测试-完整样例-SLIC&#34;&gt;&lt;/a&gt;gcov代码覆盖率测试-完整样例-SLIC&lt;/h2&gt;&lt;h3 id=&#34;gcov代码覆盖率测试介绍：&#34;&gt;&lt;a href=&#34;#gcov代码覆盖率测试介绍：&#34; class=&#34;headerlink&#34; title=&#34;gcov代码覆盖率测试介绍：&#34;&gt;&lt;/a&gt;gcov代码覆盖率测试介绍：&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2022/01/18/tool002/&#34;&gt;gcov代码覆盖率测试 - 计算机奇妙之旅 (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;完整样例-SLIC：&#34;&gt;&lt;a href=&#34;#完整样例-SLIC：&#34; class=&#34;headerlink&#34; title=&#34;完整样例-SLIC：&#34;&gt;&lt;/a&gt;完整样例-SLIC：&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2022/05/08/tool004/result.zip&#34;&gt;https://xingyuanjie.top/2022/05/08/tool004/result.zip&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="性能分析工具" />
        <category term="gcov" />
        <updated>2022-05-08T02:34:59.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/05/06/Algorithm037/</id>
        <title>图的存储</title>
        <link rel="alternate" href="http://example.com/2022/05/06/Algorithm037/"/>
        <content type="html">&lt;h2 id=&#34;图的存储&#34;&gt;&lt;a href=&#34;#图的存储&#34; class=&#34;headerlink&#34; title=&#34;图的存储&#34;&gt;&lt;/a&gt;图的存储&lt;/h2&gt;&lt;h3 id=&#34;邻接矩阵法&#34;&gt;&lt;a href=&#34;#邻接矩阵法&#34; class=&#34;headerlink&#34; title=&#34;邻接矩阵法&#34;&gt;&lt;/a&gt;邻接矩阵法&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; MaxVertexNum 100									&lt;span class=&#34;hljs-comment&#34;&gt;//顶点数目的最大值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt; VertexType;									&lt;span class=&#34;hljs-comment&#34;&gt;//顶点的数据类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; EdgeType;										&lt;span class=&#34;hljs-comment&#34;&gt;//带权图中边上权值的数据类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    VertexType Vex[MaxVertexNum];							&lt;span class=&#34;hljs-comment&#34;&gt;//顶点表&lt;/span&gt;&lt;br&gt;    EdgeType Edge[MaxVertexNum][MaxVertexNum];				&lt;span class=&#34;hljs-comment&#34;&gt;//邻接矩阵，边表&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; vexnum,arcnum;										&lt;span class=&#34;hljs-comment&#34;&gt;//图中当前顶点数和弧数&lt;/span&gt;&lt;br&gt;&amp;#125;MGraph;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;邻接表法&#34;&gt;&lt;a href=&#34;#邻接表法&#34; class=&#34;headerlink&#34; title=&#34;邻接表法&#34;&gt;&lt;/a&gt;邻接表法&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; MaxVertexNum 100									&lt;span class=&#34;hljs-comment&#34;&gt;//图中顶点数目的最大值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ArcNode&lt;/span&gt;&amp;#123;&lt;/span&gt;										&lt;span class=&#34;hljs-comment&#34;&gt;//边表结点&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; adjvex;												&lt;span class=&#34;hljs-comment&#34;&gt;//该弧所指向的顶点的位置&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ArcNode&lt;/span&gt; *&lt;span class=&#34;hljs-title&#34;&gt;next&lt;/span&gt;;&lt;/span&gt;									&lt;span class=&#34;hljs-comment&#34;&gt;//指向下一条弧的指针&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//InfoType infp;										//网的边权值&lt;/span&gt;&lt;br&gt;&amp;#125;ArcNode;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;VNode&lt;/span&gt;&amp;#123;&lt;/span&gt;										&lt;span class=&#34;hljs-comment&#34;&gt;//顶点表结点&lt;/span&gt;&lt;br&gt;    VertexType data;										&lt;span class=&#34;hljs-comment&#34;&gt;//顶点信息&lt;/span&gt;&lt;br&gt;    ArcNode *first;											&lt;span class=&#34;hljs-comment&#34;&gt;//指向第一条依附该顶点的弧的指针&lt;/span&gt;&lt;br&gt;&amp;#125;VNode,AdjList[MaxVertexNum];&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    AdjList vertices;										&lt;span class=&#34;hljs-comment&#34;&gt;//邻接表&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; vexnum,arcnum;										&lt;span class=&#34;hljs-comment&#34;&gt;//图的顶点数和弧数&lt;/span&gt;&lt;br&gt;&amp;#125;ALGraph;													&lt;span class=&#34;hljs-comment&#34;&gt;//ALGraph是以邻接表存储的图的类型&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="Data Structure" />
        <category term="Graph" />
        <updated>2022-05-06T08:38:38.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/05/05/Algorithm036/</id>
        <title>树、森林</title>
        <link rel="alternate" href="http://example.com/2022/05/05/Algorithm036/"/>
        <content type="html">&lt;h2 id=&#34;树、森林&#34;&gt;&lt;a href=&#34;#树、森林&#34; class=&#34;headerlink&#34; title=&#34;树、森林&#34;&gt;&lt;/a&gt;树、森林&lt;/h2&gt;&lt;h3 id=&#34;树的存储结构&#34;&gt;&lt;a href=&#34;#树的存储结构&#34; class=&#34;headerlink&#34; title=&#34;树的存储结构&#34;&gt;&lt;/a&gt;树的存储结构&lt;/h3&gt;&lt;h4 id=&#34;双亲表示法&#34;&gt;&lt;a href=&#34;#双亲表示法&#34; class=&#34;headerlink&#34; title=&#34;双亲表示法&#34;&gt;&lt;/a&gt;双亲表示法&lt;/h4&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; MAX_TREE_SIZE 100					&lt;span class=&#34;hljs-comment&#34;&gt;//树中最多节点数	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;								&lt;span class=&#34;hljs-comment&#34;&gt;//树的结点定义&lt;/span&gt;&lt;br&gt;    ElemType data;							&lt;span class=&#34;hljs-comment&#34;&gt;//数据元素	&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; parent;								&lt;span class=&#34;hljs-comment&#34;&gt;//双亲位置域&lt;/span&gt;&lt;br&gt;&amp;#125;PTNode;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;								&lt;span class=&#34;hljs-comment&#34;&gt;//树的类型定义&lt;/span&gt;&lt;br&gt;    PTNode nodes[MAX_TREE_SIZE];			&lt;span class=&#34;hljs-comment&#34;&gt;//双亲表示&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n;									&lt;span class=&#34;hljs-comment&#34;&gt;//节点数&lt;/span&gt;&lt;br&gt;&amp;#125;PTree;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;孩子兄弟法&#34;&gt;&lt;a href=&#34;#孩子兄弟法&#34; class=&#34;headerlink&#34; title=&#34;孩子兄弟法&#34;&gt;&lt;/a&gt;孩子兄弟法&lt;/h4&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;CSNode&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    ElemType data;											&lt;span class=&#34;hljs-comment&#34;&gt;//数据域&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;CSNode&lt;/span&gt; *&lt;span class=&#34;hljs-title&#34;&gt;firstchild&lt;/span&gt;,*&lt;span class=&#34;hljs-title&#34;&gt;nextsibling&lt;/span&gt;;&lt;/span&gt;					&lt;span class=&#34;hljs-comment&#34;&gt;//第一个孩子和右兄弟指针&lt;/span&gt;&lt;br&gt;&amp;#125;CSNode,*CSTree;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="Data Structure" />
        <category term="Tree" />
        <category term="森林" />
        <updated>2022-05-05T08:58:34.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/05/04/Algorithm035/</id>
        <title>线索二叉树</title>
        <link rel="alternate" href="http://example.com/2022/05/04/Algorithm035/"/>
        <content type="html">&lt;h2 id=&#34;线索二叉树&#34;&gt;&lt;a href=&#34;#线索二叉树&#34; class=&#34;headerlink&#34; title=&#34;线索二叉树&#34;&gt;&lt;/a&gt;线索二叉树&lt;/h2&gt;&lt;h3 id=&#34;线索二叉树的存储结构&#34;&gt;&lt;a href=&#34;#线索二叉树的存储结构&#34; class=&#34;headerlink&#34; title=&#34;线索二叉树的存储结构&#34;&gt;&lt;/a&gt;线索二叉树的存储结构&lt;/h3&gt;&lt;p&gt;线索二叉树的存储结构描述如下&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;ltag = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; lchild域指示结点的左孩子&lt;br&gt;ltag = &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; lchild域指示结点的前驱&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//&lt;/span&gt;&lt;br&gt;rtag = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; rchild域指示结点的右孩子&lt;br&gt;rtag = &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; rchild域指示结点的后继&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ThreadNode&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    ElemType data;						&lt;span class=&#34;hljs-comment&#34;&gt;//数据元素&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ThreadNode&lt;/span&gt; *&lt;span class=&#34;hljs-title&#34;&gt;lchild&lt;/span&gt;,*&lt;span class=&#34;hljs-title&#34;&gt;rchild&lt;/span&gt;;&lt;/span&gt;				&lt;span class=&#34;hljs-comment&#34;&gt;//左右孩子指针&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ltag,rtag;									&lt;span class=&#34;hljs-comment&#34;&gt;//左右线索标志&lt;/span&gt;&lt;br&gt;&amp;#125;ThreadNode，*ThreadTree;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;中序线索二叉树的构造&#34;&gt;&lt;a href=&#34;#中序线索二叉树的构造&#34; class=&#34;headerlink&#34; title=&#34;中序线索二叉树的构造&#34;&gt;&lt;/a&gt;中序线索二叉树的构造&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InThread&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(ThreadTree &amp;amp;p,ThreadNode &amp;amp;pre)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(p!=&lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;)&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-built_in&#34;&gt;InThread&lt;/span&gt;(p-&amp;gt;lchild,pre);			&lt;span class=&#34;hljs-comment&#34;&gt;//递归，线索化左子树&lt;/span&gt;&lt;br&gt;        &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(p-&amp;gt;lchild==&lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;)&amp;#123;			&lt;span class=&#34;hljs-comment&#34;&gt;//左子树为空，建立前驱线索&lt;/span&gt;&lt;br&gt;                p-&amp;gt;lchild=pre;&lt;br&gt;                p-&amp;gt;ltag=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;            &amp;#125;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(pre!=&lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;&amp;amp;&amp;amp;pre-&amp;gt;rchild==&lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;)&amp;#123;&lt;br&gt;                pre-&amp;gt;rchild=p;				&lt;span class=&#34;hljs-comment&#34;&gt;//建立前驱结点的后继线索&lt;/span&gt;&lt;br&gt;                pre-&amp;gt;rtag=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;            &amp;#125;&lt;br&gt;            pre=p;							&lt;span class=&#34;hljs-comment&#34;&gt;//标记当前结点成为刚刚访问过的结点&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-built_in&#34;&gt;InThread&lt;/span&gt;(p-&amp;gt;rchild,pre);		&lt;span class=&#34;hljs-comment&#34;&gt;//递归，线索化右子树&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-comment&#34;&gt;//if(p!=NULL)&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;CreateInThread&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(ThreadTree T)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    ThreadTree pre = &lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(T!=&lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;)&amp;#123;						&lt;span class=&#34;hljs-comment&#34;&gt;//非空二叉树。线索化&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-built_in&#34;&gt;InThread&lt;/span&gt;(T,pre);				&lt;span class=&#34;hljs-comment&#34;&gt;//线索化二叉树&lt;/span&gt;&lt;br&gt;        pre-&amp;gt;rchild=&lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;;				&lt;span class=&#34;hljs-comment&#34;&gt;//处理遍历的最后一个结点&lt;/span&gt;&lt;br&gt;        pre-&amp;gt;rtag=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;中序线索二叉树的遍历&#34;&gt;&lt;a href=&#34;#中序线索二叉树的遍历&#34; class=&#34;headerlink&#34; title=&#34;中序线索二叉树的遍历&#34;&gt;&lt;/a&gt;中序线索二叉树的遍历&lt;/h3&gt;&lt;p&gt;1)求中序线索二叉树中中序序列下的第一个结点&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;Thread *&lt;span class=&#34;hljs-title&#34;&gt;Firstnode&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(ThreadNode *p)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(p-&amp;gt;ltag==&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) p=p-&amp;gt;lchild;		&lt;span class=&#34;hljs-comment&#34;&gt;//最左下结点（不一定是叶结点）&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; p;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;2)求中序线索二叉树中结点p在中序序列下的后继&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;ThreadNode *&lt;span class=&#34;hljs-title&#34;&gt;Nextnode&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(ThreadNode *p)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(p-&amp;gt;rtag==&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;Firstnode&lt;/span&gt;(p-&amp;gt;rchild);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; p-&amp;gt;rchild;			&lt;span class=&#34;hljs-comment&#34;&gt;//rtag==1直接返回后继线索&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;3)利用上面两个算法，可以写出不含头节点的中序线索二叉树的中序遍历算法&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Inorder&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(ThreadNode *T)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(ThreadNode *p=Firstnode;p!=&lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;;p=&lt;span class=&#34;hljs-built_in&#34;&gt;Nextnode&lt;/span&gt;(p))&lt;br&gt;        &lt;span class=&#34;hljs-built_in&#34;&gt;visit&lt;/span&gt;(p);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="Data Structure" />
        <category term="Binary tree" />
        <category term="线索二叉树" />
        <updated>2022-05-04T12:05:19.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/04/27/Algorithm034/</id>
        <title>串的模式匹配算法-KMP算法</title>
        <link rel="alternate" href="http://example.com/2022/04/27/Algorithm034/"/>
        <content type="html">&lt;h2 id=&#34;串的模式匹配算法-KMP算法&#34;&gt;&lt;a href=&#34;#串的模式匹配算法-KMP算法&#34; class=&#34;headerlink&#34; title=&#34;串的模式匹配算法-KMP算法&#34;&gt;&lt;/a&gt;串的模式匹配算法-KMP算法&lt;/h2&gt;&lt;h3 id=&#34;求next数组&#34;&gt;&lt;a href=&#34;#求next数组&#34; class=&#34;headerlink&#34; title=&#34;求next数组&#34;&gt;&lt;/a&gt;求next数组&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;get_next&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SSting t,&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; next[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;    next[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(i&amp;lt;t.length)&lt;br&gt;    &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(j==&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;||t.ch[i]==t.ch[j])&lt;br&gt;        &amp;#123;&lt;br&gt;            i++;&lt;br&gt;            j++;&lt;br&gt;            next[i]=j;      &lt;span class=&#34;hljs-comment&#34;&gt;//若pi=pj,则next[j+i]=next[j]+1&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;            j=next[j];      &lt;span class=&#34;hljs-comment&#34;&gt;//否则令j=next[j]，循环继续&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;KMP匹配算法&#34;&gt;&lt;a href=&#34;#KMP匹配算法&#34; class=&#34;headerlink&#34; title=&#34;KMP匹配算法&#34;&gt;&lt;/a&gt;KMP匹配算法&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Index_KMP&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SSting s,SSting t,&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; next[])&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,j=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt; (i&amp;lt;=s.length&amp;amp;&amp;amp;j&amp;lt;=t.length)&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(j==&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;||s.ch[i]==t.ch[j])&lt;br&gt;        &amp;#123;&lt;br&gt;            j++;                    &lt;span class=&#34;hljs-comment&#34;&gt;//继续比较后续字符&lt;/span&gt;&lt;br&gt;            i++;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;            j=next[j];              &lt;span class=&#34;hljs-comment&#34;&gt;//模式串向右移动&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(j&amp;gt;t.length)&lt;br&gt;    &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; i-t.length;          &lt;span class=&#34;hljs-comment&#34;&gt;//匹配成功&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;完整代码：&#34;&gt;&lt;a href=&#34;#完整代码：&#34; class=&#34;headerlink&#34; title=&#34;完整代码：&#34;&gt;&lt;/a&gt;完整代码：&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; MAXLEN 255					&lt;span class=&#34;hljs-comment&#34;&gt;//预定义最大串长&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt; ch[MAXLEN];				&lt;span class=&#34;hljs-comment&#34;&gt;//每个分量存储一个字符&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; length;						&lt;span class=&#34;hljs-comment&#34;&gt;//串的实际长度&lt;/span&gt;&lt;br&gt;&amp;#125;SSting;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;get_next&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SSting t,&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; next[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;    next[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(i&amp;lt;t.length)&lt;br&gt;    &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(j==&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;||t.ch[i]==t.ch[j])&lt;br&gt;        &amp;#123;&lt;br&gt;            i++;&lt;br&gt;            j++;&lt;br&gt;            next[i]=j;      &lt;span class=&#34;hljs-comment&#34;&gt;//若pi=pj,则next[j+i]=next[j]+1&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;            j=next[j];      &lt;span class=&#34;hljs-comment&#34;&gt;//否则令j=next[j]，循环继续&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Index_KMP&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SSting s,SSting t,&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; next[])&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,j=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt; (i&amp;lt;=s.length&amp;amp;&amp;amp;j&amp;lt;=t.length)&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(j==&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;||s.ch[i]==t.ch[j])&lt;br&gt;        &amp;#123;&lt;br&gt;            j++;                    &lt;span class=&#34;hljs-comment&#34;&gt;//继续比较后续字符&lt;/span&gt;&lt;br&gt;            i++;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;            j=next[j];              &lt;span class=&#34;hljs-comment&#34;&gt;//模式串向右移动&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(j&amp;gt;t.length)&lt;br&gt;    &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; i-t.length;          &lt;span class=&#34;hljs-comment&#34;&gt;//匹配成功&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    SSting a,b;&lt;br&gt;    string s1=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ababcabcacbab&amp;quot;&lt;/span&gt;;&lt;br&gt;    string s2=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abcac&amp;quot;&lt;/span&gt;;&lt;br&gt;    a.length=s1.&lt;span class=&#34;hljs-built_in&#34;&gt;size&lt;/span&gt;();&lt;br&gt;    b.length=s2.&lt;span class=&#34;hljs-built_in&#34;&gt;size&lt;/span&gt;();&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; next[s2.&lt;span class=&#34;hljs-built_in&#34;&gt;size&lt;/span&gt;()+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;get_next&lt;/span&gt;(b,next);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt;s1.&lt;span class=&#34;hljs-built_in&#34;&gt;size&lt;/span&gt;(); ++i) &amp;#123;	&lt;span class=&#34;hljs-comment&#34;&gt;//初始化&lt;/span&gt;&lt;br&gt;        a.ch[i+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]=s1[i];&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j &amp;lt;s2.&lt;span class=&#34;hljs-built_in&#34;&gt;size&lt;/span&gt;() ; ++j) &amp;#123;	&lt;span class=&#34;hljs-comment&#34;&gt;//初始化&lt;/span&gt;&lt;br&gt;        b.ch[j+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]=s2[j];&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; x=&lt;span class=&#34;hljs-built_in&#34;&gt;Index_KMP&lt;/span&gt;(a,b,next);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(x!=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;)&lt;br&gt;    &amp;#123;&lt;br&gt;        cout&amp;lt;&amp;lt;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;找到了位置是：&amp;quot;&lt;/span&gt;&amp;lt;&amp;lt;x&amp;lt;&amp;lt;endl;&lt;br&gt;    &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;        cout&amp;lt;&amp;lt;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;没有找到&amp;quot;&lt;/span&gt;&amp;lt;&amp;lt;endl;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;程序输出：&#34;&gt;&lt;a href=&#34;#程序输出：&#34; class=&#34;headerlink&#34; title=&#34;程序输出：&#34;&gt;&lt;/a&gt;程序输出：&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;找到了位置是：&lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="Data Structure" />
        <category term="String" />
        <category term="KMP" />
        <updated>2022-04-27T11:39:05.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/04/27/Algorithm033/</id>
        <title>串-简单的模式匹配算法</title>
        <link rel="alternate" href="http://example.com/2022/04/27/Algorithm033/"/>
        <content type="html">&lt;h2 id=&#34;串-简单的模式匹配算法&#34;&gt;&lt;a href=&#34;#串-简单的模式匹配算法&#34; class=&#34;headerlink&#34; title=&#34;串-简单的模式匹配算法&#34;&gt;&lt;/a&gt;串-简单的模式匹配算法&lt;/h2&gt;&lt;h3 id=&#34;简单的模式匹配算法&#34;&gt;&lt;a href=&#34;#简单的模式匹配算法&#34; class=&#34;headerlink&#34; title=&#34;简单的模式匹配算法&#34;&gt;&lt;/a&gt;简单的模式匹配算法&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SSting s,SSting t)&lt;/span&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//简单的模式匹配算法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,j=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(i&amp;lt;=s.length &amp;amp;&amp;amp; j&amp;lt;= t.length)&lt;br&gt;    &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(s.ch[i]==t.ch[j])&lt;br&gt;        &amp;#123;&lt;br&gt;            i++;                      &lt;span class=&#34;hljs-comment&#34;&gt;//继续比较后继字符&lt;/span&gt;&lt;br&gt;            j++;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;                        &lt;span class=&#34;hljs-comment&#34;&gt;//指针后退重新开始匹配&lt;/span&gt;&lt;br&gt;            i=i-j+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;;                  &lt;span class=&#34;hljs-comment&#34;&gt;//每次匹配失败后，都把模式t后移一位&lt;/span&gt;&lt;br&gt;            j=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(j&amp;gt;t.length) &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; i-t.length;           &lt;span class=&#34;hljs-comment&#34;&gt;//返回与模式t中第一个字符相等的字符在主串s中的序号&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;完整程序源代码&#34;&gt;&lt;a href=&#34;#完整程序源代码&#34; class=&#34;headerlink&#34; title=&#34;完整程序源代码&#34;&gt;&lt;/a&gt;完整程序源代码&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; MAXLEN 255					&lt;span class=&#34;hljs-comment&#34;&gt;//预定义最大串长&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt; ch[MAXLEN];				&lt;span class=&#34;hljs-comment&#34;&gt;//每个分量存储一个字符&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; length;						&lt;span class=&#34;hljs-comment&#34;&gt;//串的实际长度&lt;/span&gt;&lt;br&gt;&amp;#125;SSting;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(SSting s,SSting t)&lt;/span&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//简单的模式匹配算法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,j=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(i&amp;lt;=s.length &amp;amp;&amp;amp; j&amp;lt;= t.length)&lt;br&gt;    &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(s.ch[i]==t.ch[j])&lt;br&gt;        &amp;#123;&lt;br&gt;            i++;                      &lt;span class=&#34;hljs-comment&#34;&gt;//继续比较后继字符&lt;/span&gt;&lt;br&gt;            j++;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;                        &lt;span class=&#34;hljs-comment&#34;&gt;//指针后退重新开始匹配&lt;/span&gt;&lt;br&gt;            i=i-j+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;;                  &lt;span class=&#34;hljs-comment&#34;&gt;//每次匹配失败后，都把模式t后移一位&lt;/span&gt;&lt;br&gt;            j=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(j&amp;gt;t.length) &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; i-t.length;           &lt;span class=&#34;hljs-comment&#34;&gt;//返回与模式t中第一个字符相等的字符在主串s中的序号&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    SSting a,b;&lt;br&gt;    string s1=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ababcabcacbab&amp;quot;&lt;/span&gt;;&lt;br&gt;    string s2=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abcac&amp;quot;&lt;/span&gt;;&lt;br&gt;    a.length=s1.&lt;span class=&#34;hljs-built_in&#34;&gt;size&lt;/span&gt;();&lt;br&gt;    b.length=s2.&lt;span class=&#34;hljs-built_in&#34;&gt;size&lt;/span&gt;();&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt;s1.&lt;span class=&#34;hljs-built_in&#34;&gt;size&lt;/span&gt;(); ++i) &amp;#123;	&lt;span class=&#34;hljs-comment&#34;&gt;//初始化&lt;/span&gt;&lt;br&gt;        a.ch[i+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]=s1[i];&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j &amp;lt;s2.&lt;span class=&#34;hljs-built_in&#34;&gt;size&lt;/span&gt;() ; ++j) &amp;#123;	&lt;span class=&#34;hljs-comment&#34;&gt;//初始化&lt;/span&gt;&lt;br&gt;        b.ch[j+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]=s2[j];&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; x=&lt;span class=&#34;hljs-built_in&#34;&gt;Index&lt;/span&gt;(a,b);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(x!=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;)&lt;br&gt;    &amp;#123;&lt;br&gt;        cout&amp;lt;&amp;lt;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;找到了位置是：&amp;quot;&lt;/span&gt;&amp;lt;&amp;lt;x&amp;lt;&amp;lt;endl;&lt;br&gt;    &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;        cout&amp;lt;&amp;lt;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;没有找到&amp;quot;&lt;/span&gt;&amp;lt;&amp;lt;endl;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;程序输出&#34;&gt;&lt;a href=&#34;#程序输出&#34; class=&#34;headerlink&#34; title=&#34;程序输出&#34;&gt;&lt;/a&gt;程序输出&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;找到了位置是：&lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="Data Structure" />
        <category term="String" />
        <updated>2022-04-27T09:11:18.000Z</updated>
    </entry>
</feed>
