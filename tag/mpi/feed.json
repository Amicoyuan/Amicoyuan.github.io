{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"mpi\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/06/12/MPI%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E7%AE%80%E5%8D%95%E7%9A%84%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6/",
            "url": "http://example.com/2022/06/12/MPI%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E7%AE%80%E5%8D%95%E7%9A%84%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6/",
            "title": "MPI学习(一)-简单的发送接收",
            "date_published": "2022-06-12T07:11:29.651Z",
            "content_html": "<h1 id=\"MPI-简单的发送接收\"><a href=\"#MPI-简单的发送接收\" class=\"headerlink\" title=\"MPI-简单的发送接收\"></a>MPI-简单的发送接收</h1><p>打印来自进程问候语句的MPI程序</p>\n<h2 id=\"所使用的MPI原语\"><a href=\"#所使用的MPI原语\" class=\"headerlink\" title=\"所使用的MPI原语\"></a>所使用的MPI原语</h2><p><img src=\"/2022/06/12/MPI%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E7%AE%80%E5%8D%95%E7%9A%84%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6/mpi001.png\"></p>\n<p><img src=\"/2022/06/12/MPI%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E7%AE%80%E5%8D%95%E7%9A%84%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6/mpi002.png\"></p>\n<h2 id=\"程序运行平台\"><a href=\"#程序运行平台\" class=\"headerlink\" title=\"程序运行平台\"></a>程序运行平台</h2><p>北京超级云计算中心A3分区</p>\n<h2 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h2><p>mpi&#x2F;intel&#x2F;2017.5</p>\n<h2 id=\"编译指令\"><a href=\"#编译指令\" class=\"headerlink\" title=\"编译指令\"></a>编译指令</h2><p>mpicc  3.1.cpp -o 3.1</p>\n<h2 id=\"运行指令\"><a href=\"#运行指令\" class=\"headerlink\" title=\"运行指令\"></a>运行指令</h2><p>mpirun -np 4 .&#x2F;3.1(本地提交,采取4个进程)</p>\n<h2 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;string.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mpi.h&gt;</span>   <span class=\"hljs-comment\">//头文件</span></span><br><br><span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">int</span> MAX_STRING = <span class=\"hljs-number\">100</span> ;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc,<span class=\"hljs-keyword\">char</span> **argv)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">char</span> greeting[MAX_STRING];<br>\t<span class=\"hljs-keyword\">int</span> comm_sz;<br>\t<span class=\"hljs-keyword\">int</span> my_rank;<br>\tMPI_Status status;<br><br>\t<span class=\"hljs-built_in\">MPI_Init</span>(&amp;argc,&amp;argv);<br><br>\t<span class=\"hljs-built_in\">MPI_Comm_size</span>(MPI_COMM_WORLD,&amp;comm_sz);<br>\t<span class=\"hljs-built_in\">MPI_Comm_rank</span>(MPI_COMM_WORLD,&amp;my_rank);<br>\t<br>\t<span class=\"hljs-keyword\">if</span>(my_rank != <span class=\"hljs-number\">0</span>)<br>\t&#123;<br>\t\t<span class=\"hljs-comment\">//其他进程向0号进程发消息</span><br>\t\t<span class=\"hljs-built_in\">sprintf</span>(greeting,<span class=\"hljs-string\">&quot;Greetings from process %d of %d!&quot;</span>,my_rank,comm_sz);<br>\t\t<span class=\"hljs-built_in\">MPI_Send</span>(greeting,<span class=\"hljs-built_in\">strlen</span>(greeting)+<span class=\"hljs-number\">1</span>,MPI_CHAR,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,MPI_COMM_WORLD); <br>\t&#125;<br>\t<span class=\"hljs-keyword\">else</span><br>\t&#123;<br>\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Greetings from process %d of %d!\\n&quot;</span>,my_rank,comm_sz);<br>\t\t<span class=\"hljs-comment\">//0号进程接受来自其他进程的消息并输出</span><br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> q=<span class=\"hljs-number\">1</span>;q&lt;comm_sz;q++)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-built_in\">MPI_Recv</span>(greeting,MAX_STRING,MPI_CHAR,q,<span class=\"hljs-number\">0</span>,MPI_COMM_WORLD,&amp;status);<br>\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s\\n&quot;</span>,greeting);<br>\t\t&#125;<br>\t&#125;<br>\t<span class=\"hljs-built_in\">MPI_Finalize</span>();<br>\t<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\"><code class=\"language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;string.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mpi.h&gt;</span>   <span class=\"hljs-comment\">//头文件</span></span><br><br><span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">int</span> MAX_STRING = <span class=\"hljs-number\">100</span> ;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc,<span class=\"hljs-keyword\">char</span> **argv)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">char</span> greeting[MAX_STRING];<br>\t<span class=\"hljs-keyword\">int</span> comm_sz;<br>\t<span class=\"hljs-keyword\">int</span> my_rank;<br>\tMPI_Status status;<br><br>\t<span class=\"hljs-built_in\">MPI_Init</span>(&amp;argc,&amp;argv);<br><br>\t<span class=\"hljs-built_in\">MPI_Comm_size</span>(MPI_COMM_WORLD,&amp;comm_sz);<br>\t<span class=\"hljs-built_in\">MPI_Comm_rank</span>(MPI_COMM_WORLD,&amp;my_rank);<br>\t<br>\t<span class=\"hljs-keyword\">if</span>(my_rank != <span class=\"hljs-number\">0</span>)<br>\t&#123;<br>\t\t<span class=\"hljs-comment\">//其他进程向0号进程发消息</span><br>\t\t<span class=\"hljs-built_in\">sprintf</span>(greeting,<span class=\"hljs-string\">&quot;Greetings from process %d of %d!&quot;</span>,my_rank,comm_sz);<br>\t\t<span class=\"hljs-built_in\">MPI_Send</span>(greeting,<span class=\"hljs-built_in\">strlen</span>(greeting)+<span class=\"hljs-number\">1</span>,MPI_CHAR,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,MPI_COMM_WORLD); <br>\t&#125;<br>\t<span class=\"hljs-keyword\">else</span><br>\t&#123;<br>\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Greetings from process %d of %d!\\n&quot;</span>,my_rank,comm_sz);<br>\t\t<span class=\"hljs-comment\">//0号进程接受来自其他进程的消息并输出</span><br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> q=<span class=\"hljs-number\">1</span>;q&lt;comm_sz;q++)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-built_in\">MPI_Recv</span>(greeting,MAX_STRING,MPI_CHAR,q,<span class=\"hljs-number\">0</span>,MPI_COMM_WORLD,&amp;status);<br>\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s\\n&quot;</span>,greeting);<br>\t\t&#125;<br>\t&#125;<br>\t<span class=\"hljs-built_in\">MPI_Finalize</span>();<br>\t<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"程序运行结果\"><a href=\"#程序运行结果\" class=\"headerlink\" title=\"程序运行结果\"></a>程序运行结果</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\">Greetings from process <span class=\"hljs-number\">0</span> of <span class=\"hljs-number\">4</span>!<br>Greetings from process <span class=\"hljs-number\">1</span> of <span class=\"hljs-number\">4</span>!<br>Greetings from process <span class=\"hljs-number\">2</span> of <span class=\"hljs-number\">4</span>!<br>Greetings from process <span class=\"hljs-number\">3</span> of <span class=\"hljs-number\"><code class=\"language-hljs c++\">Greetings from process <span class=\"hljs-number\">0</span> of <span class=\"hljs-number\">4</span>!<br>Greetings from process <span class=\"hljs-number\">1</span> of <span class=\"hljs-number\">4</span>!<br>Greetings from process <span class=\"hljs-number\">2</span> of <span class=\"hljs-number\">4</span>!<br>Greetings from process <span class=\"hljs-number\">3</span> of <span class=\"hljs-number\">4</span>!<br></code></pre></td></tr></table></figure>\n\n",
            "tags": [
                "MPI"
            ]
        },
        {
            "id": "http://example.com/2022/04/02/mpi006/",
            "url": "http://example.com/2022/04/02/mpi006/",
            "title": "MPI学习(六)-两个矩阵相加MPI版本",
            "date_published": "2022-04-02T08:07:46.000Z",
            "content_html": "<h1 id=\"MPI学习-六-两个矩阵相加MPI版本\"><a href=\"#MPI学习-六-两个矩阵相加MPI版本\" class=\"headerlink\" title=\"MPI学习(六)-两个矩阵相加MPI版本\"></a>MPI学习(六)-两个矩阵相加MPI版本</h1><p>这里，我们演示了两个简单的程序，一个是矩阵相加串行版本，一个是矩阵相加MPI版本</p>\n<h2 id=\"串行版本\"><a href=\"#串行版本\" class=\"headerlink\" title=\"串行版本\"></a>串行版本</h2><h3 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;string.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">int</span> a[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>]=&#123;<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<br>\t\t\t\t<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<br>\t\t\t\t<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">12</span>,<br>\t\t\t\t<span class=\"hljs-number\">13</span>,<span class=\"hljs-number\">14</span>,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">16</span>&#125;;<br>\t<span class=\"hljs-keyword\">int</span> b[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>]=&#123;<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">7</span>,<br>\t\t\t\t<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>,<br>\t\t\t\t<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">17</span>,<span class=\"hljs-number\">5</span>,<br>\t\t\t\t<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">14</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">3</span>&#125;;<br>\t<span class=\"hljs-keyword\">int</span> c[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>];<br>\t<span class=\"hljs-built_in\">memset</span>(c,<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(c)); <br>\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">4</span>;i++)<br>\t&#123;<br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">4</span>;j++)<br>\t\t&#123;<br>\t\t\tc[i][j]=a[i][j]+b[i][j];<br>\t\t&#125;<br>\t&#125;<br>\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">4</span>;i++)<br>\t&#123;<br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">4</span>;j++)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d &quot;</span>,c[i][j]);<br>\t\t&#125;<br>\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);<br>\t&#125;<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\"><code class=\"language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;string.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">int</span> a[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>]=&#123;<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<br>\t\t\t\t<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<br>\t\t\t\t<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">12</span>,<br>\t\t\t\t<span class=\"hljs-number\">13</span>,<span class=\"hljs-number\">14</span>,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">16</span>&#125;;<br>\t<span class=\"hljs-keyword\">int</span> b[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>]=&#123;<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">7</span>,<br>\t\t\t\t<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>,<br>\t\t\t\t<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">17</span>,<span class=\"hljs-number\">5</span>,<br>\t\t\t\t<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">14</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">3</span>&#125;;<br>\t<span class=\"hljs-keyword\">int</span> c[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>];<br>\t<span class=\"hljs-built_in\">memset</span>(c,<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(c)); <br>\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">4</span>;i++)<br>\t&#123;<br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">4</span>;j++)<br>\t\t&#123;<br>\t\t\tc[i][j]=a[i][j]+b[i][j];<br>\t\t&#125;<br>\t&#125;<br>\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">4</span>;i++)<br>\t&#123;<br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">4</span>;j++)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d &quot;</span>,c[i][j]);<br>\t\t&#125;<br>\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);<br>\t&#125;<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"程序输出\"><a href=\"#程序输出\" class=\"headerlink\" title=\"程序输出\"></a>程序输出</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-number\">5</span> <span class=\"hljs-number\">4</span> <span class=\"hljs-number\">8</span> <span class=\"hljs-number\">11</span><br><span class=\"hljs-number\">6</span> <span class=\"hljs-number\">9</span> <span class=\"hljs-number\">15</span> <span class=\"hljs-number\">17</span><br><span class=\"hljs-number\">20</span> <span class=\"hljs-number\">22</span> <span class=\"hljs-number\">28</span> <span class=\"hljs-number\">17</span><br><span class=\"hljs-number\">28</span> <span class=\"hljs-number\">28</span> <span class=\"hljs-number\">35</span> <span class=\"hljs-number\"><code class=\"language-hljs c++\"><span class=\"hljs-number\">5</span> <span class=\"hljs-number\">4</span> <span class=\"hljs-number\">8</span> <span class=\"hljs-number\">11</span><br><span class=\"hljs-number\">6</span> <span class=\"hljs-number\">9</span> <span class=\"hljs-number\">15</span> <span class=\"hljs-number\">17</span><br><span class=\"hljs-number\">20</span> <span class=\"hljs-number\">22</span> <span class=\"hljs-number\">28</span> <span class=\"hljs-number\">17</span><br><span class=\"hljs-number\">28</span> <span class=\"hljs-number\">28</span> <span class=\"hljs-number\">35</span> <span class=\"hljs-number\">19</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"MPI版本\"><a href=\"#MPI版本\" class=\"headerlink\" title=\"MPI版本\"></a>MPI版本</h2><h3 id=\"程序运行平台\"><a href=\"#程序运行平台\" class=\"headerlink\" title=\"程序运行平台\"></a>程序运行平台</h3><p>北京超级云计算中心A3分区</p>\n<h3 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><p>mpi&#x2F;intel&#x2F;2017.5</p>\n<h3 id=\"编译指令\"><a href=\"#编译指令\" class=\"headerlink\" title=\"编译指令\"></a>编译指令</h3><p>mpicxx mpi006.c -o mpi006</p>\n<h3 id=\"运行指令\"><a href=\"#运行指令\" class=\"headerlink\" title=\"运行指令\"></a>运行指令</h3><p>srun -p amd_256 -N 1 -n  5  .&#x2F;mpi006(使用SLURM任务调度系统)</p>\n<p>1个分区，核数为5</p>\n<h3 id=\"程序源代码-1\"><a href=\"#程序源代码-1\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;string.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;mpi.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc ,<span class=\"hljs-keyword\">char</span> **argv)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">int</span> a[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>]=&#123;<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<br>\t\t\t\t<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<br>\t\t\t\t<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">12</span>,<br>\t\t\t\t<span class=\"hljs-number\">13</span>,<span class=\"hljs-number\">14</span>,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">16</span>&#125;;<br>\t<span class=\"hljs-keyword\">int</span> b[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>]=&#123;<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">7</span>,<br>\t\t\t\t<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>,<br>\t\t\t\t<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">17</span>,<span class=\"hljs-number\">5</span>,<br>\t\t\t\t<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">14</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">3</span>&#125;;<br>\t<span class=\"hljs-keyword\">int</span> c[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>];<br>\t<span class=\"hljs-keyword\">int</span> tmp[<span class=\"hljs-number\">4</span>];<br>\t<span class=\"hljs-built_in\">memset</span>(c,<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(c));<br>\t<span class=\"hljs-keyword\">int</span> myid, numprocs;<br>\tMPI_Status status;<br>\tMPI_Request request;<br>\t<span class=\"hljs-built_in\">MPI_Init</span>(&amp;argc,&amp;argv);<br>\t<span class=\"hljs-built_in\">MPI_Comm_size</span>(MPI_COMM_WORLD,&amp;numprocs);<br>\t<span class=\"hljs-built_in\">MPI_Comm_rank</span>(MPI_COMM_WORLD,&amp;myid);<br>\t<span class=\"hljs-keyword\">if</span>(myid == <span class=\"hljs-number\">0</span>)\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//0号进程接受来自其他进程的消息</span><br>\t&#123;<br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>;i&lt;numprocs;i++)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-built_in\">MPI_Irecv</span>(&amp;c[i<span class=\"hljs-number\">-1</span>][<span class=\"hljs-number\">0</span>],<span class=\"hljs-number\">4</span>,MPI_INT,i,<span class=\"hljs-number\">0</span>,MPI_COMM_WORLD,&amp;request);\t\t<span class=\"hljs-comment\">//采用非阻塞接受</span><br>\t\t\t<span class=\"hljs-built_in\">MPI_Wait</span>(&amp;request,&amp;status);<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">4</span>;i++)\t\t\t\t\t\t\t<span class=\"hljs-comment\">//打印矩阵</span><br>\t\t&#123;<br>\t\t\t<br>\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">4</span>;j++)<br>\t\t\t&#123;<br>\t\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d &quot;</span>,c[i][j]);<br>\t\t\t&#125;<br>\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);<br>\t\t&#125;<br>\t&#125;<br>\t<span class=\"hljs-keyword\">if</span>(myid != <span class=\"hljs-number\">0</span> )\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//当进程不是0号进程时，则向0号进程发送消息</span><br>\t&#123;<br>\t\t<span class=\"hljs-built_in\">memset</span>(tmp,<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(tmp));\t\t\t\t\t\t<span class=\"hljs-comment\">//初始化tmp数组</span><br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">4</span>;i++)<br>\t\t&#123;<br>\t\t\ttmp[i]=a[myid<span class=\"hljs-number\">-1</span>][i]+b[myid<span class=\"hljs-number\">-1</span>][i];\t\t\t<span class=\"hljs-comment\">//用tmp来临时存储相加结果，随后发送给0号进程</span><br>\t\t\t<br>\t\t&#125;<br>\t\t<span class=\"hljs-built_in\">MPI_Isend</span>(&amp;tmp,<span class=\"hljs-number\">4</span>,MPI_INT,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,MPI_COMM_WORLD,&amp;request);\t\t\t\t\t<span class=\"hljs-comment\">//采用非阻塞发送</span><br>\t\t<span class=\"hljs-built_in\">MPI_Wait</span>(&amp;request,&amp;status);<br>\t&#125;<br>\t<span class=\"hljs-built_in\">MPI_Finalize</span>();\t<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\"><code class=\"language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;string.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;mpi.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc ,<span class=\"hljs-keyword\">char</span> **argv)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">int</span> a[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>]=&#123;<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<br>\t\t\t\t<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<br>\t\t\t\t<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">12</span>,<br>\t\t\t\t<span class=\"hljs-number\">13</span>,<span class=\"hljs-number\">14</span>,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">16</span>&#125;;<br>\t<span class=\"hljs-keyword\">int</span> b[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>]=&#123;<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">7</span>,<br>\t\t\t\t<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>,<br>\t\t\t\t<span class=\"hljs-number\">11</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">17</span>,<span class=\"hljs-number\">5</span>,<br>\t\t\t\t<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">14</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">3</span>&#125;;<br>\t<span class=\"hljs-keyword\">int</span> c[<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">4</span>];<br>\t<span class=\"hljs-keyword\">int</span> tmp[<span class=\"hljs-number\">4</span>];<br>\t<span class=\"hljs-built_in\">memset</span>(c,<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(c));<br>\t<span class=\"hljs-keyword\">int</span> myid, numprocs;<br>\tMPI_Status status;<br>\tMPI_Request request;<br>\t<span class=\"hljs-built_in\">MPI_Init</span>(&amp;argc,&amp;argv);<br>\t<span class=\"hljs-built_in\">MPI_Comm_size</span>(MPI_COMM_WORLD,&amp;numprocs);<br>\t<span class=\"hljs-built_in\">MPI_Comm_rank</span>(MPI_COMM_WORLD,&amp;myid);<br>\t<span class=\"hljs-keyword\">if</span>(myid == <span class=\"hljs-number\">0</span>)\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//0号进程接受来自其他进程的消息</span><br>\t&#123;<br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>;i&lt;numprocs;i++)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-built_in\">MPI_Irecv</span>(&amp;c[i<span class=\"hljs-number\">-1</span>][<span class=\"hljs-number\">0</span>],<span class=\"hljs-number\">4</span>,MPI_INT,i,<span class=\"hljs-number\">0</span>,MPI_COMM_WORLD,&amp;request);\t\t<span class=\"hljs-comment\">//采用非阻塞接受</span><br>\t\t\t<span class=\"hljs-built_in\">MPI_Wait</span>(&amp;request,&amp;status);<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">4</span>;i++)\t\t\t\t\t\t\t<span class=\"hljs-comment\">//打印矩阵</span><br>\t\t&#123;<br>\t\t\t<br>\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">4</span>;j++)<br>\t\t\t&#123;<br>\t\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d &quot;</span>,c[i][j]);<br>\t\t\t&#125;<br>\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);<br>\t\t&#125;<br>\t&#125;<br>\t<span class=\"hljs-keyword\">if</span>(myid != <span class=\"hljs-number\">0</span> )\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//当进程不是0号进程时，则向0号进程发送消息</span><br>\t&#123;<br>\t\t<span class=\"hljs-built_in\">memset</span>(tmp,<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(tmp));\t\t\t\t\t\t<span class=\"hljs-comment\">//初始化tmp数组</span><br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">4</span>;i++)<br>\t\t&#123;<br>\t\t\ttmp[i]=a[myid<span class=\"hljs-number\">-1</span>][i]+b[myid<span class=\"hljs-number\">-1</span>][i];\t\t\t<span class=\"hljs-comment\">//用tmp来临时存储相加结果，随后发送给0号进程</span><br>\t\t\t<br>\t\t&#125;<br>\t\t<span class=\"hljs-built_in\">MPI_Isend</span>(&amp;tmp,<span class=\"hljs-number\">4</span>,MPI_INT,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,MPI_COMM_WORLD,&amp;request);\t\t\t\t\t<span class=\"hljs-comment\">//采用非阻塞发送</span><br>\t\t<span class=\"hljs-built_in\">MPI_Wait</span>(&amp;request,&amp;status);<br>\t&#125;<br>\t<span class=\"hljs-built_in\">MPI_Finalize</span>();\t<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"程序输出-1\"><a href=\"#程序输出-1\" class=\"headerlink\" title=\"程序输出\"></a>程序输出</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-number\">5</span> <span class=\"hljs-number\">4</span> <span class=\"hljs-number\">8</span> <span class=\"hljs-number\">11</span> <br><span class=\"hljs-number\">6</span> <span class=\"hljs-number\">9</span> <span class=\"hljs-number\">15</span> <span class=\"hljs-number\">17</span> <br><span class=\"hljs-number\">20</span> <span class=\"hljs-number\">22</span> <span class=\"hljs-number\">28</span> <span class=\"hljs-number\">17</span> <br><span class=\"hljs-number\">28</span> <span class=\"hljs-number\">28</span> <span class=\"hljs-number\">35</span> <span class=\"hljs-number\"><code class=\"language-hljs c++\"><span class=\"hljs-number\">5</span> <span class=\"hljs-number\">4</span> <span class=\"hljs-number\">8</span> <span class=\"hljs-number\">11</span> <br><span class=\"hljs-number\">6</span> <span class=\"hljs-number\">9</span> <span class=\"hljs-number\">15</span> <span class=\"hljs-number\">17</span> <br><span class=\"hljs-number\">20</span> <span class=\"hljs-number\">22</span> <span class=\"hljs-number\">28</span> <span class=\"hljs-number\">17</span> <br><span class=\"hljs-number\">28</span> <span class=\"hljs-number\">28</span> <span class=\"hljs-number\">35</span> <span class=\"hljs-number\">19</span><br></code></pre></td></tr></table></figure>\n\n",
            "tags": [
                "MPI"
            ]
        },
        {
            "id": "http://example.com/2022/01/01/mpi005/",
            "url": "http://example.com/2022/01/01/mpi005/",
            "title": "MPI学习(五)-环形拓扑上利用MPI进行通信",
            "date_published": "2022-01-01T09:01:47.000Z",
            "content_html": "<h1 id=\"MPI学习-五-环形拓扑上利用MPI进行通信\"><a href=\"#MPI学习-五-环形拓扑上利用MPI进行通信\" class=\"headerlink\" title=\"MPI学习(五)-环形拓扑上利用MPI进行通信\"></a>MPI学习(五)-环形拓扑上利用MPI进行通信</h1><p>这里，我们演示了一个简单的MPI程序，它使用阻塞通信原语send和receive来进行广播操作：</p>\n<h2 id=\"程序运行平台\"><a href=\"#程序运行平台\" class=\"headerlink\" title=\"程序运行平台\"></a>程序运行平台</h2><p>北京超级云计算中心A3分区</p>\n<h2 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h2><p>mpi&#x2F;intel&#x2F;2017.5</p>\n<h2 id=\"编译指令\"><a href=\"#编译指令\" class=\"headerlink\" title=\"编译指令\"></a>编译指令</h2><p>mpic++ mpi005.cpp -o mpi005</p>\n<h2 id=\"运行指令\"><a href=\"#运行指令\" class=\"headerlink\" title=\"运行指令\"></a>运行指令</h2><p>srun -p amd_256 -N 1 -n  4   .&#x2F;mpi005(使用SLURM任务调度系统)</p>\n<p>1个分区，核数为4</p>\n<h2 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mpi.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc,<span class=\"hljs-keyword\">char</span> *argv[])</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">int</span> rank, value, size;<br>\tMPI_Status status;<br>\t<span class=\"hljs-built_in\">MPI_Init</span>(&amp;argc, &amp;argv);<br>\t<span class=\"hljs-built_in\">MPI_Comm_rank</span>(MPI_COMM_WORLD, &amp;rank);<br>\t<span class=\"hljs-built_in\">MPI_Comm_size</span>(MPI_COMM_WORLD, &amp;size);<br>\t<br>\t<span class=\"hljs-keyword\">if</span>(rank == <span class=\"hljs-number\">0</span>) &#123;<span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;value );<br>\t<span class=\"hljs-comment\">/*Master node sends out the value*/</span><br>\t<span class=\"hljs-built_in\">MPI_Send</span>(&amp;value, <span class=\"hljs-number\">1</span>, MPI_INT, rank + <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, MPI_COMM_WORLD);&#125;<span class=\"hljs-comment\">//</span><br>\t<span class=\"hljs-keyword\">else</span><br>\t&#123;<br>\t\t\t<span class=\"hljs-comment\">/*Slave nodes block on receive the send on the value*/</span><br>        <span class=\"hljs-comment\">//接受上一个进程发送的消息</span><br>\t\t<span class=\"hljs-built_in\">MPI_Recv</span>(&amp;value, <span class=\"hljs-number\">1</span>, MPI_INT, rank - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>,MPI_COMM_WORLD, &amp;status);<br>\t\t\t<br>\t\t<span class=\"hljs-keyword\">if</span>(rank &lt; size<span class=\"hljs-number\">-1</span>)<br>\t\t&#123;<br>            <span class=\"hljs-comment\">//向下一个进程发送消息</span><br>\t\t\t<span class=\"hljs-built_in\">MPI_Send</span>(&amp;value, <span class=\"hljs-number\">1</span>, MPI_INT, rank + <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, MPI_COMM_WORLD);<br>\t\t&#125;<br>\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;process %d got %d\\n&quot;</span>, rank, value);<br>\t&#125;<br>\t<span class=\"hljs-built_in\">MPI_Finalize</span>();<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\"><code class=\"language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mpi.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc,<span class=\"hljs-keyword\">char</span> *argv[])</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">int</span> rank, value, size;<br>\tMPI_Status status;<br>\t<span class=\"hljs-built_in\">MPI_Init</span>(&amp;argc, &amp;argv);<br>\t<span class=\"hljs-built_in\">MPI_Comm_rank</span>(MPI_COMM_WORLD, &amp;rank);<br>\t<span class=\"hljs-built_in\">MPI_Comm_size</span>(MPI_COMM_WORLD, &amp;size);<br>\t<br>\t<span class=\"hljs-keyword\">if</span>(rank == <span class=\"hljs-number\">0</span>) &#123;<span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;value );<br>\t<span class=\"hljs-comment\">/*Master node sends out the value*/</span><br>\t<span class=\"hljs-built_in\">MPI_Send</span>(&amp;value, <span class=\"hljs-number\">1</span>, MPI_INT, rank + <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, MPI_COMM_WORLD);&#125;<span class=\"hljs-comment\">//</span><br>\t<span class=\"hljs-keyword\">else</span><br>\t&#123;<br>\t\t\t<span class=\"hljs-comment\">/*Slave nodes block on receive the send on the value*/</span><br>        <span class=\"hljs-comment\">//接受上一个进程发送的消息</span><br>\t\t<span class=\"hljs-built_in\">MPI_Recv</span>(&amp;value, <span class=\"hljs-number\">1</span>, MPI_INT, rank - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>,MPI_COMM_WORLD, &amp;status);<br>\t\t\t<br>\t\t<span class=\"hljs-keyword\">if</span>(rank &lt; size<span class=\"hljs-number\">-1</span>)<br>\t\t&#123;<br>            <span class=\"hljs-comment\">//向下一个进程发送消息</span><br>\t\t\t<span class=\"hljs-built_in\">MPI_Send</span>(&amp;value, <span class=\"hljs-number\">1</span>, MPI_INT, rank + <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, MPI_COMM_WORLD);<br>\t\t&#125;<br>\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;process %d got %d\\n&quot;</span>, rank, value);<br>\t&#125;<br>\t<span class=\"hljs-built_in\">MPI_Finalize</span>();<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br> &#125; <br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"程序运行结果\"><a href=\"#程序运行结果\" class=\"headerlink\" title=\"程序运行结果\"></a>程序运行结果</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-comment\">//5 5为读入的value值</span><br>process <span class=\"hljs-number\">1</span> got <span class=\"hljs-number\">5</span><br>process <span class=\"hljs-number\">2</span> got <span class=\"hljs-number\">5</span><br>process <span class=\"hljs-number\">3</span> got <span class=\"hljs-number\"><code class=\"language-hljs c++\"><span class=\"hljs-comment\">//5 5为读入的value值</span><br>process <span class=\"hljs-number\">1</span> got <span class=\"hljs-number\">5</span><br>process <span class=\"hljs-number\">2</span> got <span class=\"hljs-number\">5</span><br>process <span class=\"hljs-number\">3</span> got <span class=\"hljs-number\">5</span><br></code></pre></td></tr></table></figure>\n\n",
            "tags": [
                "MPI"
            ]
        },
        {
            "id": "http://example.com/2021/11/27/mpi004/",
            "url": "http://example.com/2021/11/27/mpi004/",
            "title": "MPI学习(四)-广播、散播、收集、归约和全归约的MPI语法",
            "date_published": "2021-11-27T08:58:36.000Z",
            "content_html": "<h1 id=\"MPI-广播、散播、收集、归约和全归约的MPI语法\"><a href=\"#MPI-广播、散播、收集、归约和全归约的MPI语法\" class=\"headerlink\" title=\"MPI-广播、散播、收集、归约和全归约的MPI语法\"></a>MPI-广播、散播、收集、归约和全归约的MPI语法</h1><h2 id=\"广播：MPI-Bcast\"><a href=\"#广播：MPI-Bcast\" class=\"headerlink\" title=\"广播：MPI_Bcast\"></a>广播：MPI_Bcast</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Bcast</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *buffer, <span class=\"hljs-keyword\">int</span> count, MPI_Datatype datatype, <span class=\"hljs-keyword\">int</span> root, MPI_Comm comm)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-comment\"><code class=\"language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Bcast</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *buffer, <span class=\"hljs-keyword\">int</span> count, MPI_Datatype datatype, <span class=\"hljs-keyword\">int</span> root, MPI_Comm comm)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-comment\">//int root 广播数据的根进程的标识号(整型)</span></span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/2021/11/27/mpi004/mpi001.png\"></p>\n<h2 id=\"散播：MPI-Scatter\"><a href=\"#散播：MPI-Scatter\" class=\"headerlink\" title=\"散播：MPI_Scatter\"></a>散播：MPI_Scatter</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Scatter</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *sendbuf, <span class=\"hljs-keyword\">int</span> sendcount, MPI_Datatype sendtype, <span class=\"hljs-keyword\">void</span> *recvbuf, <span class=\"hljs-keyword\">int</span> root, MPI_Comm comm)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-comment\">//void *sendbuf 发送消息缓冲区的起始地址(可选数据类型)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-comment\">//void *recvbuf 接收消息缓冲区的起始地址(可选数据类型)</span></span><br><span class=\"hljs-function\"><code class=\"language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Scatter</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *sendbuf, <span class=\"hljs-keyword\">int</span> sendcount, MPI_Datatype sendtype, <span class=\"hljs-keyword\">void</span> *recvbuf, <span class=\"hljs-keyword\">int</span> root, MPI_Comm comm)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-comment\">//void *sendbuf 发送消息缓冲区的起始地址(可选数据类型)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-comment\">//void *recvbuf 接收消息缓冲区的起始地址(可选数据类型)</span></span><br><span class=\"hljs-function\"></span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/2021/11/27/mpi004/mpi002.png\"></p>\n<h2 id=\"收集：MPI-Gather\"><a href=\"#收集：MPI-Gather\" class=\"headerlink\" title=\"收集：MPI_Gather\"></a>收集：MPI_Gather</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Gather</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *sendbuf, <span class=\"hljs-keyword\">int</span> sendcount, MPI_Datatype sendtype, <span class=\"hljs-keyword\">void</span> *recvbuf, <span class=\"hljs-keyword\">int</span> recvcount, MPI_Datatype recvtype, <span class=\"hljs-keyword\"><code class=\"language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Gather</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *sendbuf, <span class=\"hljs-keyword\">int</span> sendcount, MPI_Datatype sendtype, <span class=\"hljs-keyword\">void</span> *recvbuf, <span class=\"hljs-keyword\">int</span> recvcount, MPI_Datatype recvtype, <span class=\"hljs-keyword\">int</span> root, MPI_Comm comm)</span></span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/2021/11/27/mpi004/mpi003.png\"></p>\n<h2 id=\"归约：MPI-Reduce\"><a href=\"#归约：MPI-Reduce\" class=\"headerlink\" title=\"归约：MPI_Reduce\"></a>归约：MPI_Reduce</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Reduce</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *sendbuf, <span class=\"hljs-keyword\">void</span> *recvbuf, <span class=\"hljs-keyword\">int</span> count, MPI_Datatype datatype, MPI_Op op, <span class=\"hljs-keyword\">int</span> root,  MPI_Comm comm)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-comment\"><code class=\"language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Reduce</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *sendbuf, <span class=\"hljs-keyword\">void</span> *recvbuf, <span class=\"hljs-keyword\">int</span> count, MPI_Datatype datatype, MPI_Op op, <span class=\"hljs-keyword\">int</span> root,  MPI_Comm comm)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-comment\">//MPI_Op op  归约操作符(句柄)</span></span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/2021/11/27/mpi004/mpi004.png\"></p>\n<p><img src=\"/2021/11/27/mpi004/mpi005.png\"></p>\n<h2 id=\"全归约：MPI-Allreduce\"><a href=\"#全归约：MPI-Allreduce\" class=\"headerlink\" title=\"全归约：MPI_Allreduce\"></a>全归约：MPI_Allreduce</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Allreduce</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *sendbuf, <span class=\"hljs-keyword\">void</span> *recvbuf, <span class=\"hljs-keyword\"><code class=\"language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Allreduce</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *sendbuf, <span class=\"hljs-keyword\">void</span> *recvbuf, <span class=\"hljs-keyword\">int</span> count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm)</span></span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/2021/11/27/mpi004/mpi006.png\"></p>\n",
            "tags": [
                "MPI"
            ]
        },
        {
            "id": "http://example.com/2021/11/26/mpi003/",
            "url": "http://example.com/2021/11/26/mpi003/",
            "title": "MPI学习(三)-通过OpenmMP使用MPI",
            "date_published": "2021-11-26T14:09:37.000Z",
            "content_html": "<h1 id=\"MPI-通过OpenMP使用MPI\"><a href=\"#MPI-通过OpenMP使用MPI\" class=\"headerlink\" title=\"MPI-通过OpenMP使用MPI\"></a>MPI-通过OpenMP使用MPI</h1><p>OpenMP是另一种为基于共享内存的并行编程提供的应用编程接口。当人们想使用多核处理器时，通常使用OpenMP。下面是一个“Hello World”程序，使用了MPI和OpenMP的API。</p>\n<h2 id=\"程序运行平台\"><a href=\"#程序运行平台\" class=\"headerlink\" title=\"程序运行平台\"></a>程序运行平台</h2><p>北京超级云计算中心A3分区</p>\n<h2 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h2><p>mpi&#x2F;intel&#x2F;2017.5</p>\n<h2 id=\"编译指令\"><a href=\"#编译指令\" class=\"headerlink\" title=\"编译指令\"></a>编译指令</h2><p>mpic++    -fopenmp  mpi003.cpp -o mpi003</p>\n<h2 id=\"运行指令\"><a href=\"#运行指令\" class=\"headerlink\" title=\"运行指令\"></a>运行指令</h2><p>srun -p amd_256 -N 2 -n  2   .&#x2F;mpi003(使用SLURM任务调度系统)</p>\n<p>2个分区，核数为2</p>\n<h2 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;math.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;omp.h&gt;</span>  <span class=\"hljs-comment\">//OpenMP所需要的头文件</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mpi.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span>  <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc,<span class=\"hljs-keyword\">char</span> **argv)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t\t<span class=\"hljs-keyword\">int</span> myid, numprocs;<br>\t\t<span class=\"hljs-keyword\">int</span> namelen;<br>\t\t<span class=\"hljs-keyword\">int</span> thread_id , nthreads;<br>\t\t<span class=\"hljs-keyword\">char</span> processor_name[MPI_MAX_PROCESSOR_NAME];<br>\t\t<span class=\"hljs-built_in\">MPI_Init</span>(&amp;argc, &amp;argv);<br>\t\t<span class=\"hljs-built_in\">MPI_Comm_rank</span>(MPI_COMM_WORLD, &amp;myid);<br>\t\t<span class=\"hljs-built_in\">MPI_Comm_size</span>(MPI_COMM_WORLD, &amp;numprocs);<br>\t\t<span class=\"hljs-built_in\">MPI_Get_processor_name</span>(processor_name, &amp;namelen);<br>    \t<span class=\"hljs-comment\">//构造并行区</span><br>\t\t<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">pragma</span> omp parallel private(thread_id, nthreads) num_threads(8) <span class=\"hljs-comment\">//设置线程数为8</span></span><br>\t\t&#123;<br>\t\t\tthread_id = <span class=\"hljs-built_in\">omp_get_thread_num</span>();  <span class=\"hljs-comment\">//获得当前线程的id</span><br>\t\t\tnthreads = <span class=\"hljs-built_in\">omp_get_num_threads</span>();  <span class=\"hljs-comment\">//获得总的线程数</span><br>\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Thread number %d (on %d) for the MPI process number %d (on %d) [%s]\\n&quot;</span>,<br>\t\t\tthread_id, nthreads, myid, numprocs, processor_name);\t<br>\t\t&#125; \t\t<br>\t\t<span class=\"hljs-built_in\">MPI_Finalize</span>();<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\"><code class=\"language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;math.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;omp.h&gt;</span>  <span class=\"hljs-comment\">//OpenMP所需要的头文件</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mpi.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span>  <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc,<span class=\"hljs-keyword\">char</span> **argv)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t\t<span class=\"hljs-keyword\">int</span> myid, numprocs;<br>\t\t<span class=\"hljs-keyword\">int</span> namelen;<br>\t\t<span class=\"hljs-keyword\">int</span> thread_id , nthreads;<br>\t\t<span class=\"hljs-keyword\">char</span> processor_name[MPI_MAX_PROCESSOR_NAME];<br>\t\t<span class=\"hljs-built_in\">MPI_Init</span>(&amp;argc, &amp;argv);<br>\t\t<span class=\"hljs-built_in\">MPI_Comm_rank</span>(MPI_COMM_WORLD, &amp;myid);<br>\t\t<span class=\"hljs-built_in\">MPI_Comm_size</span>(MPI_COMM_WORLD, &amp;numprocs);<br>\t\t<span class=\"hljs-built_in\">MPI_Get_processor_name</span>(processor_name, &amp;namelen);<br>    \t<span class=\"hljs-comment\">//构造并行区</span><br>\t\t<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">pragma</span> omp parallel private(thread_id, nthreads) num_threads(8) <span class=\"hljs-comment\">//设置线程数为8</span></span><br>\t\t&#123;<br>\t\t\tthread_id = <span class=\"hljs-built_in\">omp_get_thread_num</span>();  <span class=\"hljs-comment\">//获得当前线程的id</span><br>\t\t\tnthreads = <span class=\"hljs-built_in\">omp_get_num_threads</span>();  <span class=\"hljs-comment\">//获得总的线程数</span><br>\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Thread number %d (on %d) for the MPI process number %d (on %d) [%s]\\n&quot;</span>,<br>\t\t\tthread_id, nthreads, myid, numprocs, processor_name);\t<br>\t\t&#125; \t\t<br>\t\t<span class=\"hljs-built_in\">MPI_Finalize</span>();<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"程序运行结果\"><a href=\"#程序运行结果\" class=\"headerlink\" title=\"程序运行结果\"></a>程序运行结果</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\">Thread number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">4</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">3</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">5</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">2</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">6</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">2</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">5</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">7</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">3</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">4</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">6</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">7</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\"><code class=\"language-hljs c++\">Thread number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">4</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">3</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">5</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">2</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">6</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">2</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">5</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">7</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">1</span> (on <span class=\"hljs-number\">2</span>) [eb1316.para.bscc]<br>Thread number <span class=\"hljs-number\">3</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">4</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">6</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br>Thread number <span class=\"hljs-number\">7</span> (on <span class=\"hljs-number\">8</span>) <span class=\"hljs-keyword\">for</span> the MPI process number <span class=\"hljs-number\">0</span> (on <span class=\"hljs-number\">2</span>) [eb1314.para.bscc]<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "MPI"
            ]
        },
        {
            "id": "http://example.com/2021/11/26/mpi002/",
            "url": "http://example.com/2021/11/26/mpi002/",
            "title": "MPI学习(二)-非阻塞通信程序(无缓冲)",
            "date_published": "2021-11-26T09:44:34.000Z",
            "content_html": "<h1 id=\"MPI-非阻塞通信程序-无缓冲\"><a href=\"#MPI-非阻塞通信程序-无缓冲\" class=\"headerlink\" title=\"MPI-非阻塞通信程序(无缓冲)\"></a>MPI-非阻塞通信程序(无缓冲)</h1><p>非阻塞通信程序(无缓冲)是由MPI中的Isend和Ireceive来表示的，即异步通信。在这种情况下，发送进程发布一条“发送授权请求”(挂起的消息)的消息，并继续其程序的执行。当接收进程发布一个“同意发送”许可指令时，数据传输就启动了。所有的这些机制都是通过操作系统的信号进行内部管理的。当数据传输完成时，检查状态并指示进程是否可以安全地进行读&#x2F;写数据。                                                                      需要注意的是原语MPI_Wait(&amp;request,&amp;status)等到数据传输完成(或中断后)，使用一个成为status的状态变量来指示数据传输是否已经成功。</p>\n<h2 id=\"相关的MPI原语\"><a href=\"#相关的MPI原语\" class=\"headerlink\" title=\"相关的MPI原语\"></a>相关的MPI原语</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Isend</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *buf, <span class=\"hljs-keyword\">int</span> count, MPI_Datatype datatype, <span class=\"hljs-keyword\">int</span> dest, <span class=\"hljs-keyword\">int</span> tag, MPI_comm comm, MPI_Request *req)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Irecv</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *buf, <span class=\"hljs-keyword\">int</span> count, MPI_Datatype datatype, <span class=\"hljs-keyword\">int</span> src, <span class=\"hljs-keyword\"><code class=\"language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Isend</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *buf, <span class=\"hljs-keyword\">int</span> count, MPI_Datatype datatype, <span class=\"hljs-keyword\">int</span> dest, <span class=\"hljs-keyword\">int</span> tag, MPI_comm comm, MPI_Request *req)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Irecv</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">void</span> *buf, <span class=\"hljs-keyword\">int</span> count, MPI_Datatype datatype, <span class=\"hljs-keyword\">int</span> src, <span class=\"hljs-keyword\">int</span> tag, MPI_Comm comm, MPI_Request *req)</span></span><br></code></pre></td></tr></table></figure>\n\n<p>MPI_Request结构中经常使用的：当*req操作完成时返回 *flag &#x3D; 1,否则返回 0。</p>\n<p>原语MPI_Wait一直等到*req所执行的操作完成。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Wait</span><span class=\"hljs-params\"><code class=\"language-hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">MPI_Wait</span><span class=\"hljs-params\">(MPI_Request *req, MPI_Status *status)</span></span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"程序运行平台\"><a href=\"#程序运行平台\" class=\"headerlink\" title=\"程序运行平台\"></a>程序运行平台</h2><p>北京超级云计算中心A3分区</p>\n<h2 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h2><p>mpi&#x2F;intel&#x2F;2017.5</p>\n<h2 id=\"编译指令\"><a href=\"#编译指令\" class=\"headerlink\" title=\"编译指令\"></a>编译指令</h2><p>mpicc  mpi002.cpp -o mpi002</p>\n<h2 id=\"运行指令\"><a href=\"#运行指令\" class=\"headerlink\" title=\"运行指令\"></a>运行指令</h2><p>mpirun -np 10   .&#x2F;mpi002(本地提交,采取10个进程)</p>\n<h2 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;stdlib.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mpi.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;math.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc,<span class=\"hljs-keyword\">char</span> **argv)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">int</span> myid, numprocs;<br>\t<span class=\"hljs-keyword\">int</span> tag,source,destination,count;<br>\t<span class=\"hljs-keyword\">int</span> buffer;<br>\tMPI_Status status;<br>\tMPI_Request request;<br>\t<span class=\"hljs-built_in\">MPI_Init</span>(&amp;argc,&amp;argv);<br>\t<span class=\"hljs-built_in\">MPI_Comm_size</span>(MPI_COMM_WORLD,&amp;numprocs);<br>\t<span class=\"hljs-built_in\">MPI_Comm_rank</span>(MPI_COMM_WORLD,&amp;myid);<br>\ttag =<span class=\"hljs-number\">2021</span>; <span class=\"hljs-comment\">/* any integer to tag messages */</span><br>\tsource = <span class=\"hljs-number\">0</span>;<br>\tcount = <span class=\"hljs-number\">1</span>;<br>\t<span class=\"hljs-keyword\">if</span>(myid != source )<br>\t&#123;<br>\t\tbuffer =<span class=\"hljs-number\">2077</span>;<br>\t\t<span class=\"hljs-comment\">//其他进程向0号进程发送消息</span><br>\t\t<span class=\"hljs-built_in\">MPI_Isend</span>(&amp;buffer,count,MPI_INT,source,tag,MPI_COMM_WORLD,&amp;request);<br>\t\t<span class=\"hljs-built_in\">MPI_Wait</span>(&amp;request,&amp;status);<br>\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;processor %d send %d to processor %d\\n&quot;</span>,myid,buffer,source);<br>\t&#125;<br><br>\t<span class=\"hljs-keyword\">if</span>(myid == source )<br>\t&#123;<br>\t\t<span class=\"hljs-comment\">//0号进程接收来自其他进程的消息</span><br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>;i&lt;numprocs;i++)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-built_in\">MPI_Irecv</span>(&amp;buffer,count,MPI_INT,i,tag,MPI_COMM_WORLD,&amp;request);<br>\t\t\t<span class=\"hljs-built_in\">MPI_Wait</span>(&amp;request,&amp;status);<br>\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;processor %d received %d from processor %d \\n&quot;</span>,myid,buffer,i);<br>\t\t&#125;<br>\t\t<br>\t&#125;<br><br>\t<span class=\"hljs-built_in\">MPI_Finalize</span>();<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\"><code class=\"language-hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;stdlib.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mpi.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;math.h&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc,<span class=\"hljs-keyword\">char</span> **argv)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">int</span> myid, numprocs;<br>\t<span class=\"hljs-keyword\">int</span> tag,source,destination,count;<br>\t<span class=\"hljs-keyword\">int</span> buffer;<br>\tMPI_Status status;<br>\tMPI_Request request;<br>\t<span class=\"hljs-built_in\">MPI_Init</span>(&amp;argc,&amp;argv);<br>\t<span class=\"hljs-built_in\">MPI_Comm_size</span>(MPI_COMM_WORLD,&amp;numprocs);<br>\t<span class=\"hljs-built_in\">MPI_Comm_rank</span>(MPI_COMM_WORLD,&amp;myid);<br>\ttag =<span class=\"hljs-number\">2021</span>; <span class=\"hljs-comment\">/* any integer to tag messages */</span><br>\tsource = <span class=\"hljs-number\">0</span>;<br>\tcount = <span class=\"hljs-number\">1</span>;<br>\t<span class=\"hljs-keyword\">if</span>(myid != source )<br>\t&#123;<br>\t\tbuffer =<span class=\"hljs-number\">2077</span>;<br>\t\t<span class=\"hljs-comment\">//其他进程向0号进程发送消息</span><br>\t\t<span class=\"hljs-built_in\">MPI_Isend</span>(&amp;buffer,count,MPI_INT,source,tag,MPI_COMM_WORLD,&amp;request);<br>\t\t<span class=\"hljs-built_in\">MPI_Wait</span>(&amp;request,&amp;status);<br>\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;processor %d send %d to processor %d\\n&quot;</span>,myid,buffer,source);<br>\t&#125;<br><br>\t<span class=\"hljs-keyword\">if</span>(myid == source )<br>\t&#123;<br>\t\t<span class=\"hljs-comment\">//0号进程接收来自其他进程的消息</span><br>\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>;i&lt;numprocs;i++)<br>\t\t&#123;<br>\t\t\t<span class=\"hljs-built_in\">MPI_Irecv</span>(&amp;buffer,count,MPI_INT,i,tag,MPI_COMM_WORLD,&amp;request);<br>\t\t\t<span class=\"hljs-built_in\">MPI_Wait</span>(&amp;request,&amp;status);<br>\t\t\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;processor %d received %d from processor %d \\n&quot;</span>,myid,buffer,i);<br>\t\t&#125;<br>\t\t<br>\t&#125;<br><br>\t<span class=\"hljs-built_in\">MPI_Finalize</span>();<br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"程序输出\"><a href=\"#程序输出\" class=\"headerlink\" title=\"程序输出\"></a>程序输出</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre class=\" language-hljs c++\">processor <span class=\"hljs-number\">2</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">3</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">5</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">6</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">7</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">8</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">9</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">4</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">1</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">1</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">2</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">3</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">4</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">5</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">6</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">7</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">8</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\"><code class=\"language-hljs c++\">processor <span class=\"hljs-number\">2</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">3</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">5</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">6</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">7</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">8</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">9</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">4</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">1</span> send <span class=\"hljs-number\">2077</span> to processor <span class=\"hljs-number\">0</span><br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">1</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">2</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">3</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">4</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">5</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">6</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">7</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">8</span> <br>processor <span class=\"hljs-number\">0</span> received <span class=\"hljs-number\">2077</span> from processor <span class=\"hljs-number\">9</span> <br></code></pre></td></tr></table></figure>\n\n",
            "tags": [
                "MPI"
            ]
        }
    ]
}