{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"string\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/04/27/Algorithm034/",
            "url": "http://example.com/2022/04/27/Algorithm034/",
            "title": "串的模式匹配算法-KMP算法",
            "date_published": "2022-04-27T11:39:05.000Z",
            "content_html": "<h2 id=\"串的模式匹配算法-KMP算法\"><a href=\"#串的模式匹配算法-KMP算法\" class=\"headerlink\" title=\"串的模式匹配算法-KMP算法\"></a>串的模式匹配算法-KMP算法</h2><h3 id=\"求next数组\"><a href=\"#求next数组\" class=\"headerlink\" title=\"求next数组\"></a>求next数组</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">get_next</span><span class=\"hljs-params\">(SSting t,<span class=\"hljs-keyword\">int</span> next[])</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>,j=<span class=\"hljs-number\">0</span>;<br>    next[<span class=\"hljs-number\">1</span>]=<span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">while</span>(i&lt;t.length)<br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(j==<span class=\"hljs-number\">0</span>||t.ch[i]==t.ch[j])<br>        &#123;<br>            i++;<br>            j++;<br>            next[i]=j;      <span class=\"hljs-comment\">//若pi=pj,则next[j+i]=next[j]+1</span><br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>            j=next[j];      <span class=\"hljs-comment\">//否则令j=next[j]，循环继续</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"KMP匹配算法\"><a href=\"#KMP匹配算法\" class=\"headerlink\" title=\"KMP匹配算法\"></a>KMP匹配算法</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">Index_KMP</span><span class=\"hljs-params\">(SSting s,SSting t,<span class=\"hljs-keyword\">int</span> next[])</span></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>,j=<span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">while</span> (i&lt;=s.length&amp;&amp;j&lt;=t.length)&#123;<br>        <span class=\"hljs-keyword\">if</span>(j==<span class=\"hljs-number\">0</span>||s.ch[i]==t.ch[j])<br>        &#123;<br>            j++;                    <span class=\"hljs-comment\">//继续比较后续字符</span><br>            i++;<br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>            j=next[j];              <span class=\"hljs-comment\">//模式串向右移动</span><br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">if</span>(j&gt;t.length)<br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> i-t.length;          <span class=\"hljs-comment\">//匹配成功</span><br>    &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"完整代码：\"><a href=\"#完整代码：\" class=\"headerlink\" title=\"完整代码：\"></a>完整代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> MAXLEN 255\t\t\t\t\t<span class=\"hljs-comment\">//预定义最大串长</span></span><br><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span>&#123;</span><br>    <span class=\"hljs-keyword\">char</span> ch[MAXLEN];\t\t\t\t<span class=\"hljs-comment\">//每个分量存储一个字符</span><br>    <span class=\"hljs-keyword\">int</span> length;\t\t\t\t\t\t<span class=\"hljs-comment\">//串的实际长度</span><br>&#125;SSting;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">get_next</span><span class=\"hljs-params\">(SSting t,<span class=\"hljs-keyword\">int</span> next[])</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>,j=<span class=\"hljs-number\">0</span>;<br>    next[<span class=\"hljs-number\">1</span>]=<span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">while</span>(i&lt;t.length)<br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(j==<span class=\"hljs-number\">0</span>||t.ch[i]==t.ch[j])<br>        &#123;<br>            i++;<br>            j++;<br>            next[i]=j;      <span class=\"hljs-comment\">//若pi=pj,则next[j+i]=next[j]+1</span><br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>            j=next[j];      <span class=\"hljs-comment\">//否则令j=next[j]，循环继续</span><br>        &#125;<br>    &#125;<br>&#125;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">Index_KMP</span><span class=\"hljs-params\">(SSting s,SSting t,<span class=\"hljs-keyword\">int</span> next[])</span></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>,j=<span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">while</span> (i&lt;=s.length&amp;&amp;j&lt;=t.length)&#123;<br>        <span class=\"hljs-keyword\">if</span>(j==<span class=\"hljs-number\">0</span>||s.ch[i]==t.ch[j])<br>        &#123;<br>            j++;                    <span class=\"hljs-comment\">//继续比较后续字符</span><br>            i++;<br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>            j=next[j];              <span class=\"hljs-comment\">//模式串向右移动</span><br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">if</span>(j&gt;t.length)<br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> i-t.length;          <span class=\"hljs-comment\">//匹配成功</span><br>    &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>    &#125;<br>&#125;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    SSting a,b;<br>    string s1=<span class=\"hljs-string\">&quot;ababcabcacbab&quot;</span>;<br>    string s2=<span class=\"hljs-string\">&quot;abcac&quot;</span>;<br>    a.length=s1.<span class=\"hljs-built_in\">size</span>();<br>    b.length=s2.<span class=\"hljs-built_in\">size</span>();<br>    <span class=\"hljs-keyword\">int</span> next[s2.<span class=\"hljs-built_in\">size</span>()+<span class=\"hljs-number\">1</span>];<br>    <span class=\"hljs-built_in\">get_next</span>(b,next);<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;s1.<span class=\"hljs-built_in\">size</span>(); ++i) &#123;\t<span class=\"hljs-comment\">//初始化</span><br>        a.ch[i+<span class=\"hljs-number\">1</span>]=s1[i];<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt;s2.<span class=\"hljs-built_in\">size</span>() ; ++j) &#123;\t<span class=\"hljs-comment\">//初始化</span><br>        b.ch[j+<span class=\"hljs-number\">1</span>]=s2[j];<br>    &#125;<br>    <span class=\"hljs-keyword\">int</span> x=<span class=\"hljs-built_in\">Index_KMP</span>(a,b,next);<br>    <span class=\"hljs-keyword\">if</span>(x!=<span class=\"hljs-number\">0</span>)<br>    &#123;<br>        cout&lt;&lt;<span class=\"hljs-string\">&quot;找到了位置是：&quot;</span>&lt;&lt;x&lt;&lt;endl;<br>    &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        cout&lt;&lt;<span class=\"hljs-string\">&quot;没有找到&quot;</span>&lt;&lt;endl;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"程序输出：\"><a href=\"#程序输出：\" class=\"headerlink\" title=\"程序输出：\"></a>程序输出：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\">找到了位置是：<span class=\"hljs-number\">6</span><br></code></pre></td></tr></table></figure>\n\n",
            "tags": [
                "Data Structure",
                "String",
                "KMP"
            ]
        },
        {
            "id": "http://example.com/2022/04/27/Algorithm033/",
            "url": "http://example.com/2022/04/27/Algorithm033/",
            "title": "串-简单的模式匹配算法",
            "date_published": "2022-04-27T09:11:18.000Z",
            "content_html": "<h2 id=\"串-简单的模式匹配算法\"><a href=\"#串-简单的模式匹配算法\" class=\"headerlink\" title=\"串-简单的模式匹配算法\"></a>串-简单的模式匹配算法</h2><h3 id=\"简单的模式匹配算法\"><a href=\"#简单的模式匹配算法\" class=\"headerlink\" title=\"简单的模式匹配算法\"></a>简单的模式匹配算法</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">Index</span><span class=\"hljs-params\">(SSting s,SSting t)</span>        <span class=\"hljs-comment\">//简单的模式匹配算法</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>,j=<span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">while</span>(i&lt;=s.length &amp;&amp; j&lt;= t.length)<br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(s.ch[i]==t.ch[j])<br>        &#123;<br>            i++;                      <span class=\"hljs-comment\">//继续比较后继字符</span><br>            j++;<br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;                        <span class=\"hljs-comment\">//指针后退重新开始匹配</span><br>            i=i-j+<span class=\"hljs-number\">2</span>;                  <span class=\"hljs-comment\">//每次匹配失败后，都把模式t后移一位</span><br>            j=<span class=\"hljs-number\">1</span>;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">if</span>(j&gt;t.length) <span class=\"hljs-keyword\">return</span> i-t.length;           <span class=\"hljs-comment\">//返回与模式t中第一个字符相等的字符在主串s中的序号</span><br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"完整程序源代码\"><a href=\"#完整程序源代码\" class=\"headerlink\" title=\"完整程序源代码\"></a>完整程序源代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> MAXLEN 255\t\t\t\t\t<span class=\"hljs-comment\">//预定义最大串长</span></span><br><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span>&#123;</span><br>    <span class=\"hljs-keyword\">char</span> ch[MAXLEN];\t\t\t\t<span class=\"hljs-comment\">//每个分量存储一个字符</span><br>    <span class=\"hljs-keyword\">int</span> length;\t\t\t\t\t\t<span class=\"hljs-comment\">//串的实际长度</span><br>&#125;SSting;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">Index</span><span class=\"hljs-params\">(SSting s,SSting t)</span>        <span class=\"hljs-comment\">//简单的模式匹配算法</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>,j=<span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">while</span>(i&lt;=s.length &amp;&amp; j&lt;= t.length)<br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(s.ch[i]==t.ch[j])<br>        &#123;<br>            i++;                      <span class=\"hljs-comment\">//继续比较后继字符</span><br>            j++;<br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;                        <span class=\"hljs-comment\">//指针后退重新开始匹配</span><br>            i=i-j+<span class=\"hljs-number\">2</span>;                  <span class=\"hljs-comment\">//每次匹配失败后，都把模式t后移一位</span><br>            j=<span class=\"hljs-number\">1</span>;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">if</span>(j&gt;t.length) <span class=\"hljs-keyword\">return</span> i-t.length;           <span class=\"hljs-comment\">//返回与模式t中第一个字符相等的字符在主串s中的序号</span><br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    SSting a,b;<br>    string s1=<span class=\"hljs-string\">&quot;ababcabcacbab&quot;</span>;<br>    string s2=<span class=\"hljs-string\">&quot;abcac&quot;</span>;<br>    a.length=s1.<span class=\"hljs-built_in\">size</span>();<br>    b.length=s2.<span class=\"hljs-built_in\">size</span>();<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;s1.<span class=\"hljs-built_in\">size</span>(); ++i) &#123;\t<span class=\"hljs-comment\">//初始化</span><br>        a.ch[i+<span class=\"hljs-number\">1</span>]=s1[i];<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt;s2.<span class=\"hljs-built_in\">size</span>() ; ++j) &#123;\t<span class=\"hljs-comment\">//初始化</span><br>        b.ch[j+<span class=\"hljs-number\">1</span>]=s2[j];<br>    &#125;<br>    <span class=\"hljs-keyword\">int</span> x=<span class=\"hljs-built_in\">Index</span>(a,b);<br>    <span class=\"hljs-keyword\">if</span>(x!=<span class=\"hljs-number\">0</span>)<br>    &#123;<br>        cout&lt;&lt;<span class=\"hljs-string\">&quot;找到了位置是：&quot;</span>&lt;&lt;x&lt;&lt;endl;<br>    &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        cout&lt;&lt;<span class=\"hljs-string\">&quot;没有找到&quot;</span>&lt;&lt;endl;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"程序输出\"><a href=\"#程序输出\" class=\"headerlink\" title=\"程序输出\"></a>程序输出</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\">找到了位置是：<span class=\"hljs-number\">6</span><br></code></pre></td></tr></table></figure>\n\n",
            "tags": [
                "Data Structure",
                "String"
            ]
        },
        {
            "id": "http://example.com/2022/04/08/Algorithm015/",
            "url": "http://example.com/2022/04/08/Algorithm015/",
            "title": "C++的STL中字符串string自带方法find查找",
            "date_published": "2022-04-08T11:18:57.000Z",
            "content_html": "<h1 id=\"C-的STL中字符串string自带方法find查找\"><a href=\"#C-的STL中字符串string自带方法find查找\" class=\"headerlink\" title=\"C++的STL中字符串string自带方法find查找\"></a>C++的STL中字符串string自带方法find查找</h1><h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\">string str = <span class=\"hljs-string\">&quot;abcd&quot;</span>;<br>\tcout &lt;&lt; str.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-string\">&#x27;a&#x27;</span>);<br>\t<span class=\"hljs-comment\">//返回的是下标的值而不是指针或是迭代器</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\">string str = <span class=\"hljs-string\">&quot;abcd&quot;</span><br>string sub = <span class=\"hljs-string\">&quot;cd&quot;</span><br><span class=\"hljs-keyword\">if</span>(str.<span class=\"hljs-built_in\">find</span>(sub)!=string::npos)&#123;<br>    cout&lt;&lt;<span class=\"hljs-string\">&quot;找到了&quot;</span>&lt;&lt;endl;<br>&#125;<span class=\"hljs-keyword\">else</span>&#123;<br>    cout&lt;&lt;<span class=\"hljs-string\">&quot;没有找到&quot;</span>&lt;&lt;endl;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>要是没有找到，返回的是str::npos<br>注意，只有string的find方法是返回的下标，因为string是顺序索引，set,map,multiset,multimap都不是顺序索引的数据结构，所以返回的是迭代器。</p>\n<h2 id=\"样例一-L1-070-吃火锅-15-分\"><a href=\"#样例一-L1-070-吃火锅-15-分\" class=\"headerlink\" title=\"样例一:L1-070 吃火锅 (15 分)\"></a>样例一:<strong>L1-070 吃火锅 (15 分)</strong></h2><p><strong>题目链接：</strong></p>\n<p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/1336215880692482053\">https://pintia.cn/problem-sets/994805046380707840/problems/1336215880692482053</a></p>\n<p><img src=\"/2022/04/08/Algorithm015/68518b64-f2f7-4694-aaeb-d32afe657f7b.jpg\" alt=\"chg.jpg\"></p>\n<p>以上图片来自微信朋友圈：这种天气你有什么破事打电话给我基本没用。但是如果你说“吃火锅”，那就厉害了，我们的故事就开始了。</p>\n<p>本题要求你实现一个程序，自动检查你朋友给你发来的信息里有没有 <code>chi1 huo3 guo1</code>。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>输入每行给出一句不超过 80 个字符的、以回车结尾的朋友信息，信息为非空字符串，仅包括字母、数字、空格、可见的半角标点符号。当读到某一行只有一个英文句点 <code>.</code> 时，输入结束，此行不算在朋友信息里。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>首先在一行中输出朋友信息的总条数。然后对朋友的每一行信息，检查其中是否包含 <code>chi1 huo3 guo1</code>，并且统计这样厉害的信息有多少条。在第二行中首先输出第一次出现 <code>chi1 huo3 guo1</code> 的信息是第几条（从 1 开始计数），然后输出这类信息的总条数，其间以一个空格分隔。题目保证输出的所有数字不超过 100。</p>\n<p>如果朋友从头到尾都没提 <code>chi1 huo3 guo1</code> 这个关键词，则在第二行输出一个表情 <code>-_-#</code>。</p>\n<h3 id=\"输入样例-1：\"><a href=\"#输入样例-1：\" class=\"headerlink\" title=\"输入样例 1：\"></a>输入样例 1：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs in\">Hello!<br>are you there?<br>wantta chi1 huo3 guo1?<br>that&#x27;s so li hai le<br>our story begins from chi1 huo3 guo1 le<br>.<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"输出样例-1：\"><a href=\"#输出样例-1：\" class=\"headerlink\" title=\"输出样例 1：\"></a>输出样例 1：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs out\">5<br>3 2<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"输入样例-2：\"><a href=\"#输入样例-2：\" class=\"headerlink\" title=\"输入样例 2：\"></a>输入样例 2：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs in\">Hello!<br>are you there?<br>wantta qi huo3 guo1 chi1huo3guo1?<br>that&#x27;s so li hai le<br>our story begins from ci1 huo4 guo2 le<br>.<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"输出样例-2：\"><a href=\"#输出样例-2：\" class=\"headerlink\" title=\"输出样例 2：\"></a>输出样例 2：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs out\">5<br>-_-#<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> flag=<span class=\"hljs-number\">0</span>;\t\t\t\t\t<span class=\"hljs-comment\">//用来判断是否是第一次找到吃火锅</span><br>    <span class=\"hljs-keyword\">int</span> cnt=<span class=\"hljs-number\">0</span>;\t\t\t\t\t<span class=\"hljs-comment\">//用来记录总行数</span><br>    <span class=\"hljs-keyword\">int</span> count=<span class=\"hljs-number\">0</span>;\t\t\t\t<span class=\"hljs-comment\">//用来记录有多少个吃火锅</span><br>    <span class=\"hljs-keyword\">int</span> firstp=<span class=\"hljs-number\">0</span>;\t\t\t\t<span class=\"hljs-comment\">//用来记录第一次出现吃火锅的位置</span><br>    string cmp=<span class=\"hljs-string\">&quot;chi1 huo3 guo1&quot;</span>;<br>    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">true</span>)<br>    &#123;<br>        string s;<br>        s.<span class=\"hljs-built_in\">clear</span>();<br>        <span class=\"hljs-built_in\">getline</span>(cin,s);<br>        <span class=\"hljs-keyword\">if</span>(s.<span class=\"hljs-built_in\">size</span>()==<span class=\"hljs-number\">1</span>&amp;&amp;s==<span class=\"hljs-string\">&quot;.&quot;</span>)&#123;<br>            <span class=\"hljs-keyword\">break</span>;<br>        &#125;<br>        string tmp =s;<br>        <span class=\"hljs-keyword\">if</span>(tmp.<span class=\"hljs-built_in\">find</span>(cmp)!=string::npos)&#123;<br>            <span class=\"hljs-keyword\">if</span>(flag==<span class=\"hljs-number\">0</span>) &#123;<br>                flag =<span class=\"hljs-number\">1</span>;<br>                firstp = cnt+<span class=\"hljs-number\">1</span>;<br>            &#125;<br>            count=count+<span class=\"hljs-number\">1</span>;<br>        &#125;<br>        cnt=cnt+<span class=\"hljs-number\">1</span>;<br><br>    &#125;<br>    <span class=\"hljs-keyword\">if</span>(count==<span class=\"hljs-number\">0</span>)&#123;<br>        cout&lt;&lt;cnt&lt;&lt;endl;<br>        cout&lt;&lt;<span class=\"hljs-string\">&quot;-_-#&quot;</span>&lt;&lt;endl;<br>    &#125; <span class=\"hljs-keyword\">else</span>&#123;<br>        cout&lt;&lt;cnt&lt;&lt;endl;<br>        cout&lt;&lt;firstp&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;count&lt;&lt;endl;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://blog.csdn.net/qq_50675813/article/details/113313343\">(18条消息) c++STL中的find()函数 有两种使用方法_我们不生产代码，只是代码的搬运工的博客-CSDN博客_c++中find函数的使用方法</a></p>\n<p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/1336215880692482053\">https://pintia.cn/problem-sets/994805046380707840/problems/1336215880692482053</a></p>\n",
            "tags": [
                "String",
                "Find",
                "STL",
                "C++"
            ]
        }
    ]
}