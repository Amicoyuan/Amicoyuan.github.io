{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"map\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/04/23/Algorithm031/",
            "url": "http://example.com/2022/04/23/Algorithm031/",
            "title": "L2-039 清点代码库 (25 分)",
            "date_published": "2022-04-23T13:44:47.000Z",
            "content_html": "<h2 id=\"L2-039-清点代码库-25-分\"><a href=\"#L2-039-清点代码库-25-分\" class=\"headerlink\" title=\"L2-039 清点代码库 (25 分)\"></a>L2-039 清点代码库 (25 分)</h2><p><img src=\"/2022/04/23/Algorithm031/58e6a034-993d-4049-8deb-23d769c8597e.jpg\" alt=\"code.jpg\"></p>\n<p>上图转自新浪微博：“阿里代码库有几亿行代码，但其中有很多功能重复的代码，比如单单快排就被重写了几百遍。请设计一个程序，能够将代码库中所有功能重复的代码找出。各位大佬有啥想法，我当时就懵了，然后就挂了。。。”</p>\n<p>这里我们把问题简化一下：首先假设两个功能模块如果接受同样的输入，总是给出同样的输出，则它们就是功能重复的；其次我们把每个模块的输出都简化为一个整数（在 <strong>int</strong> 范围内）。于是我们可以设计一系列输入，检查所有功能模块的对应输出，从而查出功能重复的代码。你的任务就是设计并实现这个简化问题的解决方案。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>输入在第一行中给出 2 个正整数，依次为 <em>N</em>（≤104）和 <em>M</em>（≤102），对应功能模块的个数和系列测试输入的个数。</p>\n<p>随后 <em>N</em> 行，每行给出一个功能模块的 <em>M</em> 个对应输出，数字间以空格分隔。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>首先在第一行输出不同功能的个数 <em>K</em>。随后 <em>K</em> 行，每行给出具有这个功能的模块的个数，以及这个功能的对应输出。数字间以 1 个空格分隔，行首尾不得有多余空格。输出首先按模块个数非递增顺序，如果有并列，则按输出序列的递增序给出。</p>\n<p>注：所谓数列 { <em>A</em>1, …, <em>A</em>M } 比 { <em>B</em>1, …, <em>B</em>M } 大，是指存在 1≤i&lt;*M*，使得 *A*1&#x3D;*B*1，…，*Ai*&#x3D;*Bi* 成立，且 *Ai*+1&gt;<em>B</em>+1。</p>\n<h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs in\">7 3<br>35 28 74<br>-1 -1 22<br>28 74 35<br>-1 -1 22<br>11 66 0<br>35 28 74<br>35 28 74<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs out\">4<br>3 35 28 74<br>2 -1 -1 22<br>1 11 66 0<br>1 28 74 35<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"程序源代码：\"><a href=\"#程序源代码：\" class=\"headerlink\" title=\"程序源代码：\"></a>程序源代码：</h3><p><strong>利用map的映射关系</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br>map&lt;vector&lt;<span class=\"hljs-keyword\">int</span>&gt;,<span class=\"hljs-keyword\">int</span>&gt; mp;   <span class=\"hljs-comment\">//key，value</span><br>vector&lt;<span class=\"hljs-keyword\">int</span>&gt; tmp;<br><span class=\"hljs-keyword\">int</span> n,m;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">cmp</span><span class=\"hljs-params\">(pair&lt;vector&lt;<span class=\"hljs-keyword\">int</span>&gt;,<span class=\"hljs-keyword\">int</span>&gt; a,pair&lt;vector&lt;<span class=\"hljs-keyword\">int</span>&gt;,<span class=\"hljs-keyword\">int</span>&gt; b)</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(a.second==b.second)<br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> a.first&lt;b.first;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> a.second&gt;b.second;<br><br>&#125;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;n ; ++i) &#123;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; m; ++j) &#123;<br>            <span class=\"hljs-keyword\">int</span> num;<br>            cin&gt;&gt;num;<br>            tmp.<span class=\"hljs-built_in\">push_back</span>(num);<br>        &#125;<br>        mp[tmp]++;<br>        tmp.<span class=\"hljs-built_in\">clear</span>();<br>    &#125;<br>    vector&lt;pair&lt;vector&lt;<span class=\"hljs-keyword\">int</span>&gt;,<span class=\"hljs-keyword\">int</span>&gt;&gt; <span class=\"hljs-built_in\">v</span>(mp.<span class=\"hljs-built_in\">begin</span>(),mp.<span class=\"hljs-built_in\">end</span>());\t\t<span class=\"hljs-comment\">//把map类型转化成vector</span><br>    cout&lt;&lt;v.<span class=\"hljs-built_in\">size</span>()&lt;&lt;endl;<br>    <span class=\"hljs-built_in\">sort</span>(v.<span class=\"hljs-built_in\">begin</span>(),v.<span class=\"hljs-built_in\">end</span>(),cmp);\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//sort排序，注意终点和起点</span><br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> k = <span class=\"hljs-number\">0</span>; k &lt;v.<span class=\"hljs-built_in\">size</span>() ; ++k) &#123;<br>        cout&lt;&lt;v[k].second&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;m ; ++i) &#123;<br>            <span class=\"hljs-keyword\">if</span>(i!=m<span class=\"hljs-number\">-1</span>)&#123;<br>                cout&lt;&lt;v[k].first[i]&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>;<br>            &#125; <span class=\"hljs-keyword\">else</span>&#123;<br>                cout&lt;&lt;v[k].first[i]&lt;&lt;endl;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h3><p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/1386335159927652362\">题目详情 - L2-039 清点代码库 (25 分) (pintia.cn)</a></p>\n",
            "tags": [
                "Data Structure",
                "C++",
                "团体程序设计天梯赛",
                "Sort",
                "Vector",
                "Map",
                "Pair"
            ]
        },
        {
            "id": "http://example.com/2022/04/16/Algorithm029/",
            "url": "http://example.com/2022/04/16/Algorithm029/",
            "title": "STL中map的使用",
            "date_published": "2022-04-16T08:26:03.000Z",
            "content_html": "<h2 id=\"STL中map的使用\"><a href=\"#STL中map的使用\" class=\"headerlink\" title=\"STL中map的使用\"></a>STL中map的使用</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>map 是 STL 的一个关联容器，它提供一对一的数据处理能力。</p>\n<p>map 对象是<strong>模板类</strong>，需要<strong>关键字</strong>和<strong>存储对象</strong>两个模板参数：其中第一个参数称为关键字，每个关键字只能在 map 中出现一次；第二个参数称为该关键字的值。可以将关键字和存储对象理解为“{键，值}对”。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">map&lt;<span class=\"hljs-keyword\">int</span>,string&gt; mp;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"map的数据插入操作\"><a href=\"#map的数据插入操作\" class=\"headerlink\" title=\"map的数据插入操作\"></a>map的数据插入操作</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">//使用insert函数插入pair数据</span><br>mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">3</span>,<span class=\"hljs-string\">&quot;xingyuanjie&quot;</span>));<br><span class=\"hljs-comment\">//使用数组方式插入数据</span><br>mp[<span class=\"hljs-number\">2</span>]=<span class=\"hljs-string\">&quot;wangzhouyang&quot;</span>;<br></code></pre></div></td></tr></table></figure>\n\n<p><strong>说明：上面的两种方法是有区别的，用 insert 函数插入数据，涉及到集合的唯一性这个概念，即当 map 中有这个关键字时，insert 操作是不能实现数据插入的；但是数组方式能够插入数据，插入的数据会覆盖该关键字之前对应的值。</strong></p>\n<h3 id=\"map中数据的遍历\"><a href=\"#map中数据的遍历\" class=\"headerlink\" title=\"map中数据的遍历\"></a>map中数据的遍历</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">map&lt;<span class=\"hljs-keyword\">int</span>,string&gt;::iterator it;\t\t\t\t\t<span class=\"hljs-comment\">//迭代器</span><br><span class=\"hljs-keyword\">for</span> (it=mp.<span class=\"hljs-built_in\">begin</span>();it!=mp.<span class=\"hljs-built_in\">end</span>();it++) &#123;<br>    cout&lt;&lt;it-&gt;first&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;it-&gt;second&lt;&lt;endl;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"map中数据的查找\"><a href=\"#map中数据的查找\" class=\"headerlink\" title=\"map中数据的查找\"></a>map中数据的查找</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">map&lt;<span class=\"hljs-keyword\">int</span>,string&gt;::iterator it;\t\t\t\t\t<span class=\"hljs-comment\">//迭代器</span><br>it=mp.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">if</span>(it!=mp.<span class=\"hljs-built_in\">end</span>())&#123;<br>        cout &lt;&lt; <span class=\"hljs-string\">&quot;Find it, the relative value is: &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;<br>&#125;<br><span class=\"hljs-keyword\">else</span>&#123;<br>       \tcout &lt;&lt; <span class=\"hljs-string\">&quot;Can not find the relative value.&quot;</span> &lt;&lt; endl;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"map中数据的删除\"><a href=\"#map中数据的删除\" class=\"headerlink\" title=\"map中数据的删除\"></a>map中数据的删除</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">map&lt;<span class=\"hljs-keyword\">int</span>,string&gt;::iterator it;\t\t\t\t\t<span class=\"hljs-comment\">//迭代器</span><br>it = mp.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-number\">2</span>);<br>mp.<span class=\"hljs-built_in\">erase</span>(it);<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"map中数据的排序\"><a href=\"#map中数据的排序\" class=\"headerlink\" title=\"map中数据的排序\"></a>map中数据的排序</h3><p><strong>map 中的所有元素都会根据元素的键值，自动进行升序排序。</strong></p>\n<h3 id=\"完整操作\"><a href=\"#完整操作\" class=\"headerlink\" title=\"完整操作\"></a>完整操作</h3><h4 id=\"程序源代码：\"><a href=\"#程序源代码：\" class=\"headerlink\" title=\"程序源代码：\"></a>程序源代码：</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br>map&lt;<span class=\"hljs-keyword\">int</span>,string&gt; mp;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-comment\">//使用insert函数插入pair数据</span><br>    mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">3</span>,<span class=\"hljs-string\">&quot;xingyuanjie&quot;</span>));<br>    mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">&quot;shicheng&quot;</span>));<br>    mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">4</span>,<span class=\"hljs-string\">&quot;tanghaipeng&quot;</span>));<br>    mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">6</span>,<span class=\"hljs-string\">&quot;zhouyuhao&quot;</span>));<br>    mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">5</span>,<span class=\"hljs-string\">&quot;heqichuan&quot;</span>));<br>    <span class=\"hljs-comment\">//使用数组方式插入数据</span><br>    mp[<span class=\"hljs-number\">2</span>]=<span class=\"hljs-string\">&quot;wangzhouyang&quot;</span>;<br>    <span class=\"hljs-comment\">//map的遍历</span><br>    map&lt;<span class=\"hljs-keyword\">int</span>,string&gt;::iterator it;<br>    <span class=\"hljs-keyword\">for</span> (it=mp.<span class=\"hljs-built_in\">begin</span>();it!=mp.<span class=\"hljs-built_in\">end</span>();it++) &#123;<br>        cout&lt;&lt;it-&gt;first&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;it-&gt;second&lt;&lt;endl;<br>    &#125;<br>    <span class=\"hljs-comment\">//查找操作</span><br>    it=mp.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-number\">1</span>);<br>    <span class=\"hljs-keyword\">if</span>(it!=mp.<span class=\"hljs-built_in\">end</span>())&#123;<br>        cout &lt;&lt; <span class=\"hljs-string\">&quot;Find it, the relative value is: &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;<br>    &#125;<br>    <span class=\"hljs-keyword\">else</span> &#123;<br>        cout &lt;&lt; <span class=\"hljs-string\">&quot;Can not find the relative value.&quot;</span> &lt;&lt; endl;<br>    &#125;<br>    <span class=\"hljs-comment\">//删除操作</span><br>    it = mp.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-number\">2</span>);<br>    mp.<span class=\"hljs-built_in\">erase</span>(it);<br>    <span class=\"hljs-keyword\">for</span> (it=mp.<span class=\"hljs-built_in\">begin</span>();it!=mp.<span class=\"hljs-built_in\">end</span>();it++) &#123;<br>        cout&lt;&lt;it-&gt;first&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;it-&gt;second&lt;&lt;endl;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h4 id=\"程序输出：\"><a href=\"#程序输出：\" class=\"headerlink\" title=\"程序输出：\"></a>程序输出：</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-number\">1</span> shicheng<br><span class=\"hljs-number\">2</span> wangzhouyang<br><span class=\"hljs-number\">3</span> xingyuanjie<br><span class=\"hljs-number\">4</span> tanghaipeng<br><span class=\"hljs-number\">5</span> heqichuan<br><span class=\"hljs-number\">6</span> zhouyuhao<br>Find it, the relative value is: shicheng<br><span class=\"hljs-number\">1</span> shicheng<br><span class=\"hljs-number\">3</span> xingyuanjie<br><span class=\"hljs-number\">4</span> tanghaipeng<br><span class=\"hljs-number\">5</span> heqichuan<br><span class=\"hljs-number\">6</span> zhouyuhao<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h3><p><a href=\"https://blog.csdn.net/liitdar/article/details/80009712\">(20条消息) STL中map介绍_liitdar的博客-CSDN博客_stlmap</a></p>\n",
            "tags": [
                "STL",
                "Map"
            ]
        }
    ]
}