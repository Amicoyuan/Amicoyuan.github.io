{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"结构体\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/04/16/Algorithm027/",
            "url": "http://example.com/2022/04/16/Algorithm027/",
            "title": "L2-009 抢红包 (25 分)",
            "date_published": "2022-04-16T06:57:38.000Z",
            "content_html": "<h2 id=\"L2-009-抢红包-25-分\"><a href=\"#L2-009-抢红包-25-分\" class=\"headerlink\" title=\"L2-009 抢红包 (25 分)\"></a><strong>L2-009 抢红包 (25 分)</strong></h2><p>没有人没抢过红包吧…… 这里给出<em>N</em>个人之间互相发红包、抢红包的记录，请你统计一下他们抢红包的收获。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>输入第一行给出一个正整数<em>N</em>（≤104），即参与发红包和抢红包的总人数，则这些人从1到<em>N</em>编号。随后<em>N</em>行，第<em>i</em>行给出编号为<em>i</em>的人发红包的记录，格式如下：</p>\n<p><em>K     N</em>1 <em>P</em>1⋯ NK PK</p>\n<p>其中<em>K</em>（0≤<em>K</em>≤20）是发出去的红包个数，<em>N</em>i<em>是抢到红包的人的编号，</em>Pi（&gt;0）是其抢到的红包金额（以分为单位）。注意：对于同一个人发出的红包，每人最多只能抢1次，不能重复抢。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>按照收入金额从高到低的递减顺序输出每个人的编号和收入金额（以元为单位，输出小数点后2位）。每个人的信息占一行，两数字间有1个空格。如果收入金额有并列，则按抢到红包的个数递减输出；如果还有并列，则按个人编号递增输出。</p>\n<h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code class=\"in\">10\n3 2 22 10 58 8 125\n5 1 345 3 211 5 233 7 13 8 101\n1 7 8800\n2 1 1000 2 1000\n2 4 250 10 320\n6 5 11 9 22 8 33 7 44 10 55 4 2\n1 3 8800\n2 1 23 2 123\n1 8 250\n4 2 121 4 516 7 112 9 10\n</code></pre>\n<h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code class=\"out\">1 11.63\n2 3.63\n8 3.63\n3 2.11\n7 1.69\n6 -1.67\n9 -2.18\n10 -3.26\n5 -3.26\n4 -12.32\n</code></pre>\n<h3 id=\"程序源代码：\"><a href=\"#程序源代码：\" class=\"headerlink\" title=\"程序源代码：\"></a>程序源代码：</h3><p><strong>结构体 + Sort</strong></p>\n<p><strong>需要注意的就是double类型相等的比较</strong></p>\n<p><strong>首先，浮点数在计算机中并不能精确的表示，所以在判断两个double类型的数时需要其他的手段，而不是直接 a&#x3D;&#x3D; b</strong></p>\n<pre><code class=\"c++\">#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct student&#123;\n    int id=0;\n    double money=0;\n    int cnt=0;\n&#125;;\ndouble dis=1e-6;\t\t\t\t//定义一个误差\nbool cmp(student a,student b)&#123;\n    if(abs(a.money-b.money)&lt;dis)&#123;\t\t\t\t//如果两个double型相减在误差的范围内，我们认定这两个double类型相等\n        if(a.cnt==b.cnt)&#123;\n            return a.id&lt;b.id;\n        &#125;else&#123;\n            return a.cnt&gt;b.cnt;\n        &#125;\n    &#125;\n    return a.money&gt;b.money;\n&#125;\nint main()\n&#123;\n    int n;\n    cin&gt;&gt;n;\n    student st[n+5];\n    for (int i = 0; i &lt;n ; ++i) &#123;\n        int time;\n        cin&gt;&gt;time;\n        st[i].id=i+1;\n        for (int j = 0; j &lt;time ; ++j) &#123;\n            int p;\n            double x;\n            cin&gt;&gt;p&gt;&gt;x;\n            st[p-1].money+=x/100;\n            st[i].money-=x/100;\n            st[p-1].cnt++;\t\t\t\t\t//记录抢到的红包数\n        &#125;\n    &#125;\n    sort(st,st+n,cmp);\t\t\t\t\t\t//sort从数组下标0开始排序，左闭右开\n    for (int k = 0; k &lt;n ; ++k) &#123;\n        printf(&quot;%d %.2lf\\n&quot;,st[k].id,st[k].money);\n    &#125;\n    return 0;\n&#125;\n</code></pre>\n<h3 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h3><p><a href=\"https://blog.csdn.net/dingpiao190/article/details/73512811?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&utm_relevant_index=1\">(20条消息) double类型是否相等的判断方法_dingpiao190的博客-CSDN博客_double判断相等</a></p>\n<p><a href=\"https://blog.csdn.net/patrick_star_cowboy/article/details/82083392\">(20条消息) 如何判断两个double类型的数是否相等？_Patrick-Star的博客-CSDN博客_两个double怎么判断相等</a></p>\n<p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/994805066890854400\">题目详情 - L2-009 抢红包 (25 分) (pintia.cn)</a></p>\n",
            "tags": [
                "C++",
                "团体程序设计天梯赛",
                "Sort",
                "结构体",
                "Double类型相等比较"
            ]
        },
        {
            "id": "http://example.com/2022/04/15/Algorithm026/",
            "url": "http://example.com/2022/04/15/Algorithm026/",
            "title": "L2-003 月饼 (25 分)",
            "date_published": "2022-04-15T14:03:52.000Z",
            "content_html": "<h2 id=\"L2-003-月饼-25-分\"><a href=\"#L2-003-月饼-25-分\" class=\"headerlink\" title=\"L2-003 月饼 (25 分)\"></a>L2-003 月饼 (25 分)</h2><p>月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。</p>\n<p>注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有 3 种月饼，其库存量分别为 18、15、10 万吨，总售价分别为 75、72、45 亿元。如果市场的最大需求量只有 20 万吨，那么我们最大收益策略应该是卖出全部 15 万吨第 2 种月饼、以及 5 万吨第 3 种月饼，获得 72 + 45&#x2F;2 &#x3D; 94.5（亿元）。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>每个输入包含一个测试用例。每个测试用例先给出一个不超过 1000 的正整数 <em>N</em> 表示月饼的种类数、以及不超过 500（以万吨为单位）的正整数 <em>D</em> 表示市场最大需求量。随后一行给出 <em>N</em> 个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出 <em>N</em> 个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后 2 位。</p>\n<h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code class=\"in\">3 20\n18 15 10\n75 72 45\n</code></pre>\n<h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code class=\"out\">94.50\n</code></pre>\n<h3 id=\"程序源代码：\"><a href=\"#程序源代码：\" class=\"headerlink\" title=\"程序源代码：\"></a>程序源代码：</h3><p><strong>贪心 + Sort</strong></p>\n<pre><code class=\"c++\">#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct mooncake&#123;\n    double pow;\n    double price;\n&#125;;\nbool cmp(mooncake a,mooncake b)&#123;\n    return a.price*1.0/a.pow&gt;b.price*1.0/b.pow;\t\t\t\t//返回单价高的\n&#125;\nint main()\n&#123;\n    int n;\n    double d;\n    cin&gt;&gt;n&gt;&gt;d;\n    mooncake m[n];\n    for (int i = 0; i &lt; n; ++i) &#123;\n        cin&gt;&gt;m[i].pow;\n    &#125;\n    for (int j = 0; j &lt;n ; ++j) &#123;\n        cin&gt;&gt;m[j].price;\n    &#125;\n    sort(m,m+n,cmp);\n    double price=0.0;\n    double tmpd=d;\n    for (int k = 0; k &lt;n ; ++k) &#123;\t\t\t\t\t\t//模拟求解\n        if(m[k].pow&lt;=tmpd)&#123;\n            tmpd-=m[k].pow;\n            price+=m[k].price;\n        &#125;else if(m[k].pow&gt;tmpd)&#123;\n            price+=tmpd*(m[k].price/m[k].pow);\n            break;\n        &#125;\n    &#125;\n    printf(&quot;%.2f\\n&quot;,price);\n    return 0;\n&#125;\n</code></pre>\n<h3 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h3><p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/994805071789801472\">题目详情 - L2-003 月饼 (25 分) (pintia.cn)</a></p>\n",
            "tags": [
                "C++",
                "团体程序设计天梯赛",
                "Sort",
                "结构体",
                "贪心"
            ]
        }
    ]
}