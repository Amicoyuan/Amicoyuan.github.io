{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"c/c++\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/02/02/register/",
            "url": "http://example.com/2023/02/02/register/",
            "title": "register关键字",
            "date_published": "2023-02-02T11:57:01.000Z",
            "content_html": "<h2 id=\"register关键字\"><a href=\"#register关键字\" class=\"headerlink\" title=\"register关键字\"></a>register关键字</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>\t<span class=\"hljs-keyword\">register</span> <span class=\"hljs-keyword\">int</span> val = <span class=\"hljs-number\">100</span>;<br>\t<span class=\"hljs-comment\">//寄存器变量没有地址，不能取地址</span><br>\tval = <span class=\"hljs-number\">200</span>; <span class=\"hljs-comment\">//可以被写入</span><br>\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d\\n&quot;</span>, val);<br>\t<span class=\"hljs-comment\">// 在gcc编译器下 也不允许取地址</span><br>\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br><span class=\"hljs-comment\">//由于使用register关键字，直接将val存在寄存器内，因此val没有内存地址，因此不能进行取地址操作。</span><br></code></pre></div></td></tr></table></figure>\n\n<ol>\n<li>我们通常采用局部变量采用 register 的，全局变量会导致 CPU 当中的寄存器被长时间占用。</li>\n<li>一个变量被存放到寄存器当中，那么这个变量的效率就会大大的提高,因为不用访存读取</li>\n<li>register关键字可以与指针变量一起使用。</li>\n<li>寄存器是一个存储类，并且C不允许变量使用多个存储类说明符。因此，register不能与static一起使用。</li>\n<li>寄存器只能在一个块内使用（局部），而不能在全局范围内（在主外部）使用</li>\n<li>寄存器数量有限</li>\n</ol>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://xie.infoq.cn/article/f6093f4eebd3664c0a1514e26\">【C语言】register 关键字_11月月更_謓泽_InfoQ写作社区</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/263575137\">一步带您了解C语言中的“register”关键字 - 知乎 (zhihu.com)</a></p>\n<p><a href=\"https://www.ab62.cn/article/5406.html\">C语言关键字之auto register详解_C 语言_AB教程网 (ab62.cn)</a></p>\n",
            "tags": [
                "C/C++",
                "register"
            ]
        }
    ]
}