{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"linklist\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/04/12/Algorithm017/",
            "url": "http://example.com/2022/04/12/Algorithm017/",
            "title": "L2-022 重排链表 (25 分)",
            "date_published": "2022-04-12T01:50:11.000Z",
            "content_html": "<h2 id=\"L2-022-重排链表-25-分\"><a href=\"#L2-022-重排链表-25-分\" class=\"headerlink\" title=\"L2-022 重排链表 (25 分)\"></a>L2-022 重排链表 (25 分)</h2><p>给定一个单链表 <em>L</em>1→<em>L</em>2→⋯→<em>Ln</em>−1→<em>Ln</em>，请编写程序将链表重新排列为 <em>Ln</em>→<em>L</em>1→<em>Ln</em>−1→<em>L</em>2→⋯。例如：给定<em>L</em>为1→2→3→4→5→6，则输出应该为6→1→5→2→4→3。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>每个输入包含1个测试用例。每个测试用例第1行给出第1个结点的地址和结点总个数，即正整数<em>N</em> (≤105)。结点的地址是5位非负整数，NULL地址用−1表示。</p>\n<p>接下来有<em>N</em>行，每行格式为：</p>\n<pre><code>Address Data Next\n</code></pre>\n<p>其中<code>Address</code>是结点地址；<code>Data</code>是该结点保存的数据，为不超过105的正整数；<code>Next</code>是下一结点的地址。题目保证给出的链表上至少有两个结点。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>对每个测试用例，顺序输出重排后的结果链表，其上每个结点占一行，格式与输入相同。</p>\n<h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre class=\" language-in\"><code class=\"language-in\">00100 6\n00000 4 99999\n00100 1 12309\n68237 6 -1\n33218 3 00000\n99999 5 68237\n12309 2 33218\n</code></pre>\n<h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre class=\" language-out\"><code class=\"language-out\">68237 6 00100\n00100 1 99999\n99999 5 12309\n12309 2 00000\n00000 4 33218\n33218 3 -1\n</code></pre>\n<h3 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h3><p><strong>利用双向链表，头尾指针来模拟</strong></p>\n<pre class=\" language-c++\"><code class=\"language-c++\">#include <bits/stdc++.h>\nusing namespace std;\nstruct linklist&#123;\n    int address=0;\t\t\t//记录当前结点的地址，虽然也没用到\n    int data=0;\t\t\t\t//记录数据域\n    int next=0;\t\t\t\t//指向下一个结点的地址\n    int pre=0;\t\t\t\t//指向上一个结点的地址\n&#125;l[100005];\nint main()\n&#123;\n    int start,back=-1;\t\t//头尾指针\n    int tmp;\t\t\t\t//用来遍历当前链表用于统计链表的长度\n    int n;\n    cin>>start>>n;\n    tmp=start;\n    int address, data, next;\n    l[start].pre=-1;\t   //初始化第一个结点的前一个结点位置为-1\n    int cnt=0;\t\t\t  \t//记录链表长\n    for (int i = 0; i <n ; ++i) &#123;\n       cin>>address>>data>>next;\n       l[address].address=address;\n       l[address].data=data;\n       l[address].next=next;\n       if(next!=-1)&#123;\n           l[next].pre=address;\t\t\t\t//设值上一个结点的地址\n       &#125;\n    &#125;\n    //这道题比较坑的地方是会出现不是这个链表的结点，所以n不是真正的链表长，需要统计真正的链表长\n    //如果没注意这点，第三个测试点会不通过，不过也能得到21分\n    while (true) &#123;\n        cnt++;\t\t\t\t//统计链表长\t\n        if(l[tmp].next==-1)&#123;\n            back=tmp;       //尾指针\n            break;\n        &#125;\n        tmp=l[tmp].next;\n    &#125;\n    int flag=0;\n    //flag=0动尾指针,flag=1动头指针。我并没有改变原来链表！\n    for (int k = 0; k <cnt ; ++k) &#123;\n            if(flag==0)&#123;\n                if(k==cnt-1)&#123;\n                    printf(\"%05d %d %d\\n\",l[back].address,l[back].data,-1);\n                &#125;else&#123;\n                    printf(\"%05d %d %05d\\n\",l[back].address,l[back].data,start);\n                &#125;\n                back=l[back].pre;\n                flag=1;\n            &#125;\n            else if(flag==1)&#123;\n                if(k==cnt-1)&#123;\n                    printf(\"%05d %d %d\\n\",l[start].address,l[start].data,-1);\n                &#125;else&#123;\n                    printf(\"%05d %d %05d\\n\",l[start].address,l[start].data,back);\n                &#125;\n                start=l[start].next;\n                flag=0;\n            &#125;\n    &#125;\n    return 0;\n&#125;\n</code></pre>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/994805057860517888\">题目详情 - L2-022 重排链表 (25 分) (pintia.cn)</a></p>\n",
            "tags": [
                "C++",
                "团体程序设计天梯赛",
                "LinkList",
                "双向链表"
            ]
        }
    ]
}