{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"哈希表\" tag",
    "description": "",
    "home_page_url": "https://xingyuanjie.top",
    "items": [
        {
            "id": "https://xingyuanjie.top/2023/03/02/leetcode205/",
            "url": "https://xingyuanjie.top/2023/03/02/leetcode205/",
            "title": "205.同构字符串",
            "date_published": "2023-03-02T12:44:27.000Z",
            "content_html": "<h2 id=\"205-同构字符串\"><a href=\"#205-同构字符串\" class=\"headerlink\" title=\"205.同构字符串\"></a>205.同构字符串</h2><h2 id=\"题目链接\"><a href=\"#题目链接\" class=\"headerlink\" title=\"题目链接\"></a>题目链接</h2><p><a href=\"https://leetcode.cn/problems/isomorphic-strings/\">205. 同构字符串 - 力扣（LeetCode）</a></p>\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> &#123;</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">isIsomorphic</span><span class=\"hljs-params\">(string s, string t)</span> </span>&#123;<br>        string ss;<br>        string st;<br>        <span class=\"hljs-keyword\">int</span> hash[<span class=\"hljs-number\">255</span>];<br>        <span class=\"hljs-keyword\">int</span> index=<span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">memset</span>(hash, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(hash));<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;s.<span class=\"hljs-built_in\">size</span>();i++)&#123;<br>            <span class=\"hljs-keyword\">if</span>(hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(s[i])]==<span class=\"hljs-number\">0</span>)<br>            &#123;<br>                index++;<br>                hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(s[i])]=index;<br>                ss.<span class=\"hljs-built_in\">push_back</span>(index+<span class=\"hljs-string\">&#x27;0&#x27;</span>);<br>            &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>                ss.<span class=\"hljs-built_in\">push_back</span>(hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(s[i])]+<span class=\"hljs-string\">&#x27;0&#x27;</span>);<br>            &#125;<br>        &#125;<br>        index=<span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">memset</span>(hash, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\"><span class=\"hljs-keyword\">sizeof</span></span>(hash));<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;t.<span class=\"hljs-built_in\">size</span>();i++)&#123;<br>            <span class=\"hljs-keyword\">if</span>(hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(t[i])]==<span class=\"hljs-number\">0</span>)<br>            &#123;<br>                index++;<br>                hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(t[i])]=index;<br>                st.<span class=\"hljs-built_in\">push_back</span>(index+<span class=\"hljs-string\">&#x27;0&#x27;</span>);<br>            &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>                st.<span class=\"hljs-built_in\">push_back</span>(hash[<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">int</span></span>(t[i])]+<span class=\"hljs-string\">&#x27;0&#x27;</span>);<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">int</span> ans = ss.<span class=\"hljs-built_in\">compare</span>(st);<br>        <span class=\"hljs-keyword\">if</span>(ans==<span class=\"hljs-number\">0</span>)&#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"参考代码\"><a href=\"#参考代码\" class=\"headerlink\" title=\"参考代码\"></a>参考代码</h2><p><img src=\"/2023/03/02/leetcode205/image-20230302204605581.png\" alt=\"image-20230302204605581\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> &#123;</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">isIsomorphic</span><span class=\"hljs-params\">(string s, string t)</span> </span>&#123;<br>        unordered_map&lt;<span class=\"hljs-keyword\">char</span>, <span class=\"hljs-keyword\">char</span>&gt; s2t;<br>        unordered_map&lt;<span class=\"hljs-keyword\">char</span>, <span class=\"hljs-keyword\">char</span>&gt; t2s;<br>        <span class=\"hljs-keyword\">int</span> len = s.<span class=\"hljs-built_in\">length</span>();<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; len; ++i) &#123;<br>            <span class=\"hljs-keyword\">char</span> x = s[i], y = t[i];<br>            <span class=\"hljs-keyword\">if</span> ((s2t.<span class=\"hljs-built_in\">count</span>(x) &amp;&amp; s2t[x] != y) || (t2s.<span class=\"hljs-built_in\">count</span>(y) &amp;&amp; t2s[y] != x)) &#123;<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>            &#125;<br>            s2t[x] = y;<br>            t2s[y] = x;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://leetcode.cn/problems/isomorphic-strings/solution/tong-gou-zi-fu-chuan-by-leetcode-solutio-s6fd/\">同构字符串 - 同构字符串 - 力扣（LeetCode）</a></p>\n",
            "tags": [
                "C++",
                "LeetCode",
                "哈希表"
            ]
        }
    ]
}