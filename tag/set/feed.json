{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"set\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/04/23/Algorithm030/",
            "url": "http://example.com/2022/04/23/Algorithm030/",
            "title": "L2-005 集合相似度 (25 分)",
            "date_published": "2022-04-23T13:39:53.000Z",
            "content_html": "<h2 id=\"L2-005-集合相似度-25-分\"><a href=\"#L2-005-集合相似度-25-分\" class=\"headerlink\" title=\"L2-005 集合相似度 (25 分)\"></a>L2-005 集合相似度 (25 分)</h2><p>给定两个整数集合，它们的相似度定义为：Nc&#x2F;Nt×100%。其中Nc是两个集合都有的不相等整数的个数，Nt是两个集合一共有的不相等整数的个数。你的任务就是计算任意一对给定集合的相似度。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>输入第一行给出一个正整数<em>N</em>（≤50），是集合的个数。随后<em>N</em>行，每行对应一个集合。每个集合首先给出一个正整数<em>M</em>（≤104），是集合中元素的个数；然后跟<em>M</em>个[0,109]区间内的整数。</p>\n<p>之后一行给出一个正整数<em>K</em>（≤2000），随后<em>K</em>行，每行对应一对需要计算相似度的集合的编号（集合从1到<em>N</em>编号）。数字间以空格分隔。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>对每一对需要计算的集合，在一行中输出它们的相似度，为保留小数点后2位的百分比数字。</p>\n<h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs in\">3<br>3 99 87 101<br>4 87 101 5 87<br>7 99 101 18 5 135 18 99<br>2<br>1 2<br>1 3<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs out\">50.00%<br>33.33%<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"程序源代码：\"><a href=\"#程序源代码：\" class=\"headerlink\" title=\"程序源代码：\"></a>程序源代码：</h3><p><strong>双set模拟</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> n;<br>    set&lt;<span class=\"hljs-keyword\">int</span>&gt; s[<span class=\"hljs-number\">55</span>];<br>    cin&gt;&gt;n;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;n ; ++i) &#123;<br>        <span class=\"hljs-keyword\">int</span> time;<br>        cin&gt;&gt;time;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt;time ; ++j) &#123;<br>            <span class=\"hljs-keyword\">int</span> num;<br>            cin&gt;&gt;num;<br>            s[i].<span class=\"hljs-built_in\">insert</span>(num);<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">int</span> find;<br>    cin&gt;&gt;find;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> l = <span class=\"hljs-number\">0</span>; l &lt;find ; ++l) &#123;<br>        <span class=\"hljs-keyword\">int</span> a,b;<br>        cin&gt;&gt;a&gt;&gt;b;<br>        <span class=\"hljs-keyword\">int</span> sum=<span class=\"hljs-number\">0</span>;<br>        set&lt;<span class=\"hljs-keyword\">int</span>&gt;::iterator it;\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//迭代器</span><br>        <span class=\"hljs-keyword\">int</span> cnt=<span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">for</span> (it=s[a<span class=\"hljs-number\">-1</span>].<span class=\"hljs-built_in\">begin</span>(); it!=s[a<span class=\"hljs-number\">-1</span>].<span class=\"hljs-built_in\">end</span>() ; it++) &#123;<br>            <span class=\"hljs-keyword\">if</span>(s[b<span class=\"hljs-number\">-1</span>].<span class=\"hljs-built_in\">find</span>(*it)!=s[b<span class=\"hljs-number\">-1</span>].<span class=\"hljs-built_in\">end</span>())&#123;\t\t\t\t<span class=\"hljs-comment\">//找到了</span><br>                cnt++;\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//Nc</span><br>            &#125;<br>        &#125;<br>        sum=s[a<span class=\"hljs-number\">-1</span>].<span class=\"hljs-built_in\">size</span>()+s[b<span class=\"hljs-number\">-1</span>].<span class=\"hljs-built_in\">size</span>()-cnt;\t\t\t\t<span class=\"hljs-comment\">//Nt=两个集合的总个数-相同个数</span><br>        <span class=\"hljs-keyword\">double</span> ans=<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">double</span></span>(<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">double</span></span>(cnt)/<span class=\"hljs-built_in\"><span class=\"hljs-keyword\">double</span></span>(sum))*<span class=\"hljs-number\">100.0</span>;<br>        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%.2lf%\\n&quot;</span>,ans);<br><br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h3><p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/994805070149828608\">题目详情 - L2-005 集合相似度 (25 分) (pintia.cn)</a></p>\n",
            "tags": [
                "C++",
                "Set",
                "团体程序设计天梯赛",
                "模拟"
            ]
        },
        {
            "id": "http://example.com/2022/04/12/Algorithm018/",
            "url": "http://example.com/2022/04/12/Algorithm018/",
            "title": "L2-023 图着色问题 (25 分)",
            "date_published": "2022-04-12T10:59:52.000Z",
            "content_html": "<h2 id=\"L2-023-图着色问题-25-分\"><a href=\"#L2-023-图着色问题-25-分\" class=\"headerlink\" title=\"L2-023 图着色问题 (25 分)\"></a>L2-023 图着色问题 (25 分)</h2><p>图着色问题是一个著名的NP完全问题。给定无向图<em>G</em>&#x3D;(<em>V</em>,<em>E</em>)，问可否用<em>K</em>种颜色为<em>V</em>中的每一个顶点分配一种颜色，使得不会有两个相邻顶点具有同一种颜色？</p>\n<p>但本题并不是要你解决这个着色问题，而是对给定的一种颜色分配，请你判断这是否是图着色问题的一个解。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>输入在第一行给出3个整数<em>V</em>（0&lt;<em>V</em>≤500）、<em>E</em>（≥0）和<em>K</em>（0&lt;<em>K</em>≤<em>V</em>），分别是无向图的顶点数、边数、以及颜色数。顶点和颜色都从1到<em>V</em>编号。随后<em>E</em>行，每行给出一条边的两个端点的编号。在图的信息给出之后，给出了一个正整数<em>N</em>（≤20），是待检查的颜色分配方案的个数。随后<em>N</em>行，每行顺次给出<em>V</em>个顶点的颜色（第<em>i</em>个数字表示第<em>i</em>个顶点的颜色），数字间以空格分隔。题目保证给定的无向图是合法的（即不存在自回路和重边）。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>对每种颜色分配方案，如果是图着色问题的一个解则输出<code>Yes</code>，否则输出<code>No</code>，每句占一行。</p>\n<h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><img src=\"/2022/04/12/Algorithm018/graph.png\" alt=\"graph\" style=\"zoom: 67%;\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs in\">6 8 3<br>2 1<br>1 3<br>4 6<br>2 5<br>2 4<br>5 4<br>5 6<br>3 6<br>4<br>1 2 3 3 1 2<br>4 5 6 6 4 5<br>1 2 3 4 5 6<br>2 3 4 2 3 4<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs out\">Yes<br>Yes<br>No<br>No<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h3><p><strong>Set + 邻接表</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> v,e,k;<br>    cin&gt;&gt;v&gt;&gt;e&gt;&gt;k;<br>    vector&lt;<span class=\"hljs-keyword\">int</span>&gt; g[<span class=\"hljs-number\">505</span>];\t\t\t<span class=\"hljs-comment\">//邻接表</span><br>    <span class=\"hljs-keyword\">int</span> color[<span class=\"hljs-number\">505</span>];\t\t\t\t<span class=\"hljs-comment\">//记录颜色</span><br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;e ; ++i) &#123;       <span class=\"hljs-comment\">//建立邻接表</span><br>        <span class=\"hljs-keyword\">int</span> a,b;<br>        cin&gt;&gt;a&gt;&gt;b;<br>        g[a].<span class=\"hljs-built_in\">push_back</span>(b);<br>        g[b].<span class=\"hljs-built_in\">push_back</span>(a);<br>    &#125;<br>    <span class=\"hljs-keyword\">int</span> time;<br>    cin&gt;&gt;time;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt;time ; ++j) &#123;<br>        <span class=\"hljs-keyword\">int</span> flag=<span class=\"hljs-number\">1</span>;<br>        set&lt;<span class=\"hljs-keyword\">int</span>&gt; s;\t\t\t\t\t<span class=\"hljs-comment\">//用来统计颜色总数</span><br>        s.<span class=\"hljs-built_in\">clear</span>();<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;=v; ++i) &#123;<br>            <span class=\"hljs-keyword\">int</span> num;<br>            cin&gt;&gt;num;<br>            color[i]=num;<br>            s.<span class=\"hljs-built_in\">insert</span>(num);<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(s.<span class=\"hljs-built_in\">size</span>()!=k)&#123;\t\t\t<span class=\"hljs-comment\">//如果颜色数不等于k即非法</span><br>            cout&lt;&lt;<span class=\"hljs-string\">&quot;No&quot;</span>&lt;&lt;endl;<br>            <span class=\"hljs-keyword\">continue</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> l = <span class=\"hljs-number\">1</span>; l &lt;=v ; ++l) &#123;\t\t\t\t\t\t<span class=\"hljs-comment\">//遍历邻接表</span><br>            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;g[l].<span class=\"hljs-built_in\">size</span>(); ++i) &#123;<br>                <span class=\"hljs-keyword\">if</span>(color[l]==color[g[l][i]])&#123;\t\t\t\t<span class=\"hljs-comment\">//如果相邻结点颜色一样则为假</span><br>                    flag=<span class=\"hljs-number\">0</span>;<br>                    <span class=\"hljs-keyword\">break</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(flag==<span class=\"hljs-number\">1</span>)&#123;<br>            cout&lt;&lt;<span class=\"hljs-string\">&quot;Yes&quot;</span>&lt;&lt;endl;<br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>            cout&lt;&lt;<span class=\"hljs-string\">&quot;No&quot;</span>&lt;&lt;endl;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/994805057298481152\">题目详情 - L2-023 图着色问题 (25 分) (pintia.cn)</a></p>\n",
            "tags": [
                "Data Structure",
                "C++",
                "Set",
                "团体程序设计天梯赛",
                "邻接表",
                "Vector",
                "Graph"
            ]
        },
        {
            "id": "http://example.com/2022/04/11/Algorithm016/",
            "url": "http://example.com/2022/04/11/Algorithm016/",
            "title": "L2-021 点赞狂魔 (25 分)",
            "date_published": "2022-04-11T11:21:06.000Z",
            "content_html": "<h1 id=\"L2-021-点赞狂魔-25-分\"><a href=\"#L2-021-点赞狂魔-25-分\" class=\"headerlink\" title=\"L2-021 点赞狂魔 (25 分)\"></a>L2-021 点赞狂魔 (25 分)</h1><p>微博上有个“点赞”功能，你可以为你喜欢的博文点个赞表示支持。每篇博文都有一些刻画其特性的标签，而你点赞的博文的类型，也间接刻画了你的特性。然而有这么一种人，他们会通过给自己看到的一切内容点赞来狂刷存在感，这种人就被称为“点赞狂魔”。他们点赞的标签非常分散，无法体现出明显的特性。本题就要求你写个程序，通过统计每个人点赞的不同标签的数量，找出前3名点赞狂魔。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>输入在第一行给出一个正整数<em>N</em>（≤100），是待统计的用户数。随后<em>N</em>行，每行列出一位用户的点赞标签。格式为“<code>Name</code> <em>K</em> <em>F</em>1⋯<em>F**K</em>”，其中<code>Name</code>是不超过8个英文小写字母的非空用户名，1≤<em>K</em>≤1000，<em>F**i</em>（<em>i</em>&#x3D;1,⋯,<em>K</em>）是特性标签的编号，我们将所有特性标签从 1 到 107 编号。数字间以空格分隔。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>统计每个人点赞的不同标签的数量，找出数量最大的前3名，在一行中顺序输出他们的用户名,其间以1个空格分隔,且行末不得有多余空格。如果有并列，则输出标签出现次数平均值最小的那个，题目保证这样的用户没有并列。若不足3人，则用<code>-</code>补齐缺失，例如<code>mike jenny -</code>就表示只有2人。</p>\n<h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs in\">5<br>bob 11 101 102 103 104 105 106 107 108 108 107 107<br>peter 8 1 2 3 4 3 2 5 1<br>chris 12 1 2 3 4 5 6 7 8 9 1 2 3<br>john 10 8 7 6 5 4 3 2 1 7 5<br>jack 9 6 7 8 9 10 11 12 13 14<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs out\">jack chris john<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h3><p><strong>结构体数组 + sort排序</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">person</span>&#123;</span><br>    <span class=\"hljs-keyword\">char</span> name[<span class=\"hljs-number\">10</span>];<br>    set&lt;<span class=\"hljs-keyword\">int</span>&gt; s;\t\t\t\t<span class=\"hljs-comment\">//set容器中的每个元素值唯一</span><br>    <span class=\"hljs-keyword\">int</span> all=<span class=\"hljs-number\">0</span>;\t\t\t\t<span class=\"hljs-comment\">//记录点赞次数</span><br>&#125;;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">cmp</span><span class=\"hljs-params\">(person a,person b)</span></span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(a.s.<span class=\"hljs-built_in\">size</span>()==b.s.<span class=\"hljs-built_in\">size</span>()) <span class=\"hljs-keyword\">return</span> a.all&lt;b.all;\t\t\t<span class=\"hljs-comment\">//如果有并列，则输出标签出现次数平均值最小的那个</span><br>    <span class=\"hljs-keyword\">return</span> a.s.<span class=\"hljs-built_in\">size</span>()&gt;b.s.<span class=\"hljs-built_in\">size</span>();\t\t\t\t\t\t\t<span class=\"hljs-comment\">//点赞的不同标签的数量最多的</span><br>&#125;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> n;<br>    cin&gt;&gt;n;<br>    person p[n];<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;n ; ++i) &#123;<br>        cin&gt;&gt;p[i].name;<br>        <span class=\"hljs-keyword\">int</span> time;<br>        cin&gt;&gt;time;<br>        p[i].all=time;\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//记录点赞次数</span><br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; time; ++j) &#123;<br>            <span class=\"hljs-keyword\">int</span> tmp;<br>            cin&gt;&gt;tmp;<br>            p[i].s.<span class=\"hljs-built_in\">insert</span>(tmp);\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//插入set容器</span><br>        &#125;<br>    &#125;<br>    <span class=\"hljs-built_in\">sort</span>(p,p+n,cmp);\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//排序</span><br>    <span class=\"hljs-keyword\">if</span>(n&gt;=<span class=\"hljs-number\">3</span>)&#123;<br>        cout&lt;&lt;p[<span class=\"hljs-number\">0</span>].name&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;p[<span class=\"hljs-number\">1</span>].name&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;p[<span class=\"hljs-number\">2</span>].name&lt;&lt;endl;<br>    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(n==<span class=\"hljs-number\">2</span>)&#123;<br>        cout&lt;&lt;p[<span class=\"hljs-number\">0</span>].name&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;p[<span class=\"hljs-number\">1</span>].name&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;<span class=\"hljs-string\">&quot;-&quot;</span>&lt;&lt;endl;<br>    &#125;<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(n==<span class=\"hljs-number\">1</span>)&#123;<br>        cout&lt;&lt;p[<span class=\"hljs-number\">0</span>].name&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;<span class=\"hljs-string\">&quot;-&quot;</span>&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;<span class=\"hljs-string\">&quot;-&quot;</span>&lt;&lt;endl;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/994805058485469184\">题目详情 - L2-021 点赞狂魔 (25 分) (pintia.cn)</a></p>\n<p><a href=\"https://blog.csdn.net/changjiale110/article/details/79108447\">(19条消息) STL中的set使用方法详细！！！！_知足–常乐的博客-CSDN博客_set stl</a></p>\n",
            "tags": [
                "STL",
                "C++",
                "Set",
                "团体程序设计天梯赛",
                "Sort"
            ]
        }
    ]
}