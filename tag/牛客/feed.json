{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"牛客\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/02/07/niuke003/",
            "url": "http://example.com/2023/02/07/niuke003/",
            "title": "JZ6 从尾到头打印链表",
            "date_published": "2023-02-07T10:21:41.000Z",
            "content_html": "<h2 id=\"JZ6-从尾到头打印链表\"><a href=\"#JZ6-从尾到头打印链表\" class=\"headerlink\" title=\"JZ6 从尾到头打印链表\"></a><strong>JZ6</strong> <strong>从尾到头打印链表</strong></h2><h2 id=\"题目链接\"><a href=\"#题目链接\" class=\"headerlink\" title=\"题目链接\"></a>题目链接</h2><p><a href=\"https://www.nowcoder.com/practice/d0267f7f55b3412ba93bd35cfa8e8035?tpId=265&tqId=39210&rp=1&ru=/exam/oj/ta&qru=/exam/oj/ta&sourceUrl=/exam/oj/ta?page=1&tpId=13&type=265&difficulty=undefined&judgeStatus=undefined&tags=&title=\">从尾到头打印链表_牛客题霸_牛客网 (nowcoder.com)</a></p>\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">*  struct ListNode &#123;</span><br><span class=\"hljs-comment\">*        int val;</span><br><span class=\"hljs-comment\">*        struct ListNode *next;</span><br><span class=\"hljs-comment\">*        ListNode(int x) :</span><br><span class=\"hljs-comment\">*              val(x), next(NULL) &#123;</span><br><span class=\"hljs-comment\">*        &#125;</span><br><span class=\"hljs-comment\">*  &#125;;</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> &#123;</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-function\">vector&lt;<span class=\"hljs-keyword\">int</span>&gt; <span class=\"hljs-title\">printListFromTailToHead</span><span class=\"hljs-params\">(ListNode* head)</span> </span>&#123;<br>        vector&lt;<span class=\"hljs-keyword\">int</span>&gt; s;<br>        <span class=\"hljs-keyword\">while</span> (head!=<span class=\"hljs-literal\">NULL</span>) &#123;<br>            s.<span class=\"hljs-built_in\">insert</span>(s.<span class=\"hljs-built_in\">begin</span>(),head-&gt;val);\t\t\t\t<span class=\"hljs-comment\">//利用迭代器头插</span><br>            head=head-&gt;next;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> s;<br>    &#125;<br>&#125;;<br><br></code></pre></div></td></tr></table></figure>\n\n",
            "tags": [
                "STL",
                "牛客"
            ]
        },
        {
            "id": "http://example.com/2023/02/07/niuke002/",
            "url": "http://example.com/2023/02/07/niuke002/",
            "title": "JZ5 替换空格",
            "date_published": "2023-02-07T10:05:25.000Z",
            "content_html": "<h2 id=\"JZ5-替换空格\"><a href=\"#JZ5-替换空格\" class=\"headerlink\" title=\"JZ5 替换空格\"></a><strong>JZ5</strong> <strong>替换空格</strong></h2><h2 id=\"题目链接\"><a href=\"#题目链接\" class=\"headerlink\" title=\"题目链接\"></a>题目链接</h2><p><a href=\"https://www.nowcoder.com/practice/0e26e5551f2b489b9f58bc83aa4b6c68?tpId=265&tqId=39209&rp=1&ru=/exam/oj/ta&qru=/exam/oj/ta&sourceUrl=/exam/oj/ta?tpId=13&difficulty=undefined&judgeStatus=undefined&tags=&title=\">替换空格_牛客题霸_牛客网 (nowcoder.com)</a></p>\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;string&gt;</span></span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> &#123;</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * </span><br><span class=\"hljs-comment\">     * @param s string字符串 </span><br><span class=\"hljs-comment\">     * @return string字符串</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-function\">string <span class=\"hljs-title\">replaceSpace</span><span class=\"hljs-params\">(string s)</span> </span>&#123;<br>        <span class=\"hljs-comment\">// write code here</span><br>        string str2 =<span class=\"hljs-string\">&quot;%20&quot;</span>;<br>        string str3;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;s.<span class=\"hljs-built_in\">size</span>(); i++) &#123;<br>            <span class=\"hljs-keyword\">if</span>(s[i]!=<span class=\"hljs-string\">&#x27; &#x27;</span>)\t\t\t\t\t<span class=\"hljs-comment\">//不是空格就插入到str3</span><br>                str3.<span class=\"hljs-built_in\">push_back</span>(s[i]);<br>            <span class=\"hljs-keyword\">else</span><br>                str3.<span class=\"hljs-built_in\">append</span>(str2);\t\t\t<span class=\"hljs-comment\">//如果是空格就把str2插入到str3</span><br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> str3;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>\n\n",
            "tags": [
                "STL",
                "牛客"
            ]
        },
        {
            "id": "http://example.com/2023/02/07/niuke001/",
            "url": "http://example.com/2023/02/07/niuke001/",
            "title": "JZ3 数组中重复的数字",
            "date_published": "2023-02-07T08:58:01.000Z",
            "content_html": "<h2 id=\"JZ3-数组中重复的数字\"><a href=\"#JZ3-数组中重复的数字\" class=\"headerlink\" title=\"JZ3 数组中重复的数字\"></a>JZ3 数组中重复的数字</h2><h2 id=\"题目链接：\"><a href=\"#题目链接：\" class=\"headerlink\" title=\"题目链接：\"></a>题目链接：</h2><p><a href=\"https://www.nowcoder.com/practice/6fe361ede7e54db1b84adc81d09d8524?tpId=265&tqId=39207&rp=1&ru=/exam/oj/ta&qru=/exam/oj/ta&sourceUrl=/exam/oj/ta?tpId=13&difficulty=undefined&judgeStatus=undefined&tags=&title=\">数组中重复的数字_牛客题霸_牛客网 (nowcoder.com)</a></p>\n<h2 id=\"完整解答：\"><a href=\"#完整解答：\" class=\"headerlink\" title=\"完整解答：\"></a>完整解答：</h2><p>set::count()是C++ STL中的内置函数，它返回元素在集合中出现的次数。由于set容器仅包含唯一元素，因此只能返回1或0。</p>\n<ul>\n<li>用法：set_name.count(element)</li>\n<li>参数：该函数接受一个强制性参数element，该元素指定要返回其计数的元素。</li>\n<li>返回值：该函数返回1或0，因为该集合仅包含唯一元素。如果设置的容器中存在该值，则返回1。如果容器中不存在它，则返回0。</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> &#123;</span><br><span class=\"hljs-keyword\">public</span>:<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * </span><br><span class=\"hljs-comment\">     * @param numbers int整型vector </span><br><span class=\"hljs-comment\">     * @return int整型</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">duplicate</span><span class=\"hljs-params\">(vector&lt;<span class=\"hljs-keyword\">int</span>&gt;&amp; numbers)</span> </span>&#123;<br>        <span class=\"hljs-comment\">// write code here</span><br>        set&lt;<span class=\"hljs-keyword\">int</span>&gt; s;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;numbers.<span class=\"hljs-built_in\">size</span>();i++)&#123;<br>            <span class=\"hljs-keyword\">if</span>(s.<span class=\"hljs-built_in\">count</span>(numbers[i])&gt;<span class=\"hljs-number\">0</span>) \t\t\t\t<span class=\"hljs-comment\">//此元素重复，则返回</span><br>                <span class=\"hljs-keyword\">return</span> numbers[i];<br>            <span class=\"hljs-keyword\">else</span><br>                s.<span class=\"hljs-built_in\">insert</span>(numbers[i]);\t\t\t\t<span class=\"hljs-comment\">//不重复则加入集合</span><br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h2><p><a href=\"https://blog.csdn.net/cmehppc/article/details/121712019\">(64条消息) 【c++】set.count()用法_杳杳捞到月亮了吗的博客-CSDN博客_c++set count</a></p>\n",
            "tags": [
                "STL",
                "牛客"
            ]
        }
    ]
}