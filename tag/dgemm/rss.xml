<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Amicoyuan • Posts by &#34;dgemm&#34; tag</title>
        <link>http://example.com</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Sun, 12 Feb 2023 21:11:56 +0800</pubDate>
        <lastBuildDate>Sun, 12 Feb 2023 21:11:56 +0800</lastBuildDate>
        <category>AVX</category>
        <category>Data Structure</category>
        <category>Set</category>
        <category>团体程序设计天梯赛</category>
        <category>STL</category>
        <category>C++</category>
        <category>Sort</category>
        <category>String</category>
        <category>Find</category>
        <category>LinkList</category>
        <category>双向链表</category>
        <category>Binary tree</category>
        <category>邻接表</category>
        <category>Vector</category>
        <category>BFS</category>
        <category>Graph</category>
        <category>模拟</category>
        <category>邻接矩阵</category>
        <category>DFS</category>
        <category>结构体</category>
        <category>贪心</category>
        <category>Double类型相等比较</category>
        <category>并查集</category>
        <category>Map</category>
        <category>Pair</category>
        <category>Linux</category>
        <category>MPI</category>
        <category>AVX2</category>
        <category>dgemm</category>
        <category>CUDA</category>
        <category>Matrix</category>
        <category>Mirror</category>
        <category>牛客</category>
        <category>Numactl</category>
        <category>OpenMP</category>
        <category>C/C++</category>
        <category>register</category>
        <category>Slurm</category>
        <category>Tensorflow</category>
        <category>性能分析工具</category>
        <category>gcov</category>
        <item>
            <guid isPermalink="true">http://example.com/2023/02/12/blislib002/</guid>
            <title>BLISlab tutoril阅读</title>
            <link>http://example.com/2023/02/12/blislib002/</link>
            <category>Linux</category>
            <category>dgemm</category>
            <pubDate>Sun, 12 Feb 2023 21:11:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;BLISlab-tutoril阅读&#34;&gt;&lt;a href=&#34;#BLISlab-tutoril阅读&#34; class=&#34;headerlink&#34; title=&#34;BLISlab tutoril阅读&#34;&gt;&lt;/a&gt;BLISlab tutoril阅读&lt;/h1&gt;&lt;h2 id=&#34;参考资料：&#34;&gt;&lt;a href=&#34;#参考资料：&#34; class=&#34;headerlink&#34; title=&#34;参考资料：&#34;&gt;&lt;/a&gt;参考资料：&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Git地址：&lt;/strong&gt;&lt;a href=&#34;https://github.com/flame/blislab&#34;&gt;https://github.com/flame/blislab&lt;/a&gt; 【代码包包含tutoril.pdf】&lt;/p&gt;
&lt;h2 id=&#34;BLISlab-A-Sandbox-for-Optimizing-GEMM&#34;&gt;&lt;a href=&#34;#BLISlab-A-Sandbox-for-Optimizing-GEMM&#34; class=&#34;headerlink&#34; title=&#34;BLISlab: A Sandbox for Optimizing GEMM&#34;&gt;&lt;/a&gt;BLISlab: A Sandbox for Optimizing GEMM&lt;/h2&gt;&lt;h2 id=&#34;Abstract&#34;&gt;&lt;a href=&#34;#Abstract&#34; class=&#34;headerlink&#34; title=&#34;Abstract&#34;&gt;&lt;/a&gt;Abstract&lt;/h2&gt;&lt;p&gt;矩阵-矩阵乘法是科学计算中非常重要的基本运算，机器学习也越来越重要。这是一个非常简单的概念，可以在典型的高中代数课程中引入，但在实践中又非常重要，它在计算机上的实现仍然是一个活跃的研究主题。本笔记描述了一组使用该操作的练习，如何在具有分层内存(多个缓存)的现代cpu上获得高性能。它是基于blas类库实例化软件(BLIS)框架下的见解，通过公开一个模仿BLIS实现的简化“沙盒”来实现的。因此，它也成为BLIS优化的“众包”工具。&lt;/p&gt;
&lt;h2 id=&#34;1-Introduction&#34;&gt;&lt;a href=&#34;#1-Introduction&#34; class=&#34;headerlink&#34; title=&#34;1.Introduction&#34;&gt;&lt;/a&gt;1.Introduction&lt;/h2&gt;&lt;p&gt;矩阵-矩阵乘法(Gemm)经常被用作一个简单的例子，以提高如何在现代处理器上优化代码的意识。原因是该操作描述简单，很难完全优化，而且具有实际意义。在本文档中，我们将带领读者了解目前CPU架构中最快实现的技术。&lt;/p&gt;
&lt;h3 id=&#34;1-1-Basic-Linear-Algebra-Subprograms-BLAS&#34;&gt;&lt;a href=&#34;#1-1-Basic-Linear-Algebra-Subprograms-BLAS&#34; class=&#34;headerlink&#34; title=&#34;1.1 Basic Linear Algebra Subprograms (BLAS)&#34;&gt;&lt;/a&gt;1.1 Basic Linear Algebra Subprograms (BLAS)&lt;/h3&gt;&lt;p&gt;基本线性代数子程序(BLAS)[10,5,4,14]为一组线性代数操作形成了一个接口，在此基础上构建了更高级别的线性代数库，如LAPACK[2]和libflame[19]。其思想是，如果有人针对给定的体系结构优化BLAS，那么所有以调用BLAS的方式编写的应用程序和库都将受益于这种优化。&lt;/p&gt;
&lt;p&gt;BLAS被分为三组:一级BLAS(矢量-矢量操作)、二级BLAS(矩阵-矢量操作)和三级BLAS(矩阵-矩阵操作)。最后一组得益于这样一个事实:如果所有矩阵操作数的大小都是n × n，则O(n3)浮点运算对O(n)个数据执行，因此在内存层(主存、缓存和寄存器)之间移动数据的成本可以在很多次计算中平摊。因此，如果仔细执行这些操作，原则上可以实现高性能。&lt;/p&gt;
&lt;h3 id=&#34;1-2-Matrix-matrix-multiplication&#34;&gt;&lt;a href=&#34;#1-2-Matrix-matrix-multiplication&#34; class=&#34;headerlink&#34; title=&#34;1.2 Matrix-matrix multiplication&#34;&gt;&lt;/a&gt;1.2 Matrix-matrix multiplication&lt;/h3&gt;&lt;p&gt;特别地，BLAS通过(Fortran)调用支持具有双精度浮点数的Gemm:&lt;/p&gt;
&lt;figure class=&#34;highlight fortran&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs fortran&#34;&gt;dgemm( transa, transb, m, n, k alpha, A,lda, B, ldb, beta, C, ldc)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通过适当地选择转置a和转置b来计算:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/12/blislib002/image-20230212215656711.png&#34; alt=&#34;image-20230212215656711&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里C是m × n, k是“第三维”。参数dla, dlb和dlc将在本文档后面进行解释。&lt;/p&gt;
&lt;p&gt;在我们的练习中，我们考虑Gemm的简化版本:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/12/blislib002/image-20230212215836596.png&#34; alt=&#34;image-20230212215836596&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中C是m × n, A是m × k, B是k × n。如果了解如何优化dgemm的这种特殊情况，那么可以很容易地将此知识扩展到所有3级BLAS功能。&lt;/p&gt;
&lt;h3 id=&#34;1-3-High-performance-implementation&#34;&gt;&lt;a href=&#34;#1-3-High-performance-implementation&#34; class=&#34;headerlink&#34; title=&#34;1.3 High-performance implementation&#34;&gt;&lt;/a&gt;1.3 High-performance implementation&lt;/h3&gt;&lt;p&gt;高性能实现的复杂性使得BLAS(尤其是Gemm)的实现通常都是由默默无闻的专家来完成的，这些专家为硬件供应商开发数字库，例如IBM的ESSL、Intel的MKL、Cray的LibSci和AMD的ACML库。这些库通常是用汇编代码编写的(至少是部分)，并且针对特定的处理器高度专门化。&lt;/p&gt;
&lt;p&gt;一篇关键论文[1]展示了“算法和体系结构”方法如何携手设计ar体系结构、编译器和算法，使BLAS能够用高级语言(Fortan)为IBM Power体系结构编写，并解释了在这些处理器上实现高性能的复杂性。便携式高性能ANSI C (PHiPAC)[3]项目随后提供了用C编写高性能代码的指南，并建议如何自动生成和优化以这种方式编写的Gemm。Au tomatatically tuning Linear Algebra Software (ATLAS)[17,18]建立在这些见解的基础上，使BLAS库的自动调优和自动生成成为主流。&lt;/p&gt;
&lt;p&gt;在本文档的一部分中，我们讨论了有关该主题的最新论文，包括引入了实施Gemm[6]的Goto方法和该方法[16]的BLIS重构的论文，以及其他更直接相关的论文。&lt;/p&gt;
&lt;h3 id=&#34;1-4-Other-similar-exercises&#34;&gt;&lt;a href=&#34;#1-4-Other-similar-exercises&#34; class=&#34;headerlink&#34; title=&#34;1.4 Other similar exercises&#34;&gt;&lt;/a&gt;1.4 Other similar exercises&lt;/h3&gt;&lt;p&gt;还有一些人基于Gemm组合了练习。与本文相关的最新成果有:乌尔姆大学Michael Lehn所作的“优化微内核:从纯C到SSE”，以及我们自己整理的关于“优化微内核”的维基。&lt;/p&gt;
&lt;h3 id=&#34;1-5-We-need-you&#34;&gt;&lt;a href=&#34;#1-5-We-need-you&#34; class=&#34;headerlink&#34; title=&#34;1.5 We need you!&#34;&gt;&lt;/a&gt;1.5 We need you!&lt;/h3&gt;&lt;p&gt;本文的目的是指导您实现Gemm的高性能实现。我们的别有用心是，用于实现BLAS的BLIS框架需要针对各种cpu高度优化的所谓微内核。在教你基本技巧的过程中，我们希望找到“那个人”将贡献最好的微内核。就把它当做我们版的高性能计算机达人秀吧。虽然我们在描述中关注的是Intel Haswell架构的优化，但是设置可以很容易地修改，从而帮助您(和我们)优化其他cpu。事实上，BLIS本身支持的体系结构包括AMD和Intel的x86处理器，IBM的Power处理器，ARM处理器和德州仪器的DSP处理器[15,12,8]。&lt;/p&gt;
&lt;h2 id=&#34;2-Step-1-The-Basics&#34;&gt;&lt;a href=&#34;#2-Step-1-The-Basics&#34; class=&#34;headerlink&#34; title=&#34;2 Step 1: The Basics&#34;&gt;&lt;/a&gt;2 Step 1: The Basics&lt;/h2&gt;&lt;h3 id=&#34;2-1-Simple-matrix-matrix-multiplication&#34;&gt;&lt;a href=&#34;#2-1-Simple-matrix-matrix-multiplication&#34; class=&#34;headerlink&#34; title=&#34;2.1 Simple matrix-matrix multiplication&#34;&gt;&lt;/a&gt;2.1 Simple matrix-matrix multiplication&lt;/h3&gt;&lt;p&gt;在我们的讨论中，我们将考虑计算：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/12/blislib002/image-20230213165803939.png&#34; alt=&#34;image-20230213165803939&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/12/blislib002/image-20230213165826084.png&#34; alt=&#34;image-20230213165826084&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，A、B、C分别为m × k、k × n、m × n矩阵。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/12/blislib002/image-20230213165920897.png&#34; alt=&#34;image-20230213165920897&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果A、B和C存储在二维数组A、B和C中，下面的伪代码计算C:&amp;#x3D;&lt;br&gt;AB + C:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/12/blislib002/image-20230213170125083.png&#34; alt=&#34;image-20230213170125083&#34;&gt;&lt;/p&gt;
&lt;p&gt;分别计算乘法和加法，计算需要2mnk个浮点运算(flop)。&lt;/p&gt;
&lt;h3 id=&#34;2-2-Setup&#34;&gt;&lt;a href=&#34;#2-2-Setup&#34; class=&#34;headerlink&#34; title=&#34;2.2 Setup&#34;&gt;&lt;/a&gt;2.2 Setup&lt;/h3&gt;&lt;p&gt;为了让您高效地学习如何高效地进行计算，您可以在启动项目时准备好大部分基础设施。我们已经构造了子目录step1，有点像实现真正库might的项目。对于我们的目的来说，这可能是多余的，但是如何构建软件项目是一项值得学习的有用技能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/12/blislib002/image-20230214173819349.png&#34; alt=&#34;image-20230214173819349&#34;&gt;&lt;/p&gt;
&lt;p&gt;考虑图4，它演示了子目录step1的目录结构:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;README&lt;/strong&gt;是一个描述目录内容以及如何编译和执行代码的文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;source .sh&lt;/strong&gt;配置环境变量的文件。在那个文件中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BLISLAB USE INTEL&lt;/strong&gt;设置是否使用INTEL编译器(true)或GNU编译器(false)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BLISLAB USE BLAS&lt;/strong&gt;指示您的参考dgemm是否使用外部BLAS库实现(如果您的机器上安装了这样的BLAS库，则为true)，还是简单的三重循环实现(false)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;COMPILER OPT LEVEL&lt;/strong&gt;设置GNU或Intel编译器的优化级别(O0, O1, O2, O3)。&lt;br&gt;(请注意，例如，O3由大写字母“O”和数字“3”组成。)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OMP NUM THREADS&lt;/strong&gt; and &lt;strong&gt;BLISLAB IC NT&lt;/strong&gt;设置用于并行版本的线程数&lt;br&gt;代码。对于第1步，将它们都设置为1。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;dgemm&lt;/strong&gt;是实现dgemm的例程存在的子目录。在其中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bl_dgemm_ref.c&lt;/strong&gt;包含例程&lt;strong&gt;dgemm ref&lt;/strong&gt;，它是dgemm的一个简单实现，如果&lt;strong&gt;BLISLAB_use_BLAS &amp;#x3D; false&lt;/strong&gt;，您将使用它来检查实现的正确性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;my_dgemm.c&lt;/strong&gt;包含例程&lt;strong&gt;dgemm&lt;/strong&gt;，它最初是dgemm的一个简单实现，您将优化它作为掌握如何优化gemm的第一步的一部分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bl_dgemm_util.c&lt;/strong&gt;包含稍后会派上用场的实用程序例程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;include&lt;/strong&gt;这个目录包含包含各种宏定义和其他头信息的文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;lib&lt;/strong&gt;此目录将保存由您实现的源文件(libblislab. lib)生成的库。libblislab.a)您还可以在此目录中安装参考库(例如OpenBLAS)以比较性能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;test&lt;/strong&gt; 这个目录包含“测试驱动程序”和各种实现的正确性&amp;#x2F;性能检查脚本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;test_bl_demm .c&lt;/strong&gt;包含测试例程bl_demm的“测试驱动程序”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;test_bl_dgemm.x&lt;/strong&gt;是&lt;strong&gt;test_bl_dgemm.c&lt;/strong&gt;的可执行文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Run_bl_dgemm.sh&lt;/strong&gt;包含一个bash脚本，用于收集性能结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;tacc_run_bl_dgemm.sh&lt;/strong&gt; contains a &lt;strong&gt;SLURM&lt;/strong&gt; script for you to (optionally) submit the job to the Texas Advanced Computing Center (TACC) machines if you have an account there.&lt;/p&gt;
&lt;h3 id=&#34;2-3-Getting-started&#34;&gt;&lt;a href=&#34;#2-3-Getting-started&#34; class=&#34;headerlink&#34; title=&#34;2.3 Getting started&#34;&gt;&lt;/a&gt;2.3 Getting started&lt;/h3&gt;&lt;p&gt;我们希望您从my_dgemm.c中的实现开始，并通过应用各种标准优化技术对其进行优化。该文件中的初始实现是具有图2中给出的三个循环的简单实现。首先要注意的是二维数组如何以所谓的列-主序映射到内存。这种选择的原因是最初的BLAS假定数组的列主存储，因为该接口首先是为Fortran用户提供的。检查&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/12/blislib002/image-20230214185803699.png&#34; alt=&#34;image-20230214185803699&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们注意到，每个操作数都是一个宏。考虑文件的早期&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/12/blislib002/image-20230214185849594.png&#34; alt=&#34;image-20230214185849594&#34;&gt;&lt;/p&gt;
&lt;p&gt;地址C处的线性数组用于存储元素Ci,j，因此i,j元素被映射到位置j * ldc + i。查看它的方法是C的每一列都是连续存储的。但是，可以把矩阵C看作是嵌入在一个更大的数组中，该数组有ldc行，因此访问一行就意味着跨ldc遍历数组C。二维数组C的前维数通常是指这个较大数组的行维数，因此变量ldc (C的前维数)。下图说明了这三个矩阵:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/12/blislib002/image-20230214190409172.png&#34; alt=&#34;image-20230214190409172&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中箭头表示列是连续存储的。&lt;/p&gt;
&lt;h4 id=&#34;2-3-1-Configure-the-default-implementation&#34;&gt;&lt;a href=&#34;#2-3-1-Configure-the-default-implementation&#34; class=&#34;headerlink&#34; title=&#34;2.3.1 Configure the default implementation&#34;&gt;&lt;/a&gt;2.3.1 Configure the default implementation&lt;/h4&gt;&lt;p&gt;默认情况下，练习编译并链接到Intel的icc编译器，该编译器将对代码应用编译器优化(O3级)。您需要通过以下命令设置环境变量:&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;source sourceme.sh&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在终端中，您将看到输出:&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;BLISLAB_USE_INTEL = TRUE&lt;br&gt;COMPILER_OPT_LEVEL = O3&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/02/02/blislab/</guid>
            <title>BLISlab dgemm优化</title>
            <link>http://example.com/2023/02/02/blislab/</link>
            <category>Linux</category>
            <category>dgemm</category>
            <pubDate>Thu, 02 Feb 2023 14:38:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;BLISlab-dgemm优化&#34;&gt;&lt;a href=&#34;#BLISlab-dgemm优化&#34; class=&#34;headerlink&#34; title=&#34;BLISlab dgemm优化&#34;&gt;&lt;/a&gt;BLISlab dgemm优化&lt;/h1&gt;&lt;h2 id=&#34;参考资料：&#34;&gt;&lt;a href=&#34;#参考资料：&#34; class=&#34;headerlink&#34; title=&#34;参考资料：&#34;&gt;&lt;/a&gt;参考资料：&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Git地址：&lt;/strong&gt;&lt;a href=&#34;https://github.com/flame/blislab&#34;&gt;https://github.com/flame/blislab&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;视频教程：&lt;/strong&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1c94y117Uw?vd_source=3ae32e36058f58c5b85935fca9b77797%E3%80%90%E6%BE%8E%E5%B3%B0%E7%A7%91%E6%8A%80-%E5%BC%A0%E5%85%88%E8%BD%B6%E8%80%81%E5%B8%88%E3%80%91&#34;&gt;https://www.bilibili.com/video/BV1c94y117Uw?vd_source=3ae32e36058f58c5b85935fca9b77797【澎峰科技-张先轶老师】&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;阅读&lt;/strong&gt;：tutorial.pdf【位于代码包中】&lt;/p&gt;
&lt;h2 id=&#34;Step0&#34;&gt;&lt;a href=&#34;#Step0&#34; class=&#34;headerlink&#34; title=&#34;Step0&#34;&gt;&lt;/a&gt;Step0&lt;/h2&gt;&lt;h3 id=&#34;1-克隆项目到本地&#34;&gt;&lt;a href=&#34;#1-克隆项目到本地&#34; class=&#34;headerlink&#34; title=&#34;1.克隆项目到本地&#34;&gt;&lt;/a&gt;1.克隆项目到本地&lt;/h3&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;git clone https://github.com/flame/blislab.git&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-代码结构&#34;&gt;&lt;a href=&#34;#2-代码结构&#34; class=&#34;headerlink&#34; title=&#34;2.代码结构&#34;&gt;&lt;/a&gt;2.代码结构&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202155728203.png&#34; alt=&#34;image-20230202155728203&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-编译环境&#34;&gt;&lt;a href=&#34;#3-编译环境&#34; class=&#34;headerlink&#34; title=&#34;3.编译环境&#34;&gt;&lt;/a&gt;3.编译环境&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202155820411.png&#34; alt=&#34;image-20230202155820411&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-运行环境配置脚本&#34;&gt;&lt;a href=&#34;#4-运行环境配置脚本&#34; class=&#34;headerlink&#34; title=&#34;4.运行环境配置脚本&#34;&gt;&lt;/a&gt;4.运行环境配置脚本&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202160027957.png&#34; alt=&#34;image-20230202160027957&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;[root@hadoop1 step0]# source ./sourceme.sh &lt;br&gt;BLISLAB_DIR = .&lt;br&gt;BLISLAB_USE_INTEL = false&lt;br&gt;BLISLAB_USE_BLAS = false&lt;br&gt;COMPILER_OPT_LEVEL = O3&lt;br&gt;BLAS_DIR = /u/jianyu/lib/openblas&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;5-Makefile&#34;&gt;&lt;a href=&#34;#5-Makefile&#34; class=&#34;headerlink&#34; title=&#34;5.Makefile&#34;&gt;&lt;/a&gt;5.Makefile&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202160244490.png&#34; alt=&#34;image-20230202160244490&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;[root@hadoop1 step0]# make&lt;br&gt;gcc -O3 -march=core-avx2 -fPIC -c dgemm/my_dgemm.c -o dgemm/my_dgemm.o -I./include -I./kernels -I/u/jianyu/lib/openblas/include&lt;br&gt;gcc -O3 -march=core-avx2 -fPIC -c dgemm/bl_dgemm_ref.c -o dgemm/bl_dgemm_ref.o -I./include -I./kernels -I/u/jianyu/lib/openblas/include&lt;br&gt;gcc -O3 -march=core-avx2 -fPIC -c dgemm/bl_dgemm_util.c -o dgemm/bl_dgemm_util.o -I./include -I./kernels -I/u/jianyu/lib/openblas/include&lt;br&gt;ar cr lib/libblislab.a dgemm/my_dgemm.o dgemm/bl_dgemm_ref.o dgemm/bl_dgemm_util.o    &lt;br&gt;ranlib lib/libblislab.a&lt;br&gt;gcc -O3 -march=core-avx2 -fPIC -shared -o lib/libblislab.so dgemm/my_dgemm.o dgemm/bl_dgemm_ref.o dgemm/bl_dgemm_util.o     ./lib/libblislab.a -lpthread -lm -lrt&lt;br&gt;cd ./test &amp;amp;&amp;amp; make &amp;amp;&amp;amp; cd . -I./include -I./kernels -I/u/jianyu/lib/openblas/include&lt;br&gt;make[1]: 进入目录“/root/blislab/step0/test”&lt;br&gt;gcc -O3 -march=core-avx2 -fPIC test_bl_dgemm.c -o test_bl_dgemm.x -I../include -I../kernels -I/u/jianyu/lib/openblas/include ../lib/libblislab.a -lpthread -lm -lrt&lt;br&gt;make[1]: 离开目录“/root/blislab/step0/test”&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;6-make-gnu-inc&#34;&gt;&lt;a href=&#34;#6-make-gnu-inc&#34; class=&#34;headerlink&#34; title=&#34;6.make.gnu.inc&#34;&gt;&lt;/a&gt;6.make.gnu.inc&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202160608401.png&#34; alt=&#34;image-20230202160608401&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;7-ref参考实现是否调用BLAS&#34;&gt;&lt;a href=&#34;#7-ref参考实现是否调用BLAS&#34; class=&#34;headerlink&#34; title=&#34;7.ref参考实现是否调用BLAS&#34;&gt;&lt;/a&gt;7.ref参考实现是否调用BLAS&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202160904158.png&#34; alt=&#34;image-20230202160904158&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;8-my-dgemm-c&#34;&gt;&lt;a href=&#34;#8-my-dgemm-c&#34; class=&#34;headerlink&#34; title=&#34;8.my_dgemm.c&#34;&gt;&lt;/a&gt;8.my_dgemm.c&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202160939940.png&#34; alt=&#34;image-20230202160939940&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;9-相关数据变量含义&#34;&gt;&lt;a href=&#34;#9-相关数据变量含义&#34; class=&#34;headerlink&#34; title=&#34;9.相关数据变量含义&#34;&gt;&lt;/a&gt;9.相关数据变量含义&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202161055971.png&#34; alt=&#34;image-20230202161055971&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;10-代码采用列主元&#34;&gt;&lt;a href=&#34;#10-代码采用列主元&#34; class=&#34;headerlink&#34; title=&#34;10.代码采用列主元&#34;&gt;&lt;/a&gt;10.代码采用列主元&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202161219553.png&#34; alt=&#34;image-20230202161219553&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;11-dgemm使用脚本测试&#34;&gt;&lt;a href=&#34;#11-dgemm使用脚本测试&#34; class=&#34;headerlink&#34; title=&#34;11.dgemm使用脚本测试&#34;&gt;&lt;/a&gt;11.dgemm使用脚本测试&lt;/h3&gt;&lt;p&gt;Test目录下&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;[root@hadoop1 test]# ./run_bl_dgemm.sh &lt;br&gt;result=[&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;m	%n	%k	%MY_GFLOPS	%REF_GFLOPS&lt;/span&gt;&lt;br&gt;   16	    16	    16	  7.35	  1.93&lt;br&gt;   32	    32	    32	  7.88	  1.29&lt;br&gt;   48	    48	    48	  9.81	  1.17&lt;br&gt;   64	    64	    64	  8.98	  1.20&lt;br&gt;   80	    80	    80	  9.59	  1.11&lt;br&gt;   96	    96	    96	  7.74	  1.08&lt;br&gt;  112	   112	   112	  8.32	  0.95&lt;br&gt;  128	   128	   128	  7.74	  1.04&lt;br&gt;  144	   144	   144	  7.39	  0.99&lt;br&gt;  160	   160	   160	  7.13	  1.06&lt;br&gt;  176	   176	   176	  7.58	  1.06&lt;br&gt;  192	   192	   192	  7.73	  0.98&lt;br&gt;  208	   208	   208	  7.29	  1.01&lt;br&gt;  224	   224	   224	  7.90	  0.97&lt;br&gt;  240	   240	   240	  7.61	  1.00&lt;br&gt;  256	   256	   256	  6.72	  0.96&lt;br&gt;  272	   272	   272	  7.51	  0.99&lt;br&gt;  288	   288	   288	  7.39	  0.99&lt;br&gt;  304	   304	   304	  7.84	  0.99&lt;br&gt;  320	   320	   320	  7.61	  0.97&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//run_bl_dgemm.sh&lt;/span&gt;&lt;br&gt;#!/bin/bash&lt;br&gt;&lt;br&gt;#For Mac OS only&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;export&lt;/span&gt; DYLD_LIBRARY_PATH=/opt/intel/lib:/opt/intel/mkl/lib&lt;br&gt;&lt;br&gt;#Single Thread&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;export&lt;/span&gt; KMP_AFFINITY=compact  #Rule to bind core to thread &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; OMP thread with Intel compiler &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; parallel version&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;export&lt;/span&gt; OMP_NUM_THREADS=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;     #Set OMP number of threads &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; parallel version&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;export&lt;/span&gt; BLISLAB_IC_NT=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;       #Set BLISLAB number of threads &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; parallel version&lt;br&gt;k_start=&lt;span class=&#34;hljs-number&#34;&gt;16&lt;/span&gt;						&lt;span class=&#34;hljs-comment&#34;&gt;//起始大小		&lt;/span&gt;&lt;br&gt;k_end=&lt;span class=&#34;hljs-number&#34;&gt;1024&lt;/span&gt;						&lt;span class=&#34;hljs-comment&#34;&gt;//结束大小&lt;/span&gt;&lt;br&gt;k_blocksize=&lt;span class=&#34;hljs-number&#34;&gt;16&lt;/span&gt;					&lt;span class=&#34;hljs-comment&#34;&gt;//步长&lt;/span&gt;&lt;br&gt;echo &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;result=[&amp;quot;&lt;/span&gt;&lt;br&gt;echo -e &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%m\t%n\t%k\t%MY_GFLOPS\t%REF_GFLOPS&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (( k=k_start; k&amp;lt;=k_end; k+=k_blocksize ))&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;do&lt;/span&gt;&lt;br&gt;    ./test_bl_dgemm.x     $k $k $k &lt;br&gt;done&lt;br&gt;echo &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;];&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;12-dgemm手动指定参数测试&#34;&gt;&lt;a href=&#34;#12-dgemm手动指定参数测试&#34; class=&#34;headerlink&#34; title=&#34;12.dgemm手动指定参数测试&#34;&gt;&lt;/a&gt;12.dgemm手动指定参数测试&lt;/h3&gt;&lt;p&gt;Test目录下&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;[root@hadoop1 test]# ./test_bl_dgemm.x &lt;span class=&#34;hljs-number&#34;&gt;256&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;256&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;256&lt;/span&gt; &lt;br&gt;  &lt;span class=&#34;hljs-number&#34;&gt;256&lt;/span&gt;	   &lt;span class=&#34;hljs-number&#34;&gt;256&lt;/span&gt;	   &lt;span class=&#34;hljs-number&#34;&gt;256&lt;/span&gt;	  &lt;span class=&#34;hljs-number&#34;&gt;5.00&lt;/span&gt;	  &lt;span class=&#34;hljs-number&#34;&gt;0.84&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;[root@hadoop1 test]# ./test_bl_dgemm.x &lt;span class=&#34;hljs-number&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;128&lt;/span&gt;&lt;br&gt;   &lt;span class=&#34;hljs-number&#34;&gt;16&lt;/span&gt;	    &lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;	   &lt;span class=&#34;hljs-number&#34;&gt;128&lt;/span&gt;	  &lt;span class=&#34;hljs-number&#34;&gt;8.77&lt;/span&gt;	  &lt;span class=&#34;hljs-number&#34;&gt;1.02&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;这里要注意哪个代表m,n,k?&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt; *argv[] )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;    m, n, k; &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; ( argc != &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; ) &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;( &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Error: require 3 arguments, but only %d provided.\n&amp;quot;&lt;/span&gt;, argc - &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;        &lt;span class=&#34;hljs-built_in&#34;&gt;exit&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;sscanf&lt;/span&gt;( argv[ &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ], &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;m );&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;sscanf&lt;/span&gt;( argv[ &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ], &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;n );&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;sscanf&lt;/span&gt;( argv[ &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ], &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;k );&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;test_bl_dgemm&lt;/span&gt;( m, n, k );&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;13-计时区域&#34;&gt;&lt;a href=&#34;#13-计时区域&#34; class=&#34;headerlink&#34; title=&#34;13.计时区域&#34;&gt;&lt;/a&gt;&lt;strong&gt;13.计时区域&lt;/strong&gt;&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; nrepeats; i ++ ) &amp;#123;&lt;br&gt;        ref_beg = &lt;span class=&#34;hljs-built_in&#34;&gt;bl_clock&lt;/span&gt;();								&lt;span class=&#34;hljs-comment&#34;&gt;//blislib提供的封装&lt;/span&gt;&lt;br&gt;        &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-built_in&#34;&gt;bl_dgemm_ref&lt;/span&gt;(&lt;br&gt;                    m,&lt;br&gt;                    n,&lt;br&gt;                    k,&lt;br&gt;                    A,&lt;br&gt;                    lda,&lt;br&gt;                    B,&lt;br&gt;                    ldb,&lt;br&gt;                    C_ref,&lt;br&gt;                    ldc_ref&lt;br&gt;                    );&lt;br&gt;        &amp;#125;&lt;br&gt;        ref_time = &lt;span class=&#34;hljs-built_in&#34;&gt;bl_clock&lt;/span&gt;() - ref_beg;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; ( i == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) &amp;#123;&lt;br&gt;            ref_rectime = ref_time;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;br&gt;            ref_rectime = ref_time &amp;lt; ref_rectime ? ref_time : ref_rectime;					&lt;span class=&#34;hljs-comment&#34;&gt;//多次计时取最优&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;14-正确性检验&#34;&gt;&lt;a href=&#34;#14-正确性检验&#34; class=&#34;headerlink&#34; title=&#34;14.正确性检验&#34;&gt;&lt;/a&gt;14.正确性检验&lt;/h3&gt;&lt;p&gt;Test目录下Test_bl_gemm.c&lt;/p&gt;
&lt;p&gt;结果比较：通过比较你的优化计算结果和参考计算结果对比&lt;/p&gt;
&lt;p&gt;Gflops的计算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有效浮点次数 &amp;#x3D; 2*m*n*k&lt;/li&gt;
&lt;li&gt;Gflops &amp;#x3D; 有效浮点次数 &amp;#x2F; 时间&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;computeError&lt;/span&gt;(&lt;br&gt;        ldc,&lt;br&gt;        ldc_ref,&lt;br&gt;        m,&lt;br&gt;        n,&lt;br&gt;        C,&lt;br&gt;        C_ref&lt;br&gt;        );&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// Compute overall floating point operations.&lt;/span&gt;&lt;br&gt;flops = ( m * n / ( &lt;span class=&#34;hljs-number&#34;&gt;1000.0&lt;/span&gt; * &lt;span class=&#34;hljs-number&#34;&gt;1000.0&lt;/span&gt; * &lt;span class=&#34;hljs-number&#34;&gt;1000.0&lt;/span&gt; ) ) * ( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; * k );&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;( &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%5d\t %5d\t %5d\t %5.2lf\t %5.2lf\n&amp;quot;&lt;/span&gt;, &lt;br&gt;        m, n, k, flops / bl_dgemm_rectime, flops / ref_rectime );&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;15-课后作业&#34;&gt;&lt;a href=&#34;#15-课后作业&#34; class=&#34;headerlink&#34; title=&#34;15.课后作业&#34;&gt;&lt;/a&gt;15.课后作业&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;perf工具的用法&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2022/01/19/tool003/&#34;&gt;perf-系统级性能分析工具 - Amicoyuan (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分析不同的j,p,i循环顺序的性能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;原因cache miss造成的差异&lt;/p&gt;
&lt;h2 id=&#34;Step1&#34;&gt;&lt;a href=&#34;#Step1&#34; class=&#34;headerlink&#34; title=&#34;Step1&#34;&gt;&lt;/a&gt;Step1&lt;/h2&gt;&lt;h3 id=&#34;1-与Step0比较&#34;&gt;&lt;a href=&#34;#1-与Step0比较&#34; class=&#34;headerlink&#34; title=&#34;1.与Step0比较&#34;&gt;&lt;/a&gt;1.与Step0比较&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;左边是Step1右边是Step0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202165659964.png&#34; alt=&#34;image-20230202165659964&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-基本分块&#34;&gt;&lt;a href=&#34;#2-基本分块&#34; class=&#34;headerlink&#34; title=&#34;2.基本分块&#34;&gt;&lt;/a&gt;2.基本分块&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202170723811.png&#34; alt=&#34;image-20230202170723811&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-反汇编&#34;&gt;&lt;a href=&#34;#3-反汇编&#34; class=&#34;headerlink&#34; title=&#34;3.反汇编&#34;&gt;&lt;/a&gt;3.反汇编&lt;/h3&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;[root@hadoop1 dgemm]# objdump -d ./my_dgemm.o &amp;gt; my_dgemm.S&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs assembly&#34;&gt;./my_dgemm.o：     文件格式 elf64-x86-64&lt;br&gt;&lt;br&gt;&lt;br&gt;Disassembly of section .text:&lt;br&gt;&lt;br&gt;0000000000000000 &amp;lt;AddDot&amp;gt;:&lt;br&gt;   0:	85 ff                	test   %edi,%edi&lt;br&gt;   2:	7e 2e                	jle    32 &amp;lt;AddDot+0x32&amp;gt;&lt;br&gt;   4:	48 63 d2             	movslq %edx,%rdx&lt;br&gt;   7:	c4 c1 7b 10 01       	vmovsd (%r9),%xmm0&lt;br&gt;   c:	31 c0                	xor    %eax,%eax&lt;br&gt;   e:	48 c1 e2 03          	shl    $0x3,%rdx&lt;br&gt;  12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)&lt;br&gt;  18:	c5 fb 10 0e          	vmovsd (%rsi),%xmm1&lt;br&gt;  1c:	48 01 d6             	add    %rdx,%rsi&lt;br&gt;  1f:	c4 e2 f1 b9 04 c1    	vfmadd231sd (%rcx,%rax,8),%xmm1,%xmm0&lt;br&gt;  25:	48 83 c0 01          	add    $0x1,%rax&lt;br&gt;  29:	c4 c1 7b 11 01       	vmovsd %xmm0,(%r9)&lt;br&gt;  2e:	39 c7                	cmp    %eax,%edi&lt;br&gt;  30:	7f e6                	jg     18 &amp;lt;AddDot+0x18&amp;gt;&lt;br&gt;  32:	f3 c3                	repz retq &lt;br&gt;  34:	66 90                	xchg   %ax,%ax&lt;br&gt;  36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)&lt;br&gt;  3d:	00 00 00 &lt;br&gt;&lt;br&gt;0000000000000040 &amp;lt;AddDot_MRxNR&amp;gt;:&lt;br&gt;  40:	e9 00 00 00 00       	jmpq   45 &amp;lt;AddDot_MRxNR+0x5&amp;gt;&lt;br&gt;  45:	90                   	nop&lt;br&gt;  46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)&lt;br&gt;  4d:	00 00 00 &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-反汇编（-fPIC引入的差异）&#34;&gt;&lt;a href=&#34;#4-反汇编（-fPIC引入的差异）&#34; class=&#34;headerlink&#34; title=&#34;4.反汇编（-fPIC引入的差异）&#34;&gt;&lt;/a&gt;4.反汇编（-fPIC引入的差异）&lt;/h3&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;[root@hadoop1 test]# objdump -d ./test_bl_dgemm.x  &amp;gt; test.S&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202171234007.png&#34; alt=&#34;image-20230202171234007&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;5-Gcc生成汇编&#34;&gt;&lt;a href=&#34;#5-Gcc生成汇编&#34; class=&#34;headerlink&#34; title=&#34;5.Gcc生成汇编&#34;&gt;&lt;/a&gt;5.Gcc生成汇编&lt;/h3&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;[root@hadoop1 step1]# gcc -O3 -march=core-avx2 -fPIC -S dgemm/my_dgemm.c -o dgemm/my_dgemm1.S -I./include -I./kernels -I/u/jianyu/lib/openblas/include&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202171758087.png&#34; alt=&#34;image-20230202171758087&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;6-Step0与Step1比较&#34;&gt;&lt;a href=&#34;#6-Step0与Step1比较&#34; class=&#34;headerlink&#34; title=&#34;6.Step0与Step1比较&#34;&gt;&lt;/a&gt;6.Step0与Step1比较&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202172816584.png&#34; alt=&#34;image-20230202172816584&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;7-分块，修改MR，-NR为4×4&#34;&gt;&lt;a href=&#34;#7-分块，修改MR，-NR为4×4&#34; class=&#34;headerlink&#34; title=&#34;7.分块，修改MR， NR为4×4&#34;&gt;&lt;/a&gt;7.分块，修改MR， NR为4×4&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202173132817.png&#34; alt=&#34;image-20230202173132817&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;8-分块（2×2）&#34;&gt;&lt;a href=&#34;#8-分块（2×2）&#34; class=&#34;headerlink&#34; title=&#34;8.分块（2×2）&#34;&gt;&lt;/a&gt;8.分块（2×2）&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; AddDot_2×&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *A, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *B, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *C,&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc ) &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; C00, C01, C10, C11;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;    C00=&lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;    C01=&lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;    C10=&lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;    C11=&lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ;p &amp;lt; k; p++)&lt;br&gt;    &amp;#123;&lt;br&gt;        C00 += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);&lt;br&gt;        C01 += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;        C10 += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);&lt;br&gt;        C11 += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) +=C00;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) +=C01;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) +=C10;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) +=C11;&lt;br&gt;    &lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202173645399.png&#34; alt=&#34;image-20230202173645399&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;9-AddDot-2x2汇编代码&#34;&gt;&lt;a href=&#34;#9-AddDot-2x2汇编代码&#34; class=&#34;headerlink&#34; title=&#34;9.AddDot_2x2汇编代码&#34;&gt;&lt;/a&gt;9.AddDot_2x2汇编代码&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202191728644.png&#34; alt=&#34;image-20230202191728644&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;10-AddDot-2x2最内层循环展开&#34;&gt;&lt;a href=&#34;#10-AddDot-2x2最内层循环展开&#34; class=&#34;headerlink&#34; title=&#34;10.AddDot_2x2最内层循环展开&#34;&gt;&lt;/a&gt;10.AddDot_2x2最内层循环展开&lt;/h3&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; AddDot_2×&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *A, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *B, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *C,&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc ) &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; C00, C01, C10, C11;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;    C00=&lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;    C01=&lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;    C10=&lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;    C11=&lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ;p &amp;lt; k; p+=&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;)&lt;br&gt;    &amp;#123;&lt;br&gt;        C00 += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) + &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);&lt;br&gt;        C01 += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;        C10 += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) + &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);&lt;br&gt;        C11 += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) +=C00;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) +=C01;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) +=C10;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) +=C11;&lt;br&gt;    &lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202192033816.png&#34; alt=&#34;image-20230202192033816&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;11-AddDot-2x2汇编代码【最内层循环展开】&#34;&gt;&lt;a href=&#34;#11-AddDot-2x2汇编代码【最内层循环展开】&#34; class=&#34;headerlink&#34; title=&#34;11.AddDot_2x2汇编代码【最内层循环展开】&#34;&gt;&lt;/a&gt;11.AddDot_2x2汇编代码【最内层循环展开】&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230202192319993.png&#34; alt=&#34;image-20230202192319993&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Step2&#34;&gt;&lt;a href=&#34;#Step2&#34; class=&#34;headerlink&#34; title=&#34;Step2&#34;&gt;&lt;/a&gt;Step2&lt;/h2&gt;&lt;h3 id=&#34;1-与Step1的性能比较&#34;&gt;&lt;a href=&#34;#1-与Step1的性能比较&#34; class=&#34;headerlink&#34; title=&#34;1.与Step1的性能比较&#34;&gt;&lt;/a&gt;1.与Step1的性能比较&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206163219051.png&#34; alt=&#34;image-20230206163219051&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-优化kernel-x2F-bl-dgemm-ukr-c&#34;&gt;&lt;a href=&#34;#2-优化kernel-x2F-bl-dgemm-ukr-c&#34; class=&#34;headerlink&#34; title=&#34;2.优化kernel&amp;#x2F;bl_dgemm_ukr.c&#34;&gt;&lt;/a&gt;2.优化kernel&amp;#x2F;bl_dgemm_ukr.c&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206163713966.png&#34; alt=&#34;image-20230206163713966&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206163803615.png&#34; alt=&#34;image-20230206163803615&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-优化后性能对比&#34;&gt;&lt;a href=&#34;#3-优化后性能对比&#34; class=&#34;headerlink&#34; title=&#34;3.优化后性能对比&#34;&gt;&lt;/a&gt;3.优化后性能对比&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206163833950.png&#34; alt=&#34;image-20230206163833950&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-下降原因分析&#34;&gt;&lt;a href=&#34;#4-下降原因分析&#34; class=&#34;headerlink&#34; title=&#34;4.下降原因分析&#34;&gt;&lt;/a&gt;4.下降原因分析&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206164335213.png&#34; alt=&#34;image-20230206164335213&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206164734050.png&#34; alt=&#34;image-20230206164734050&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;5-如何进行分块&#34;&gt;&lt;a href=&#34;#5-如何进行分块&#34; class=&#34;headerlink&#34; title=&#34;5.如何进行分块&#34;&gt;&lt;/a&gt;5.如何进行分块&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206165017812.png&#34; alt=&#34;image-20230206165017812&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206165103417.png&#34; alt=&#34;image-20230206165103417&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206170050450.png&#34; alt=&#34;image-20230206170050450&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206170105998.png&#34; alt=&#34;image-20230206170105998&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206170126588.png&#34; alt=&#34;image-20230206170126588&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206170153251.png&#34; alt=&#34;image-20230206170153251&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206170226248.png&#34; alt=&#34;image-20230206170226248&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206170242872.png&#34; alt=&#34;image-20230206170242872&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206170320842.png&#34; alt=&#34;image-20230206170320842&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206170334857.png&#34; alt=&#34;image-20230206170334857&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;6-Dgemm代码&#34;&gt;&lt;a href=&#34;#6-Dgemm代码&#34; class=&#34;headerlink&#34; title=&#34;6.Dgemm代码&#34;&gt;&lt;/a&gt;6.Dgemm代码&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206171538013.png&#34; alt=&#34;image-20230206171538013&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206171556767.png&#34; alt=&#34;image-20230206171556767&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206171622104.png&#34; alt=&#34;image-20230206171622104&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206171639209.png&#34; alt=&#34;image-20230206171639209&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;7-Dgemm-macro-kenrel代码&#34;&gt;&lt;a href=&#34;#7-Dgemm-macro-kenrel代码&#34; class=&#34;headerlink&#34; title=&#34;7.Dgemm macro kenrel代码&#34;&gt;&lt;/a&gt;7.Dgemm macro kenrel代码&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206171903844.png&#34; alt=&#34;image-20230206171903844&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206171940282.png&#34; alt=&#34;image-20230206171940282&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;8-Gemm汇总&#34;&gt;&lt;a href=&#34;#8-Gemm汇总&#34; class=&#34;headerlink&#34; title=&#34;8.Gemm汇总&#34;&gt;&lt;/a&gt;8.Gemm汇总&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206172351890.png&#34; alt=&#34;image-20230206172351890&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;9-拓展&#34;&gt;&lt;a href=&#34;#9-拓展&#34; class=&#34;headerlink&#34; title=&#34;9.拓展&#34;&gt;&lt;/a&gt;9.拓展&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206172425329.png&#34; alt=&#34;image-20230206172425329&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;10-双缓冲优化&#34;&gt;&lt;a href=&#34;#10-双缓冲优化&#34; class=&#34;headerlink&#34; title=&#34;10.双缓冲优化&#34;&gt;&lt;/a&gt;10.双缓冲优化&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/02/blislab/image-20230206172846408.png&#34; alt=&#34;image-20230206172846408&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
