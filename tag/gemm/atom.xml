<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>Amicoyuan • Posts by &#34;gemm&#34; tag</title>
    <link href="http://example.com" />
    <updated>2023-02-19T09:04:23.000Z</updated>
    <category term="AVX" />
    <category term="Data Structure" />
    <category term="String" />
    <category term="Find" />
    <category term="STL" />
    <category term="C++" />
    <category term="Set" />
    <category term="团体程序设计天梯赛" />
    <category term="Sort" />
    <category term="LinkList" />
    <category term="双向链表" />
    <category term="Graph" />
    <category term="邻接表" />
    <category term="Vector" />
    <category term="Binary tree" />
    <category term="BFS" />
    <category term="模拟" />
    <category term="邻接矩阵" />
    <category term="DFS" />
    <category term="结构体" />
    <category term="贪心" />
    <category term="Double类型相等比较" />
    <category term="并查集" />
    <category term="Map" />
    <category term="Pair" />
    <category term="Linux" />
    <category term="MPI" />
    <category term="Matrix" />
    <category term="GEMM" />
    <category term="AVX2" />
    <category term="dgemm" />
    <category term="Cache" />
    <category term="Blocking" />
    <category term="CUDA" />
    <category term="LeetCode" />
    <category term="双指针" />
    <category term="Mirror" />
    <category term="牛客" />
    <category term="Numactl" />
    <category term="OpenMP" />
    <category term="C/C++" />
    <category term="register" />
    <category term="Slurm" />
    <category term="Tensorflow" />
    <category term="性能分析工具" />
    <category term="gcov" />
    <entry>
        <id>http://example.com/2023/02/19/Matrix002/</id>
        <title>矩阵乘法计算拆分展示</title>
        <link rel="alternate" href="http://example.com/2023/02/19/Matrix002/"/>
        <content type="html">&lt;h2 id=&#34;矩阵乘法计算拆分展示&#34;&gt;&lt;a href=&#34;#矩阵乘法计算拆分展示&#34; class=&#34;headerlink&#34; title=&#34;矩阵乘法计算拆分展示&#34;&gt;&lt;/a&gt;矩阵乘法计算拆分展示&lt;/h2&gt;&lt;h3 id=&#34;通用矩阵乘概念&#34;&gt;&lt;a href=&#34;#通用矩阵乘概念&#34; class=&#34;headerlink&#34; title=&#34;通用矩阵乘概念&#34;&gt;&lt;/a&gt;通用矩阵乘概念&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/19/Matrix002/image-20230219171156738.png&#34; alt=&#34;image-20230219171156738&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; i++)&amp;#123;				&lt;span class=&#34;hljs-comment&#34;&gt;//遍历C矩阵各行，其行数与A的行数相等 &lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j &amp;lt; n; j++)&amp;#123;			&lt;span class=&#34;hljs-comment&#34;&gt;//遍历C矩阵i行j列&lt;/span&gt;&lt;br&gt;        c[i][j] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p &amp;lt; k; p++)&amp;#123;		&lt;span class=&#34;hljs-comment&#34;&gt;//用p循环累加和计算C[i][j] &lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//计算区域&lt;/span&gt;&lt;br&gt;           C[i][j] += A[i][p] * B[p][j];		&lt;span class=&#34;hljs-comment&#34;&gt;//遍历A矩阵各行与B矩阵各列&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;计算拆分展示&#34;&gt;&lt;a href=&#34;#计算拆分展示&#34; class=&#34;headerlink&#34; title=&#34;计算拆分展示&#34;&gt;&lt;/a&gt;计算拆分展示&lt;/h3&gt;&lt;p&gt;图四将输出计算拆分为 &lt;strong&gt;1 × 4&lt;/strong&gt; 的小块，即将 &lt;strong&gt;N&lt;/strong&gt; 维度拆分为两部分。计算该块输出时，需要使用 &lt;strong&gt;A&lt;/strong&gt; 矩阵的1行，和 &lt;strong&gt;B&lt;/strong&gt; 矩阵的4列 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/19/Matrix002/image-20230219171904249.png&#34; alt=&#34;image-20230219171904249&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; i++)&amp;#123;				&lt;span class=&#34;hljs-comment&#34;&gt;//遍历C矩阵各行，其行数与A的行数相等 &lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j &amp;lt; n; j +=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;)&amp;#123;			&lt;span class=&#34;hljs-comment&#34;&gt;//遍历C矩阵j-j+3列&lt;/span&gt;&lt;br&gt;        c[i][j + &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        c[i][j + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        c[i][j + &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        c[i][j + &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p &amp;lt; k; p++)&amp;#123;		&lt;span class=&#34;hljs-comment&#34;&gt;//用p循环累加和计算C[i][j] &lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//计算区域&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//遍历A矩阵各行与B矩阵各列&lt;/span&gt;&lt;br&gt;           C[i][j + &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;] += A[i][p] * B[p][j + &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];    &lt;br&gt;           C[i][j + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;] += A[i][p] * B[p][j + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];&lt;br&gt;           C[i][j + &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;] += A[i][p] * B[p][j + &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;];&lt;br&gt;           C[i][j + &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;] += A[i][p] * B[p][j + &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;];&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;最内侧计算使用的矩阵&lt;strong&gt;A&lt;/strong&gt;的元素是一致的。因此可以将**A[i][p]**读取到寄存器中，从而实现4次数据复用。例如：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; temp = A[i][p];&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;一般将最内侧循环称作计算核(micro kernel)&lt;/p&gt;
&lt;p&gt;类似地，我们可以继续拆分输出&lt;strong&gt;M&lt;/strong&gt;维度，从而在内测循环中计算 &lt;strong&gt;4 × 4&lt;/strong&gt; 输出，如图五。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/19/Matrix002/image-20230219174355047.png&#34; alt=&#34;image-20230219174355047&#34;&gt;&lt;/p&gt;
&lt;p&gt;同样的，将计算核心展开，可以得到下面的伪代码。这里我们将 &lt;strong&gt;1 × 4&lt;/strong&gt; 中展示过的N维度的计算简化表示。这种拆分可看成是&lt;strong&gt;4 × 1 × 4&lt;/strong&gt;，这样A和B的访存均可复用四次。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;)&amp;#123;				&lt;span class=&#34;hljs-comment&#34;&gt;//遍历C矩阵i-i+3行，其行数与A的行数相等 &lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j &amp;lt; n; j +=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;)&amp;#123;			&lt;span class=&#34;hljs-comment&#34;&gt;//遍历C矩阵第j-j+3列&lt;/span&gt;&lt;br&gt;        c[i + &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        c[i + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        c[i + &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        c[i + &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p &amp;lt; k; p++)&amp;#123;		&lt;span class=&#34;hljs-comment&#34;&gt;//用p循环累加和计算C[i][j] &lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//计算区域&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//遍历A矩阵各行与B矩阵各列&lt;/span&gt;&lt;br&gt;           C[i + &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] += A[i + &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;][p] * B[p][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;];    &lt;br&gt;           C[i + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] += A[i + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;][p] * B[p][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;];&lt;br&gt;           C[i + &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] += A[i + &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;][p] * B[p][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;];&lt;br&gt;           C[i + &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] += A[i + &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;][p] * B[p][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;];&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;到目前为止。我们都是在输出的两个维度上展开，而整个计算还包含一个规约(Reduction)维度K。图六展示了在计算&lt;strong&gt;4 × 4&lt;/strong&gt;输出时，将维度K拆分，从而每次最内侧循环计算出输出矩阵C的&lt;strong&gt;4&amp;#x2F;K&lt;/strong&gt;的部分和。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/02/19/Matrix002/image-20230219180147184.png&#34; alt=&#34;image-20230219180147184&#34;&gt;&lt;/p&gt;
&lt;p&gt;下面展示的是这部分计算的展开伪代码，其中维度M和N已经被简写。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;)&amp;#123;				&lt;span class=&#34;hljs-comment&#34;&gt;//遍历C矩阵i-i+3行，其行数与A的行数相等 &lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j &amp;lt; n; j +=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;)&amp;#123;			&lt;span class=&#34;hljs-comment&#34;&gt;//遍历C矩阵第j-j+3列&lt;/span&gt;&lt;br&gt;        c[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        c[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        c[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        c[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p &amp;lt; k; p+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;)&amp;#123;		&lt;span class=&#34;hljs-comment&#34;&gt;//用p循环累加和计算C[i][j] &lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//计算区域&lt;/span&gt;&lt;br&gt;           C[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] += A[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][p + &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;] * B[p + &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;];    &lt;br&gt;           C[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] += A[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][p + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;] * B[p + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;];&lt;br&gt;           C[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] += A[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][p + &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;] * B[p + &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;];&lt;br&gt;           C[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;] += A[i + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;][p + &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;] * B[p + &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;][j + &lt;span class=&#34;hljs-number&#34;&gt;0.&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.3&lt;/span&gt;];&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在对M和N展开式，我们可以分别复用B和A的数据；在对K展开时，其局部使用的C的内存是一致的，那么K迭代时可以将部分和累加在寄存器中——最内层循环整个迭代一次写到C的内存中。&lt;/p&gt;
&lt;h3 id=&#34;参考资料&#34;&gt;&lt;a href=&#34;#参考资料&#34; class=&#34;headerlink&#34; title=&#34;参考资料&#34;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://zhenhuaw.me/blog/2019/gemm-optimization.html&#34;&gt;通用矩阵乘（GEMM）优化算法 | 黎明灰烬 博客 (zhenhuaw.me)&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Matrix" />
        <category term="GEMM" />
        <updated>2023-02-19T09:04:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/02/06/matrix001/</id>
        <title>矩阵乘法最基础版本</title>
        <link rel="alternate" href="http://example.com/2023/02/06/matrix001/"/>
        <content type="html">&lt;h2 id=&#34;矩阵乘法最基础版本&#34;&gt;&lt;a href=&#34;#矩阵乘法最基础版本&#34; class=&#34;headerlink&#34; title=&#34;矩阵乘法最基础版本&#34;&gt;&lt;/a&gt;矩阵乘法最基础版本&lt;/h2&gt;&lt;h3 id=&#34;数学原理示例&#34;&gt;&lt;a href=&#34;#数学原理示例&#34; class=&#34;headerlink&#34; title=&#34;数学原理示例&#34;&gt;&lt;/a&gt;数学原理示例&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2023/02/06/matrix001/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25pYW5uaWFueGk=,size_16,color_FFFFFF,t_70.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;完整代码&#34;&gt;&lt;a href=&#34;#完整代码&#34; class=&#34;headerlink&#34; title=&#34;完整代码&#34;&gt;&lt;/a&gt;完整代码&lt;/h3&gt;&lt;p&gt;用A的第i行分别和B的第j列的各个元素相乘求和，求得C的第i行j列的元素，这种算法中，B的访问是按列进行访问的，代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//m是A矩阵的行,k是A矩阵的列,n是B矩阵的列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; temp=&lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; i++)&amp;#123;				&lt;span class=&#34;hljs-comment&#34;&gt;//遍历C矩阵各行，其行数与A的行数相等 &lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j &amp;lt; n; j++)&amp;#123;			&lt;span class=&#34;hljs-comment&#34;&gt;//遍历C矩阵i行j列&lt;/span&gt;&lt;br&gt;        temp = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p &amp;lt; k; p++)&amp;#123;		&lt;span class=&#34;hljs-comment&#34;&gt;//用p循环累加和计算C[i][j] &lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//计算区域&lt;/span&gt;&lt;br&gt;            temp += A[i][p] * B[p][j];		&lt;span class=&#34;hljs-comment&#34;&gt;//遍历A矩阵各行与B矩阵各列&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;        C[i][j] = temp;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//结果C矩阵m行n列&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;参考资料&#34;&gt;&lt;a href=&#34;#参考资料&#34; class=&#34;headerlink&#34; title=&#34;参考资料&#34;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/niannianxi/article/details/104028215&#34;&gt;(64条消息) C语言实现矩阵的乘法_꧁年年曦꧂的博客-CSDN博客_c语言矩阵乘法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jb51.net/article/75750.htm&#34;&gt;C语言科学计算入门之矩阵乘法的相关计算_C 语言_脚本之家 (jb51.net)&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Matrix" />
        <category term="GEMM" />
        <updated>2023-02-06T14:00:14.000Z</updated>
    </entry>
</feed>
