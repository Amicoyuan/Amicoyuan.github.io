{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"stl\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/04/16/Algorithm029/",
            "url": "http://example.com/2022/04/16/Algorithm029/",
            "title": "STL中map的使用",
            "date_published": "2022-04-16T08:26:03.000Z",
            "content_html": "<h2 id=\"STL中map的使用\"><a href=\"#STL中map的使用\" class=\"headerlink\" title=\"STL中map的使用\"></a>STL中map的使用</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>map 是 STL 的一个关联容器，它提供一对一的数据处理能力。</p>\n<p>map 对象是<strong>模板类</strong>，需要<strong>关键字</strong>和<strong>存储对象</strong>两个模板参数：其中第一个参数称为关键字，每个关键字只能在 map 中出现一次；第二个参数称为该关键字的值。可以将关键字和存储对象理解为“{键，值}对”。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">map&lt;<span class=\"hljs-keyword\">int</span>,string&gt; mp;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"map的数据插入操作\"><a href=\"#map的数据插入操作\" class=\"headerlink\" title=\"map的数据插入操作\"></a>map的数据插入操作</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-comment\">//使用insert函数插入pair数据</span><br>mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">3</span>,<span class=\"hljs-string\">&quot;xingyuanjie&quot;</span>));<br><span class=\"hljs-comment\">//使用数组方式插入数据</span><br>mp[<span class=\"hljs-number\">2</span>]=<span class=\"hljs-string\">&quot;wangzhouyang&quot;</span>;<br></code></pre></div></td></tr></table></figure>\n\n<p><strong>说明：上面的两种方法是有区别的，用 insert 函数插入数据，涉及到集合的唯一性这个概念，即当 map 中有这个关键字时，insert 操作是不能实现数据插入的；但是数组方式能够插入数据，插入的数据会覆盖该关键字之前对应的值。</strong></p>\n<h3 id=\"map中数据的遍历\"><a href=\"#map中数据的遍历\" class=\"headerlink\" title=\"map中数据的遍历\"></a>map中数据的遍历</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">map&lt;<span class=\"hljs-keyword\">int</span>,string&gt;::iterator it;\t\t\t\t\t<span class=\"hljs-comment\">//迭代器</span><br><span class=\"hljs-keyword\">for</span> (it=mp.<span class=\"hljs-built_in\">begin</span>();it!=mp.<span class=\"hljs-built_in\">end</span>();it++) &#123;<br>    cout&lt;&lt;it-&gt;first&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;it-&gt;second&lt;&lt;endl;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"map中数据的查找\"><a href=\"#map中数据的查找\" class=\"headerlink\" title=\"map中数据的查找\"></a>map中数据的查找</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">map&lt;<span class=\"hljs-keyword\">int</span>,string&gt;::iterator it;\t\t\t\t\t<span class=\"hljs-comment\">//迭代器</span><br>it=mp.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">if</span>(it!=mp.<span class=\"hljs-built_in\">end</span>())&#123;<br>        cout &lt;&lt; <span class=\"hljs-string\">&quot;Find it, the relative value is: &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;<br>&#125;<br><span class=\"hljs-keyword\">else</span>&#123;<br>       \tcout &lt;&lt; <span class=\"hljs-string\">&quot;Can not find the relative value.&quot;</span> &lt;&lt; endl;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"map中数据的删除\"><a href=\"#map中数据的删除\" class=\"headerlink\" title=\"map中数据的删除\"></a>map中数据的删除</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">map&lt;<span class=\"hljs-keyword\">int</span>,string&gt;::iterator it;\t\t\t\t\t<span class=\"hljs-comment\">//迭代器</span><br>it = mp.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-number\">2</span>);<br>mp.<span class=\"hljs-built_in\">erase</span>(it);<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"map中数据的排序\"><a href=\"#map中数据的排序\" class=\"headerlink\" title=\"map中数据的排序\"></a>map中数据的排序</h3><p><strong>map 中的所有元素都会根据元素的键值，自动进行升序排序。</strong></p>\n<h3 id=\"完整操作\"><a href=\"#完整操作\" class=\"headerlink\" title=\"完整操作\"></a>完整操作</h3><h4 id=\"程序源代码：\"><a href=\"#程序源代码：\" class=\"headerlink\" title=\"程序源代码：\"></a>程序源代码：</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br>map&lt;<span class=\"hljs-keyword\">int</span>,string&gt; mp;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-comment\">//使用insert函数插入pair数据</span><br>    mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">3</span>,<span class=\"hljs-string\">&quot;xingyuanjie&quot;</span>));<br>    mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">&quot;shicheng&quot;</span>));<br>    mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">4</span>,<span class=\"hljs-string\">&quot;tanghaipeng&quot;</span>));<br>    mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">6</span>,<span class=\"hljs-string\">&quot;zhouyuhao&quot;</span>));<br>    mp.<span class=\"hljs-built_in\">insert</span>(pair&lt;<span class=\"hljs-keyword\">int</span>,string&gt;(<span class=\"hljs-number\">5</span>,<span class=\"hljs-string\">&quot;heqichuan&quot;</span>));<br>    <span class=\"hljs-comment\">//使用数组方式插入数据</span><br>    mp[<span class=\"hljs-number\">2</span>]=<span class=\"hljs-string\">&quot;wangzhouyang&quot;</span>;<br>    <span class=\"hljs-comment\">//map的遍历</span><br>    map&lt;<span class=\"hljs-keyword\">int</span>,string&gt;::iterator it;<br>    <span class=\"hljs-keyword\">for</span> (it=mp.<span class=\"hljs-built_in\">begin</span>();it!=mp.<span class=\"hljs-built_in\">end</span>();it++) &#123;<br>        cout&lt;&lt;it-&gt;first&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;it-&gt;second&lt;&lt;endl;<br>    &#125;<br>    <span class=\"hljs-comment\">//查找操作</span><br>    it=mp.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-number\">1</span>);<br>    <span class=\"hljs-keyword\">if</span>(it!=mp.<span class=\"hljs-built_in\">end</span>())&#123;<br>        cout &lt;&lt; <span class=\"hljs-string\">&quot;Find it, the relative value is: &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;<br>    &#125;<br>    <span class=\"hljs-keyword\">else</span> &#123;<br>        cout &lt;&lt; <span class=\"hljs-string\">&quot;Can not find the relative value.&quot;</span> &lt;&lt; endl;<br>    &#125;<br>    <span class=\"hljs-comment\">//删除操作</span><br>    it = mp.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-number\">2</span>);<br>    mp.<span class=\"hljs-built_in\">erase</span>(it);<br>    <span class=\"hljs-keyword\">for</span> (it=mp.<span class=\"hljs-built_in\">begin</span>();it!=mp.<span class=\"hljs-built_in\">end</span>();it++) &#123;<br>        cout&lt;&lt;it-&gt;first&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;it-&gt;second&lt;&lt;endl;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h4 id=\"程序输出：\"><a href=\"#程序输出：\" class=\"headerlink\" title=\"程序输出：\"></a>程序输出：</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-number\">1</span> shicheng<br><span class=\"hljs-number\">2</span> wangzhouyang<br><span class=\"hljs-number\">3</span> xingyuanjie<br><span class=\"hljs-number\">4</span> tanghaipeng<br><span class=\"hljs-number\">5</span> heqichuan<br><span class=\"hljs-number\">6</span> zhouyuhao<br>Find it, the relative value is: shicheng<br><span class=\"hljs-number\">1</span> shicheng<br><span class=\"hljs-number\">3</span> xingyuanjie<br><span class=\"hljs-number\">4</span> tanghaipeng<br><span class=\"hljs-number\">5</span> heqichuan<br><span class=\"hljs-number\">6</span> zhouyuhao<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h3><p><a href=\"https://blog.csdn.net/liitdar/article/details/80009712\">(20条消息) STL中map介绍_liitdar的博客-CSDN博客_stlmap</a></p>\n",
            "tags": [
                "STL",
                "Map"
            ]
        },
        {
            "id": "http://example.com/2022/04/11/Algorithm016/",
            "url": "http://example.com/2022/04/11/Algorithm016/",
            "title": "L2-021 点赞狂魔 (25 分)",
            "date_published": "2022-04-11T11:21:06.000Z",
            "content_html": "<h1 id=\"L2-021-点赞狂魔-25-分\"><a href=\"#L2-021-点赞狂魔-25-分\" class=\"headerlink\" title=\"L2-021 点赞狂魔 (25 分)\"></a>L2-021 点赞狂魔 (25 分)</h1><p>微博上有个“点赞”功能，你可以为你喜欢的博文点个赞表示支持。每篇博文都有一些刻画其特性的标签，而你点赞的博文的类型，也间接刻画了你的特性。然而有这么一种人，他们会通过给自己看到的一切内容点赞来狂刷存在感，这种人就被称为“点赞狂魔”。他们点赞的标签非常分散，无法体现出明显的特性。本题就要求你写个程序，通过统计每个人点赞的不同标签的数量，找出前3名点赞狂魔。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>输入在第一行给出一个正整数<em>N</em>（≤100），是待统计的用户数。随后<em>N</em>行，每行列出一位用户的点赞标签。格式为“<code>Name</code> <em>K</em> <em>F</em>1⋯<em>F**K</em>”，其中<code>Name</code>是不超过8个英文小写字母的非空用户名，1≤<em>K</em>≤1000，<em>F**i</em>（<em>i</em>&#x3D;1,⋯,<em>K</em>）是特性标签的编号，我们将所有特性标签从 1 到 107 编号。数字间以空格分隔。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>统计每个人点赞的不同标签的数量，找出数量最大的前3名，在一行中顺序输出他们的用户名,其间以1个空格分隔,且行末不得有多余空格。如果有并列，则输出标签出现次数平均值最小的那个，题目保证这样的用户没有并列。若不足3人，则用<code>-</code>补齐缺失，例如<code>mike jenny -</code>就表示只有2人。</p>\n<h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs in\">5<br>bob 11 101 102 103 104 105 106 107 108 108 107 107<br>peter 8 1 2 3 4 3 2 5 1<br>chris 12 1 2 3 4 5 6 7 8 9 1 2 3<br>john 10 8 7 6 5 4 3 2 1 7 5<br>jack 9 6 7 8 9 10 11 12 13 14<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs out\">jack chris john<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h3><p><strong>结构体数组 + sort排序</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">person</span>&#123;</span><br>    <span class=\"hljs-keyword\">char</span> name[<span class=\"hljs-number\">10</span>];<br>    set&lt;<span class=\"hljs-keyword\">int</span>&gt; s;\t\t\t\t<span class=\"hljs-comment\">//set容器中的每个元素值唯一</span><br>    <span class=\"hljs-keyword\">int</span> all=<span class=\"hljs-number\">0</span>;\t\t\t\t<span class=\"hljs-comment\">//记录点赞次数</span><br>&#125;;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">cmp</span><span class=\"hljs-params\">(person a,person b)</span></span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(a.s.<span class=\"hljs-built_in\">size</span>()==b.s.<span class=\"hljs-built_in\">size</span>()) <span class=\"hljs-keyword\">return</span> a.all&lt;b.all;\t\t\t<span class=\"hljs-comment\">//如果有并列，则输出标签出现次数平均值最小的那个</span><br>    <span class=\"hljs-keyword\">return</span> a.s.<span class=\"hljs-built_in\">size</span>()&gt;b.s.<span class=\"hljs-built_in\">size</span>();\t\t\t\t\t\t\t<span class=\"hljs-comment\">//点赞的不同标签的数量最多的</span><br>&#125;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> n;<br>    cin&gt;&gt;n;<br>    person p[n];<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;n ; ++i) &#123;<br>        cin&gt;&gt;p[i].name;<br>        <span class=\"hljs-keyword\">int</span> time;<br>        cin&gt;&gt;time;<br>        p[i].all=time;\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//记录点赞次数</span><br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; time; ++j) &#123;<br>            <span class=\"hljs-keyword\">int</span> tmp;<br>            cin&gt;&gt;tmp;<br>            p[i].s.<span class=\"hljs-built_in\">insert</span>(tmp);\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//插入set容器</span><br>        &#125;<br>    &#125;<br>    <span class=\"hljs-built_in\">sort</span>(p,p+n,cmp);\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//排序</span><br>    <span class=\"hljs-keyword\">if</span>(n&gt;=<span class=\"hljs-number\">3</span>)&#123;<br>        cout&lt;&lt;p[<span class=\"hljs-number\">0</span>].name&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;p[<span class=\"hljs-number\">1</span>].name&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;p[<span class=\"hljs-number\">2</span>].name&lt;&lt;endl;<br>    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(n==<span class=\"hljs-number\">2</span>)&#123;<br>        cout&lt;&lt;p[<span class=\"hljs-number\">0</span>].name&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;p[<span class=\"hljs-number\">1</span>].name&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;<span class=\"hljs-string\">&quot;-&quot;</span>&lt;&lt;endl;<br>    &#125;<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(n==<span class=\"hljs-number\">1</span>)&#123;<br>        cout&lt;&lt;p[<span class=\"hljs-number\">0</span>].name&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;<span class=\"hljs-string\">&quot;-&quot;</span>&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;<span class=\"hljs-string\">&quot;-&quot;</span>&lt;&lt;endl;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/994805058485469184\">题目详情 - L2-021 点赞狂魔 (25 分) (pintia.cn)</a></p>\n<p><a href=\"https://blog.csdn.net/changjiale110/article/details/79108447\">(19条消息) STL中的set使用方法详细！！！！_知足–常乐的博客-CSDN博客_set stl</a></p>\n",
            "tags": [
                "STL",
                "C++",
                "Set",
                "团体程序设计天梯赛",
                "Sort"
            ]
        },
        {
            "id": "http://example.com/2022/04/08/Algorithm015/",
            "url": "http://example.com/2022/04/08/Algorithm015/",
            "title": "C++的STL中字符串string自带方法find查找",
            "date_published": "2022-04-08T11:18:57.000Z",
            "content_html": "<h1 id=\"C-的STL中字符串string自带方法find查找\"><a href=\"#C-的STL中字符串string自带方法find查找\" class=\"headerlink\" title=\"C++的STL中字符串string自带方法find查找\"></a>C++的STL中字符串string自带方法find查找</h1><h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">string str = <span class=\"hljs-string\">&quot;abcd&quot;</span>;<br>\tcout &lt;&lt; str.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-string\">&#x27;a&#x27;</span>);<br>\t<span class=\"hljs-comment\">//返回的是下标的值而不是指针或是迭代器</span><br></code></pre></div></td></tr></table></figure>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\">string str = <span class=\"hljs-string\">&quot;abcd&quot;</span><br>string sub = <span class=\"hljs-string\">&quot;cd&quot;</span><br><span class=\"hljs-keyword\">if</span>(str.<span class=\"hljs-built_in\">find</span>(sub)!=string::npos)&#123;<br>    cout&lt;&lt;<span class=\"hljs-string\">&quot;找到了&quot;</span>&lt;&lt;endl;<br>&#125;<span class=\"hljs-keyword\">else</span>&#123;<br>    cout&lt;&lt;<span class=\"hljs-string\">&quot;没有找到&quot;</span>&lt;&lt;endl;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>要是没有找到，返回的是str::npos<br>注意，只有string的find方法是返回的下标，因为string是顺序索引，set,map,multiset,multimap都不是顺序索引的数据结构，所以返回的是迭代器。</p>\n<h2 id=\"样例一-L1-070-吃火锅-15-分\"><a href=\"#样例一-L1-070-吃火锅-15-分\" class=\"headerlink\" title=\"样例一:L1-070 吃火锅 (15 分)\"></a>样例一:<strong>L1-070 吃火锅 (15 分)</strong></h2><p><strong>题目链接：</strong></p>\n<p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/1336215880692482053\">https://pintia.cn/problem-sets/994805046380707840/problems/1336215880692482053</a></p>\n<p><img src=\"/2022/04/08/Algorithm015/68518b64-f2f7-4694-aaeb-d32afe657f7b.jpg\" alt=\"chg.jpg\"></p>\n<p>以上图片来自微信朋友圈：这种天气你有什么破事打电话给我基本没用。但是如果你说“吃火锅”，那就厉害了，我们的故事就开始了。</p>\n<p>本题要求你实现一个程序，自动检查你朋友给你发来的信息里有没有 <code>chi1 huo3 guo1</code>。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>输入每行给出一句不超过 80 个字符的、以回车结尾的朋友信息，信息为非空字符串，仅包括字母、数字、空格、可见的半角标点符号。当读到某一行只有一个英文句点 <code>.</code> 时，输入结束，此行不算在朋友信息里。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>首先在一行中输出朋友信息的总条数。然后对朋友的每一行信息，检查其中是否包含 <code>chi1 huo3 guo1</code>，并且统计这样厉害的信息有多少条。在第二行中首先输出第一次出现 <code>chi1 huo3 guo1</code> 的信息是第几条（从 1 开始计数），然后输出这类信息的总条数，其间以一个空格分隔。题目保证输出的所有数字不超过 100。</p>\n<p>如果朋友从头到尾都没提 <code>chi1 huo3 guo1</code> 这个关键词，则在第二行输出一个表情 <code>-_-#</code>。</p>\n<h3 id=\"输入样例-1：\"><a href=\"#输入样例-1：\" class=\"headerlink\" title=\"输入样例 1：\"></a>输入样例 1：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs in\">Hello!<br>are you there?<br>wantta chi1 huo3 guo1?<br>that&#x27;s so li hai le<br>our story begins from chi1 huo3 guo1 le<br>.<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"输出样例-1：\"><a href=\"#输出样例-1：\" class=\"headerlink\" title=\"输出样例 1：\"></a>输出样例 1：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs out\">5<br>3 2<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"输入样例-2：\"><a href=\"#输入样例-2：\" class=\"headerlink\" title=\"输入样例 2：\"></a>输入样例 2：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs in\">Hello!<br>are you there?<br>wantta qi huo3 guo1 chi1huo3guo1?<br>that&#x27;s so li hai le<br>our story begins from ci1 huo4 guo2 le<br>.<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"输出样例-2：\"><a href=\"#输出样例-2：\" class=\"headerlink\" title=\"输出样例 2：\"></a>输出样例 2：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs out\">5<br>-_-#<br></code></pre></div></td></tr></table></figure>\n\n<h3 id=\"程序源代码\"><a href=\"#程序源代码\" class=\"headerlink\" title=\"程序源代码\"></a>程序源代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;bits/stdc++.h&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-keyword\">int</span> flag=<span class=\"hljs-number\">0</span>;\t\t\t\t\t<span class=\"hljs-comment\">//用来判断是否是第一次找到吃火锅</span><br>    <span class=\"hljs-keyword\">int</span> cnt=<span class=\"hljs-number\">0</span>;\t\t\t\t\t<span class=\"hljs-comment\">//用来记录总行数</span><br>    <span class=\"hljs-keyword\">int</span> count=<span class=\"hljs-number\">0</span>;\t\t\t\t<span class=\"hljs-comment\">//用来记录有多少个吃火锅</span><br>    <span class=\"hljs-keyword\">int</span> firstp=<span class=\"hljs-number\">0</span>;\t\t\t\t<span class=\"hljs-comment\">//用来记录第一次出现吃火锅的位置</span><br>    string cmp=<span class=\"hljs-string\">&quot;chi1 huo3 guo1&quot;</span>;<br>    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">true</span>)<br>    &#123;<br>        string s;<br>        s.<span class=\"hljs-built_in\">clear</span>();<br>        <span class=\"hljs-built_in\">getline</span>(cin,s);<br>        <span class=\"hljs-keyword\">if</span>(s.<span class=\"hljs-built_in\">size</span>()==<span class=\"hljs-number\">1</span>&amp;&amp;s==<span class=\"hljs-string\">&quot;.&quot;</span>)&#123;<br>            <span class=\"hljs-keyword\">break</span>;<br>        &#125;<br>        string tmp =s;<br>        <span class=\"hljs-keyword\">if</span>(tmp.<span class=\"hljs-built_in\">find</span>(cmp)!=string::npos)&#123;<br>            <span class=\"hljs-keyword\">if</span>(flag==<span class=\"hljs-number\">0</span>) &#123;<br>                flag =<span class=\"hljs-number\">1</span>;<br>                firstp = cnt+<span class=\"hljs-number\">1</span>;<br>            &#125;<br>            count=count+<span class=\"hljs-number\">1</span>;<br>        &#125;<br>        cnt=cnt+<span class=\"hljs-number\">1</span>;<br><br>    &#125;<br>    <span class=\"hljs-keyword\">if</span>(count==<span class=\"hljs-number\">0</span>)&#123;<br>        cout&lt;&lt;cnt&lt;&lt;endl;<br>        cout&lt;&lt;<span class=\"hljs-string\">&quot;-_-#&quot;</span>&lt;&lt;endl;<br>    &#125; <span class=\"hljs-keyword\">else</span>&#123;<br>        cout&lt;&lt;cnt&lt;&lt;endl;<br>        cout&lt;&lt;firstp&lt;&lt;<span class=\"hljs-string\">&quot; &quot;</span>&lt;&lt;count&lt;&lt;endl;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://blog.csdn.net/qq_50675813/article/details/113313343\">(18条消息) c++STL中的find()函数 有两种使用方法_我们不生产代码，只是代码的搬运工的博客-CSDN博客_c++中find函数的使用方法</a></p>\n<p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/1336215880692482053\">https://pintia.cn/problem-sets/994805046380707840/problems/1336215880692482053</a></p>\n",
            "tags": [
                "String",
                "Find",
                "STL",
                "C++"
            ]
        }
    ]
}