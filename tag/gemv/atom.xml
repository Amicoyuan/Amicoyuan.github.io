<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xingyuanjie.top</id>
    <title>Amicoyuan • Posts by &#34;gemv&#34; tag</title>
    <link href="https://xingyuanjie.top" />
    <updated>2023-06-07T05:47:39.000Z</updated>
    <category term="AVX" />
    <category term="Data Structure" />
    <category term="Set" />
    <category term="团体程序设计天梯赛" />
    <category term="STL" />
    <category term="C++" />
    <category term="Sort" />
    <category term="String" />
    <category term="Find" />
    <category term="LinkList" />
    <category term="双向链表" />
    <category term="Graph" />
    <category term="邻接表" />
    <category term="Vector" />
    <category term="Binary tree" />
    <category term="BFS" />
    <category term="模拟" />
    <category term="邻接矩阵" />
    <category term="DFS" />
    <category term="结构体" />
    <category term="贪心" />
    <category term="Double类型相等比较" />
    <category term="并查集" />
    <category term="Map" />
    <category term="CMU" />
    <category term="CSAPP" />
    <category term="Pair" />
    <category term="CUDA" />
    <category term="Linux" />
    <category term="Tensorflow" />
    <category term="Machine Learning" />
    <category term="MPI" />
    <category term="Matrix" />
    <category term="GEMM" />
    <category term="AVX2" />
    <category term="blas" />
    <category term="gemm" />
    <category term="gemv" />
    <category term="dgemm" />
    <category term="Cache" />
    <category term="Blocking" />
    <category term="C/C++" />
    <category term="spmv" />
    <category term="Intel" />
    <category term="LeetCode" />
    <category term="双指针" />
    <category term="数组翻转" />
    <category term="哈希表" />
    <category term="前缀和" />
    <category term="Mirror" />
    <category term="牛客" />
    <category term="Numactl" />
    <category term="OpenMP" />
    <category term="register" />
    <category term="Slurm" />
    <category term="性能分析工具" />
    <category term="gcov" />
    <category term="bool" />
    <entry>
        <id>https://xingyuanjie.top/2023/06/07/gemm0007/</id>
        <title>Packing into contiguous memory</title>
        <link rel="alternate" href="https://xingyuanjie.top/2023/06/07/gemm0007/"/>
        <content type="html">&lt;h2 id=&#34;Packing-into-contiguous-memory&#34;&gt;&lt;a href=&#34;#Packing-into-contiguous-memory&#34; class=&#34;headerlink&#34; title=&#34;Packing into contiguous memory&#34;&gt;&lt;/a&gt;Packing into contiguous memory&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先，我们打包A块，这样我们就可以连续地穿过它(march through it)。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_12&#34;&gt;Optimization_4x4_12 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_13&#34;&gt;Optimization_4x4_13 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这将带来惊人的性能提升:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/06/07/gemm0007/compare_MMult0_MMult-4x4-13.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/06/07/gemm0007/compare_MMult-4x4-11_MMult-4x4-13.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最后，我们打包B块，以便连续地遍历它。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_14&#34;&gt;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_14&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_14&#34;&gt;Optimization_4x4_14 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们现在达到了处理器90%的涡轮增压峰值!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/06/07/gemm0007/compare_MMult0_MMult-4x4-15.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/06/07/gemm0007/compare_MMult-4x4-13_MMult-4x4-15.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Optimization-4x4-12&#34;&gt;&lt;a href=&#34;#Optimization-4x4-12&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_12&#34;&gt;&lt;/a&gt;Optimization_4x4_12&lt;/h2&gt;&lt;p&gt;在调用AddDot4x4之前，我们现在打包到4xk的A块。我们看到性能下降。如果检查内部内核，就会注意到每个4xk的A块都被重复打包，每次执行外部循环一次。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Block sizes */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; mc 256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; kc 128&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; min( i, j ) ( (i)&amp;lt;(j) ? (i): (j) )&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixA&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, p, pb, ib;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* This time, we compute a mc x n block of C by a call to the InnerKernel */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p+=kc )&amp;#123;&lt;br&gt;    pb = &lt;span class=&#34;hljs-built_in&#34;&gt;min&lt;/span&gt;( k-p, kc );&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=mc )&amp;#123;&lt;br&gt;      ib = &lt;span class=&#34;hljs-built_in&#34;&gt;min&lt;/span&gt;( m-i, mc );&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;InnerKernel&lt;/span&gt;( ib, n, pb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,p ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;(p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InnerKernel&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                       &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                       &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    packedA[ m * k ];&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;PackMatrixA&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;packedA[ i*k ] );&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;packedA[ i*k ], &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixA&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a_to )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;k; j++)&amp;#123;  &lt;span class=&#34;hljs-comment&#34;&gt;/* loop over columns of A */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;      *a_ij_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, j );&lt;br&gt;&lt;br&gt;    *a_to++ = *a_ij_pntr;&lt;br&gt;    *a_to++ = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;    *a_to++ = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;    *a_to++ = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;mmintrin.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;xmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;pmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;emmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;union&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;  __m128d v;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; d[&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;];&lt;br&gt;&amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     And now we use vector registers and instructions */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg,    c_01_c_11_vreg,    c_02_c_12_vreg,    c_03_c_13_vreg,&lt;br&gt;    c_20_c_30_vreg,    c_21_c_31_vreg,    c_22_c_32_vreg,    c_23_c_33_vreg,&lt;br&gt;    a_0p_a_1p_vreg,&lt;br&gt;    a_2p_a_3p_vreg,&lt;br&gt;    b_p0_vreg, b_p1_vreg, b_p2_vreg, b_p3_vreg; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Point to the current elements in the four columns of B */&lt;/span&gt;&lt;br&gt;    *b_p0_pntr, *b_p1_pntr, *b_p2_pntr, *b_p3_pntr; &lt;br&gt;    &lt;br&gt;  b_p0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;  b_p1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;  b_p2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;  b_p3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  c_00_c_10_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_01_c_11_vreg.v = _mm_setzero_pd();&lt;br&gt;  c_02_c_12_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_03_c_13_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_20_c_30_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_21_c_31_vreg.v = _mm_setzero_pd();  &lt;br&gt;  c_22_c_32_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_23_c_33_vreg.v = _mm_setzero_pd(); &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_a_1p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) );&lt;br&gt;    a_2p_a_3p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) );&lt;br&gt;&lt;br&gt;    b_p0_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p0_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p1_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p1_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p2_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p2_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p3_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p3_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row and second rows */&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg.v += a_0p_a_1p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_01_c_11_vreg.v += a_0p_a_1p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_02_c_12_vreg.v += a_0p_a_1p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_03_c_13_vreg.v += a_0p_a_1p_vreg.v * b_p3_vreg.v;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Third and fourth rows */&lt;/span&gt;&lt;br&gt;    c_20_c_30_vreg.v += a_2p_a_3p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_21_c_31_vreg.v += a_2p_a_3p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_22_c_32_vreg.v += a_2p_a_3p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_23_c_33_vreg.v += a_2p_a_3p_vreg.v * b_p3_vreg.v;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization-4x4-13&#34;&gt;&lt;a href=&#34;#Optimization-4x4-13&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_13&#34;&gt;&lt;/a&gt;Optimization_4x4_13&lt;/h2&gt;&lt;p&gt;这个版本保存了A的打包块，以便在InnerKernel的外部循环的第一次迭代之后，使用保存的版本。性能的提升是显而易见的!与上一个版本相比，唯一的变化是增加了if (j&amp;#x3D;&amp;#x3D; 0)。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs C++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Block sizes */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; mc 256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; kc 128&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; min( i, j ) ( (i)&amp;lt;(j) ? (i): (j) )&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixA&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, p, pb, ib;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* This time, we compute a mc x n block of C by a call to the InnerKernel */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p+=kc )&amp;#123;&lt;br&gt;    pb = &lt;span class=&#34;hljs-built_in&#34;&gt;min&lt;/span&gt;( k-p, kc );&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=mc )&amp;#123;&lt;br&gt;      ib = &lt;span class=&#34;hljs-built_in&#34;&gt;min&lt;/span&gt;( m-i, mc );&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;InnerKernel&lt;/span&gt;( ib, n, pb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,p ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;(p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InnerKernel&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                       &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                       &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    packedA[ m * k ];&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; ( j == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) &lt;span class=&#34;hljs-built_in&#34;&gt;PackMatrixA&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;packedA[ i*k ] );&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;packedA[ i*k ], &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixA&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a_to )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;k; j++)&amp;#123;  &lt;span class=&#34;hljs-comment&#34;&gt;/* loop over columns of A */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;      *a_ij_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, j );&lt;br&gt;&lt;br&gt;    *a_to++ = *a_ij_pntr;&lt;br&gt;    *a_to++ = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;    *a_to++ = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;    *a_to++ = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;mmintrin.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;xmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;pmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;emmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;union&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;  __m128d v;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; d[&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;];&lt;br&gt;&amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     And now we use vector registers and instructions */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg,    c_01_c_11_vreg,    c_02_c_12_vreg,    c_03_c_13_vreg,&lt;br&gt;    c_20_c_30_vreg,    c_21_c_31_vreg,    c_22_c_32_vreg,    c_23_c_33_vreg,&lt;br&gt;    a_0p_a_1p_vreg,&lt;br&gt;    a_2p_a_3p_vreg,&lt;br&gt;    b_p0_vreg, b_p1_vreg, b_p2_vreg, b_p3_vreg; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Point to the current elements in the four columns of B */&lt;/span&gt;&lt;br&gt;    *b_p0_pntr, *b_p1_pntr, *b_p2_pntr, *b_p3_pntr; &lt;br&gt;    &lt;br&gt;  b_p0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;  b_p1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;  b_p2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;  b_p3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  c_00_c_10_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_01_c_11_vreg.v = _mm_setzero_pd();&lt;br&gt;  c_02_c_12_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_03_c_13_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_20_c_30_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_21_c_31_vreg.v = _mm_setzero_pd();  &lt;br&gt;  c_22_c_32_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_23_c_33_vreg.v = _mm_setzero_pd(); &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_a_1p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) a );&lt;br&gt;    a_2p_a_3p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) ( a+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) );&lt;br&gt;    a += &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;&lt;br&gt;    b_p0_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p0_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p1_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p1_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p2_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p2_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p3_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p3_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row and second rows */&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg.v += a_0p_a_1p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_01_c_11_vreg.v += a_0p_a_1p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_02_c_12_vreg.v += a_0p_a_1p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_03_c_13_vreg.v += a_0p_a_1p_vreg.v * b_p3_vreg.v;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Third and fourth rows */&lt;/span&gt;&lt;br&gt;    c_20_c_30_vreg.v += a_2p_a_3p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_21_c_31_vreg.v += a_2p_a_3p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_22_c_32_vreg.v += a_2p_a_3p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_23_c_33_vreg.v += a_2p_a_3p_vreg.v * b_p3_vreg.v;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization-4x4-14&#34;&gt;&lt;a href=&#34;#Optimization-4x4-14&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_14&#34;&gt;&lt;/a&gt;Optimization_4x4_14&lt;/h2&gt;&lt;p&gt;我们现在打包b的kx4块，注意，在这个版本中，面板是重复打包的，这会对性能产生不利影响。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Block sizes */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; mc 256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; kc 128&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; min( i, j ) ( (i)&amp;lt;(j) ? (i): (j) )&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixA&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixB&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InnerKernel&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, p, pb, ib;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* This time, we compute a mc x n block of C by a call to the InnerKernel */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p+=kc )&amp;#123;&lt;br&gt;    pb = &lt;span class=&#34;hljs-built_in&#34;&gt;min&lt;/span&gt;( k-p, kc );&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=mc )&amp;#123;&lt;br&gt;      ib = &lt;span class=&#34;hljs-built_in&#34;&gt;min&lt;/span&gt;( m-i, mc );&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;InnerKernel&lt;/span&gt;( ib, n, pb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,p ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;(p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), ldc, i==&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InnerKernel&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                       &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                       &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; first_time )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    packedA[ m * k ], packedB[ k*n ];&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;PackMatrixB&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, j ), ldb, &amp;amp;packedB[ j*k ] );&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; ( j == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) &lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;PackMatrixA&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;packedA[ i*k ] );&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;packedA[ i*k ], &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &amp;amp;packedB[ j*k ], k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixA&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a_to )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;k; j++)&amp;#123;  &lt;span class=&#34;hljs-comment&#34;&gt;/* loop over columns of A */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;      *a_ij_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, j );&lt;br&gt;&lt;br&gt;    *a_to     = *a_ij_pntr;&lt;br&gt;    *(a_to+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;    *(a_to+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;) = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;    *(a_to+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;) = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;&lt;br&gt;    a_to += &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixB&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b_to )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    *b_i0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), *b_i1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ),&lt;br&gt;    *b_i2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ), *b_i3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;k; i++)&amp;#123;  &lt;span class=&#34;hljs-comment&#34;&gt;/* loop over rows of B */&lt;/span&gt;&lt;br&gt;    *b_to++ = *b_i0_pntr++;&lt;br&gt;    *b_to++ = *b_i1_pntr++;&lt;br&gt;    *b_to++ = *b_i2_pntr++;&lt;br&gt;    *b_to++ = *b_i3_pntr++;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;mmintrin.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;xmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;pmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;emmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;union&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;  __m128d v;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; d[&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;];&lt;br&gt;&amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     And now we use vector registers and instructions */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg,    c_01_c_11_vreg,    c_02_c_12_vreg,    c_03_c_13_vreg,&lt;br&gt;    c_20_c_30_vreg,    c_21_c_31_vreg,    c_22_c_32_vreg,    c_23_c_33_vreg,&lt;br&gt;    a_0p_a_1p_vreg,&lt;br&gt;    a_2p_a_3p_vreg,&lt;br&gt;    b_p0_vreg, b_p1_vreg, b_p2_vreg, b_p3_vreg; &lt;br&gt;&lt;br&gt;  c_00_c_10_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_01_c_11_vreg.v = _mm_setzero_pd();&lt;br&gt;  c_02_c_12_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_03_c_13_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_20_c_30_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_21_c_31_vreg.v = _mm_setzero_pd();  &lt;br&gt;  c_22_c_32_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_23_c_33_vreg.v = _mm_setzero_pd(); &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_a_1p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) a );&lt;br&gt;    a_2p_a_3p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) ( a+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) );&lt;br&gt;    a += &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;&lt;br&gt;    b_p0_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b );       &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p1_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) (b+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p2_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) (b+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;) );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p3_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) (b+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;) );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;&lt;br&gt;    b += &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row and second rows */&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg.v += a_0p_a_1p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_01_c_11_vreg.v += a_0p_a_1p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_02_c_12_vreg.v += a_0p_a_1p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_03_c_13_vreg.v += a_0p_a_1p_vreg.v * b_p3_vreg.v;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Third and fourth rows */&lt;/span&gt;&lt;br&gt;    c_20_c_30_vreg.v += a_2p_a_3p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_21_c_31_vreg.v += a_2p_a_3p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_22_c_32_vreg.v += a_2p_a_3p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_23_c_33_vreg.v += a_2p_a_3p_vreg.v * b_p3_vreg.v;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization-4x4-15&#34;&gt;&lt;a href=&#34;#Optimization-4x4-15&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_15&#34;&gt;&lt;/a&gt;Optimization_4x4_15&lt;/h2&gt;&lt;p&gt;并且，我们再次添加了一些代码，这样我们就可以避免重新打包b的kx4块。现在性能令人印象深刻!&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Block sizes */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; mc 256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; kc 128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; nb 1000&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; min( i, j ) ( (i)&amp;lt;(j) ? (i): (j) )&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixA&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixB&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InnerKernel&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, p, pb, ib;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* This time, we compute a mc x n block of C by a call to the InnerKernel */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p+=kc )&amp;#123;&lt;br&gt;    pb = &lt;span class=&#34;hljs-built_in&#34;&gt;min&lt;/span&gt;( k-p, kc );&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=mc )&amp;#123;&lt;br&gt;      ib = &lt;span class=&#34;hljs-built_in&#34;&gt;min&lt;/span&gt;( m-i, mc );&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;InnerKernel&lt;/span&gt;( ib, n, pb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,p ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;(p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), ldc, i==&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InnerKernel&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                       &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                       &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; first_time )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    packedA[ m * k ];&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    packedB[ kc*nb ];    &lt;span class=&#34;hljs-comment&#34;&gt;/* Note: using a static buffer is not thread safe... */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; ( first_time )&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;PackMatrixB&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, j ), ldb, &amp;amp;packedB[ j*k ] );&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; ( j == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) &lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;PackMatrixA&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;packedA[ i*k ] );&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;packedA[ i*k ], &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &amp;amp;packedB[ j*k ], k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixA&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a_to )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;k; j++)&amp;#123;  &lt;span class=&#34;hljs-comment&#34;&gt;/* loop over columns of A */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;      *a_ij_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, j );&lt;br&gt;&lt;br&gt;    *a_to     = *a_ij_pntr;&lt;br&gt;    *(a_to+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;    *(a_to+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;) = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;    *(a_to+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;) = *(a_ij_pntr+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;&lt;br&gt;    a_to += &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PackMatrixB&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b_to )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    *b_i0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), *b_i1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ),&lt;br&gt;    *b_i2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ), *b_i3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;k; i++)&amp;#123;  &lt;span class=&#34;hljs-comment&#34;&gt;/* loop over rows of B */&lt;/span&gt;&lt;br&gt;    *b_to++ = *b_i0_pntr++;&lt;br&gt;    *b_to++ = *b_i1_pntr++;&lt;br&gt;    *b_to++ = *b_i2_pntr++;&lt;br&gt;    *b_to++ = *b_i3_pntr++;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;mmintrin.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;xmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;pmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;emmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;union&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;  __m128d v;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; d[&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;];&lt;br&gt;&amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     And now we use vector registers and instructions */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg,    c_01_c_11_vreg,    c_02_c_12_vreg,    c_03_c_13_vreg,&lt;br&gt;    c_20_c_30_vreg,    c_21_c_31_vreg,    c_22_c_32_vreg,    c_23_c_33_vreg,&lt;br&gt;    a_0p_a_1p_vreg,&lt;br&gt;    a_2p_a_3p_vreg,&lt;br&gt;    b_p0_vreg, b_p1_vreg, b_p2_vreg, b_p3_vreg; &lt;br&gt;&lt;br&gt;  c_00_c_10_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_01_c_11_vreg.v = _mm_setzero_pd();&lt;br&gt;  c_02_c_12_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_03_c_13_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_20_c_30_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_21_c_31_vreg.v = _mm_setzero_pd();  &lt;br&gt;  c_22_c_32_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_23_c_33_vreg.v = _mm_setzero_pd(); &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_a_1p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) a );&lt;br&gt;    a_2p_a_3p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) ( a+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) );&lt;br&gt;    a += &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;&lt;br&gt;    b_p0_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b );       &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p1_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) (b+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p2_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) (b+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;) );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p3_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) (b+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;) );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;&lt;br&gt;    b += &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row and second rows */&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg.v += a_0p_a_1p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_01_c_11_vreg.v += a_0p_a_1p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_02_c_12_vreg.v += a_0p_a_1p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_03_c_13_vreg.v += a_0p_a_1p_vreg.v * b_p3_vreg.v;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Third and fourth rows */&lt;/span&gt;&lt;br&gt;    c_20_c_30_vreg.v += a_2p_a_3p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_21_c_31_vreg.v += a_2p_a_3p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_22_c_32_vreg.v += a_2p_a_3p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_23_c_33_vreg.v += a_2p_a_3p_vreg.v * b_p3_vreg.v;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="blas" />
        <category term="gemm" />
        <category term="gemv" />
        <updated>2023-06-07T05:47:39.000Z</updated>
    </entry>
    <entry>
        <id>https://xingyuanjie.top/2023/06/07/gemm0006/</id>
        <title>Blocking to maintain performance</title>
        <link rel="alternate" href="https://xingyuanjie.top/2023/06/07/gemm0006/"/>
        <content type="html">&lt;h2 id=&#34;Blocking-to-maintain-performance&#34;&gt;&lt;a href=&#34;#Blocking-to-maintain-performance&#34; class=&#34;headerlink&#34; title=&#34;Blocking to maintain performance&#34;&gt;&lt;/a&gt;Blocking to maintain performance&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;为了保持较小问题规模的性能，我们分块矩阵C(以及相应的A和B):&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_11&#34;&gt;Optimization_4x4_11 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在，性能得到了保持:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/06/07/gemm0006/compare_MMult0_MMult-4x4-11.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/06/07/gemm0006/compare_MMult-4x4-10_MMult-4x4-11.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Optimization-4x4-11&#34;&gt;&lt;a href=&#34;#Optimization-4x4-11&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_11&#34;&gt;&lt;/a&gt;Optimization_4x4_11&lt;/h2&gt;&lt;p&gt;我们注意到，对于迄今为止的所有优化，当涉及的矩阵比L2缓存所能容纳的矩阵大得多时，性能会大幅下降。在这个优化中，我们创建了一个额外的分块级别来克服这个问题。我们现在有一个主例程，它调用GotoBLAS和BLIS使用的内部内核，然后AddDot4x4例程是BLIS使用的微内核。&lt;/p&gt;
&lt;p&gt;这一步主要是为了分块，把原来的MY_MMult变成了InnerKernel，而现在的MY_MMult作用就是为了分块。分块大小通过宏定义给出。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Block sizes */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; mc 256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; kc 128&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; min( i, j ) ( (i)&amp;lt;(j) ? (i): (j) )&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j, p, pb, ib;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* This time, we compute a mc x n block of C by a call to the InnerKernel */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p+=kc )&amp;#123;&lt;br&gt;    pb = &lt;span class=&#34;hljs-built_in&#34;&gt;min&lt;/span&gt;( k-p, kc );&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=mc )&amp;#123;&lt;br&gt;      ib = &lt;span class=&#34;hljs-built_in&#34;&gt;min&lt;/span&gt;( m-i, mc );&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;InnerKernel&lt;/span&gt;( ib, n, pb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,p ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;(p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InnerKernel&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                       &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                       &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;mmintrin.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;xmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;pmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;emmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;union&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;  __m128d v;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; d[&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;];&lt;br&gt;&amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     And now we use vector registers and instructions */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg,    c_01_c_11_vreg,    c_02_c_12_vreg,    c_03_c_13_vreg,&lt;br&gt;    c_20_c_30_vreg,    c_21_c_31_vreg,    c_22_c_32_vreg,    c_23_c_33_vreg,&lt;br&gt;    a_0p_a_1p_vreg,&lt;br&gt;    a_2p_a_3p_vreg,&lt;br&gt;    b_p0_vreg, b_p1_vreg, b_p2_vreg, b_p3_vreg; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Point to the current elements in the four columns of B */&lt;/span&gt;&lt;br&gt;    *b_p0_pntr, *b_p1_pntr, *b_p2_pntr, *b_p3_pntr; &lt;br&gt;    &lt;br&gt;  b_p0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;  b_p1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;  b_p2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;  b_p3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  c_00_c_10_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_01_c_11_vreg.v = _mm_setzero_pd();&lt;br&gt;  c_02_c_12_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_03_c_13_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_20_c_30_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_21_c_31_vreg.v = _mm_setzero_pd();  &lt;br&gt;  c_22_c_32_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_23_c_33_vreg.v = _mm_setzero_pd(); &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_a_1p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) );&lt;br&gt;    a_2p_a_3p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) );&lt;br&gt;&lt;br&gt;    b_p0_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p0_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p1_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p1_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p2_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p2_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p3_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p3_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row and second rows */&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg.v += a_0p_a_1p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_01_c_11_vreg.v += a_0p_a_1p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_02_c_12_vreg.v += a_0p_a_1p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_03_c_13_vreg.v += a_0p_a_1p_vreg.v * b_p3_vreg.v;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Third and fourth rows */&lt;/span&gt;&lt;br&gt;    c_20_c_30_vreg.v += a_2p_a_3p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_21_c_31_vreg.v += a_2p_a_3p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_22_c_32_vreg.v += a_2p_a_3p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_23_c_33_vreg.v += a_2p_a_3p_vreg.v * b_p3_vreg.v;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="blas" />
        <category term="gemm" />
        <category term="gemv" />
        <updated>2023-06-07T05:41:06.000Z</updated>
    </entry>
    <entry>
        <id>https://xingyuanjie.top/2023/06/07/gemm0005/</id>
        <title>Further optimizing</title>
        <link rel="alternate" href="https://xingyuanjie.top/2023/06/07/gemm0005/"/>
        <content type="html">&lt;h2 id=&#34;Further-optimizing&#34;&gt;&lt;a href=&#34;#Further-optimizing&#34; class=&#34;headerlink&#34; title=&#34;Further optimizing&#34;&gt;&lt;/a&gt;Further optimizing&lt;/h2&gt;&lt;p&gt;现在我们开始以不同的方式优化1x4的情况。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们在寄存器中存储一行k × 4矩阵B&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_8&#34;&gt;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;请注意，我们现在使用的常规寄存器比物理上可用的寄存器多得多……&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们重新安排计算，以便一次计算两行4x4的C块。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_9&#34;&gt;Optimization_4x4_9 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;我们使用向量寄存器和向量运算。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_10&#34;&gt;Optimization_4x4_10 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We notice a considerable performance boost:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/06/07/gemm0005/compare_MMult0_MMult-4x4-10.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/06/07/gemm0005/compare_MMult-1x4-9_MMult-4x4-10.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;不过，还有很大的改进空间。&lt;/p&gt;
&lt;h2 id=&#34;Optimization-4x4-8&#34;&gt;&lt;a href=&#34;#Optimization-4x4-8&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_8&#34;&gt;&lt;/a&gt;Optimization_4x4_8&lt;/h2&gt;&lt;p&gt;现在我们使用寄存器来存储B当前行的元素。(注意，对于一次计算C四个元素的情况，我们没有这样做。)性能实际上略有下降。但是这个步骤支持进一步的优化。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     In this version, we use registers for elements in the current row&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     of B as well */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold contributions to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 )   */&lt;/span&gt;&lt;br&gt;       c_00_reg,   c_01_reg,   c_02_reg,   c_03_reg,  &lt;br&gt;       c_10_reg,   c_11_reg,   c_12_reg,   c_13_reg,  &lt;br&gt;       c_20_reg,   c_21_reg,   c_22_reg,   c_23_reg,  &lt;br&gt;       c_30_reg,   c_31_reg,   c_32_reg,   c_33_reg,&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 0, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 1, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 2, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 3, p ) */&lt;/span&gt;&lt;br&gt;       a_0p_reg,&lt;br&gt;       a_1p_reg,&lt;br&gt;       a_2p_reg,&lt;br&gt;       a_3p_reg,&lt;br&gt;       b_p0_reg,&lt;br&gt;       b_p1_reg,&lt;br&gt;       b_p2_reg,&lt;br&gt;       b_p3_reg;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Point to the current elements in the four columns of B */&lt;/span&gt;&lt;br&gt;    *b_p0_pntr, *b_p1_pntr, *b_p2_pntr, *b_p3_pntr; &lt;br&gt;    &lt;br&gt;  b_p0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;  b_p1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;  b_p2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;  b_p3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  c_00_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_01_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_02_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_03_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_10_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_11_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_12_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_13_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_20_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_21_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_22_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_23_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_30_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_31_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_32_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_33_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p );&lt;br&gt;    a_1p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p );&lt;br&gt;    a_2p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p );&lt;br&gt;    a_3p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p );&lt;br&gt;&lt;br&gt;    b_p0_reg = *b_p0_pntr++;&lt;br&gt;    b_p1_reg = *b_p1_pntr++;&lt;br&gt;    b_p2_reg = *b_p2_pntr++;&lt;br&gt;    b_p3_reg = *b_p3_pntr++;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row */&lt;/span&gt;&lt;br&gt;    c_00_reg += a_0p_reg * b_p0_reg;&lt;br&gt;    c_01_reg += a_0p_reg * b_p1_reg;&lt;br&gt;    c_02_reg += a_0p_reg * b_p2_reg;&lt;br&gt;    c_03_reg += a_0p_reg * b_p3_reg;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Second row */&lt;/span&gt;&lt;br&gt;    c_10_reg += a_1p_reg * b_p0_reg;&lt;br&gt;    c_11_reg += a_1p_reg * b_p1_reg;&lt;br&gt;    c_12_reg += a_1p_reg * b_p2_reg;&lt;br&gt;    c_13_reg += a_1p_reg * b_p3_reg;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Third row */&lt;/span&gt;&lt;br&gt;    c_20_reg += a_2p_reg * b_p0_reg;&lt;br&gt;    c_21_reg += a_2p_reg * b_p1_reg;&lt;br&gt;    c_22_reg += a_2p_reg * b_p2_reg;&lt;br&gt;    c_23_reg += a_2p_reg * b_p3_reg;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Four row */&lt;/span&gt;&lt;br&gt;    c_30_reg += a_3p_reg * b_p0_reg;&lt;br&gt;    c_31_reg += a_3p_reg * b_p1_reg;&lt;br&gt;    c_32_reg += a_3p_reg * b_p2_reg;&lt;br&gt;    c_33_reg += a_3p_reg * b_p3_reg;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_10_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_11_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_12_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_13_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_30_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_31_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_32_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_33_reg;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization-4x4-9&#34;&gt;&lt;a href=&#34;#Optimization-4x4-9&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_9&#34;&gt;&lt;/a&gt;Optimization_4x4_9&lt;/h2&gt;&lt;p&gt;从4x4_8到4x4_9是一个微妙的变化:我们不是一次一行地更新4x4块C的行，而是一次计算两行。这为我们使用向量操作做好了准备，我们用向量操作更新对C(0,j)和C(1,j) (j &amp;#x3D;0，…，3)。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     A simple rearrangement to prepare for the use of vector registers */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold contributions to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 )   */&lt;/span&gt;&lt;br&gt;       c_00_reg,   c_01_reg,   c_02_reg,   c_03_reg,  &lt;br&gt;       c_10_reg,   c_11_reg,   c_12_reg,   c_13_reg,  &lt;br&gt;       c_20_reg,   c_21_reg,   c_22_reg,   c_23_reg,  &lt;br&gt;       c_30_reg,   c_31_reg,   c_32_reg,   c_33_reg,&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 0, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 1, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 2, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 3, p ) */&lt;/span&gt;&lt;br&gt;       a_0p_reg,&lt;br&gt;       a_1p_reg,&lt;br&gt;       a_2p_reg,&lt;br&gt;       a_3p_reg,&lt;br&gt;       b_p0_reg,&lt;br&gt;       b_p1_reg,&lt;br&gt;       b_p2_reg,&lt;br&gt;       b_p3_reg;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Point to the current elements in the four columns of B */&lt;/span&gt;&lt;br&gt;    *b_p0_pntr, *b_p1_pntr, *b_p2_pntr, *b_p3_pntr; &lt;br&gt;    &lt;br&gt;  b_p0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;  b_p1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;  b_p2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;  b_p3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  c_00_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_01_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_02_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_03_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_10_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_11_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_12_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_13_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_20_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_21_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_22_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_23_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_30_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_31_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_32_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_33_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p );&lt;br&gt;    a_1p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p );&lt;br&gt;    a_2p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p );&lt;br&gt;    a_3p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p );&lt;br&gt;&lt;br&gt;    b_p0_reg = *b_p0_pntr++;&lt;br&gt;    b_p1_reg = *b_p1_pntr++;&lt;br&gt;    b_p2_reg = *b_p2_pntr++;&lt;br&gt;    b_p3_reg = *b_p3_pntr++;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row and second rows */&lt;/span&gt;&lt;br&gt;    c_00_reg += a_0p_reg * b_p0_reg;&lt;br&gt;    c_10_reg += a_1p_reg * b_p0_reg;&lt;br&gt;&lt;br&gt;    c_01_reg += a_0p_reg * b_p1_reg;&lt;br&gt;    c_11_reg += a_1p_reg * b_p1_reg;&lt;br&gt;&lt;br&gt;    c_02_reg += a_0p_reg * b_p2_reg;&lt;br&gt;    c_12_reg += a_1p_reg * b_p2_reg;&lt;br&gt;&lt;br&gt;    c_03_reg += a_0p_reg * b_p3_reg;&lt;br&gt;    c_13_reg += a_1p_reg * b_p3_reg;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Third and fourth rows */&lt;/span&gt;&lt;br&gt;    c_20_reg += a_2p_reg * b_p0_reg;&lt;br&gt;    c_30_reg += a_3p_reg * b_p0_reg;&lt;br&gt;&lt;br&gt;    c_21_reg += a_2p_reg * b_p1_reg;&lt;br&gt;    c_31_reg += a_3p_reg * b_p1_reg;&lt;br&gt;&lt;br&gt;    c_22_reg += a_2p_reg * b_p2_reg;&lt;br&gt;    c_32_reg += a_3p_reg * b_p2_reg;&lt;br&gt;&lt;br&gt;    c_23_reg += a_2p_reg * b_p3_reg;&lt;br&gt;    c_33_reg += a_3p_reg * b_p3_reg;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_10_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_11_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_12_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_13_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_30_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_31_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_32_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_33_reg;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization-4x4-10&#34;&gt;&lt;a href=&#34;#Optimization-4x4-10&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_10&#34;&gt;&lt;/a&gt;Optimization_4x4_10&lt;/h2&gt;&lt;p&gt;在这里，我们开始使用向量寄存器和向量操作。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;mmintrin.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;xmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;pmmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-meta-string&#34;&gt;&amp;lt;emmintrin.h&amp;gt;&lt;/span&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// SSE3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;union&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;  __m128d v;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; d[&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;];&lt;br&gt;&amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     And now we use vector registers and instructions */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;v2df_t&lt;/span&gt;&lt;br&gt;    c_00_c_10_vreg,    c_01_c_11_vreg,    c_02_c_12_vreg,    c_03_c_13_vreg,&lt;br&gt;    c_20_c_30_vreg,    c_21_c_31_vreg,    c_22_c_32_vreg,    c_23_c_33_vreg,&lt;br&gt;    a_0p_a_1p_vreg,&lt;br&gt;    a_2p_a_3p_vreg,&lt;br&gt;    b_p0_vreg, b_p1_vreg, b_p2_vreg, b_p3_vreg; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Point to the current elements in the four columns of B */&lt;/span&gt;&lt;br&gt;    *b_p0_pntr, *b_p1_pntr, *b_p2_pntr, *b_p3_pntr; &lt;br&gt;    &lt;br&gt;  b_p0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;  b_p1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;  b_p2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;  b_p3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  c_00_c_10_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_01_c_11_vreg.v = _mm_setzero_pd();&lt;br&gt;  c_02_c_12_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_03_c_13_vreg.v = _mm_setzero_pd(); &lt;br&gt;  c_20_c_30_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_21_c_31_vreg.v = _mm_setzero_pd();  &lt;br&gt;  c_22_c_32_vreg.v = _mm_setzero_pd();   &lt;br&gt;  c_23_c_33_vreg.v = _mm_setzero_pd(); &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_a_1p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) );&lt;br&gt;    a_2p_a_3p_vreg.v = _mm_load_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) );&lt;br&gt;&lt;br&gt;    b_p0_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p0_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p1_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p1_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p2_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p2_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;    b_p3_vreg.v = _mm_loaddup_pd( (&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *) b_p3_pntr++ );   &lt;span class=&#34;hljs-comment&#34;&gt;/* load and duplicate */&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row and second rows *  向量化，一次计算两个double/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    c_00_c_10_vreg.v += a_0p_a_1p_vreg.v * b_p0_vreg.v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    c_01_c_11_vreg.v += a_0p_a_1p_vreg.v * b_p1_vreg.v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    c_02_c_12_vreg.v += a_0p_a_1p_vreg.v * b_p2_vreg.v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    c_03_c_13_vreg.v += a_0p_a_1p_vreg.v * b_p3_vreg.v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    /* Third and fourth rows */&lt;/span&gt;&lt;br&gt;    c_20_c_30_vreg.v += a_2p_a_3p_vreg.v * b_p0_vreg.v;&lt;br&gt;    c_21_c_31_vreg.v += a_2p_a_3p_vreg.v * b_p1_vreg.v;&lt;br&gt;    c_22_c_32_vreg.v += a_2p_a_3p_vreg.v * b_p2_vreg.v;&lt;br&gt;    c_23_c_33_vreg.v += a_2p_a_3p_vreg.v * b_p3_vreg.v;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_c_10_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_c_11_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_c_12_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_c_13_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_c_30_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_c_31_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_c_32_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;];  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_c_33_vreg.d[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]; &lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="blas" />
        <category term="gemm" />
        <category term="gemv" />
        <updated>2023-06-07T05:18:10.000Z</updated>
    </entry>
    <entry>
        <id>https://xingyuanjie.top/2023/05/31/gemm0004/</id>
        <title>Repeating the same optimizations</title>
        <link rel="alternate" href="https://xingyuanjie.top/2023/05/31/gemm0004/"/>
        <content type="html">&lt;h2 id=&#34;Repeating-the-same-optimizations&#34;&gt;&lt;a href=&#34;#Repeating-the-same-optimizations&#34; class=&#34;headerlink&#34; title=&#34;Repeating the same optimizations&#34;&gt;&lt;/a&gt;Repeating the same optimizations&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;我们在AddDot4x4子程序中一次计算4个C元素，该子程序一次执行16个乘积:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_3&#34;&gt;Optimization_4x4_3 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;现在我们内联16个独立的内积，并将循环融合为一个，从而在一个循环中同时计算16个乘积:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_4&#34;&gt;Optimization_4x4_4 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_5&#34;&gt;Optimization_4x4_5 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这一点上，我们再次开始看到一些性能改进:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/05/31/gemm0004/compare_MMult0_MMult-4x4-5.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/05/31/gemm0004/compare_MMult-1x4-5_MMult-4x4-5.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们将C的元素累加到寄存器中，并使用寄存器存储a的元素&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_6&#34;&gt;Optimization_4x4_6 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;我们使用指针来定位B中的元素&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_4x4_7&#34;&gt;Optimization_4x4_7 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;Optimization-4x4-3&#34;&gt;&lt;a href=&#34;#Optimization-4x4-3&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_3&#34;&gt;&lt;/a&gt;Optimization_4x4_3&lt;/h1&gt;&lt;p&gt;对循环变量i进行展开。由原来AddDot1x4变为AddDot4x4，一次计算16个乘积。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C */&lt;/span&gt; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* First row */&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) );&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* Second row */&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) );&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* Third row */&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) );&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* Four row */&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) );&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macro to let X( i ) equal the ith element of x */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; X(i) x[ (i)*incx ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *x, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; incx,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *y, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *gamma )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* compute gamma := x&amp;#x27; * y + gamma with vectors x and y of length n.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Here x starts at location x with increment (stride) incx and y starts at location y and has (implicit) stride of 1.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;  */&lt;/span&gt;&lt;br&gt; &lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    *gamma += &lt;span class=&#34;hljs-built_in&#34;&gt;X&lt;/span&gt;( p ) * y[ p ];     &lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;Optimization-4x4-4&#34;&gt;&lt;a href=&#34;#Optimization-4x4-4&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_4&#34;&gt;&lt;/a&gt;Optimization_4x4_4&lt;/h1&gt;&lt;p&gt;把AddDot计算kernel合并到AddDot4x4里面。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     In this version, we &amp;quot;inline&amp;quot; AddDot */&lt;/span&gt; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* First row 第一行*/&lt;/span&gt;   &lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 0 ), &amp;amp;C( 0, 0 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 1 ), &amp;amp;C( 0, 1 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 2 ), &amp;amp;C( 0, 2 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 3 ), &amp;amp;C( 0, 3 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* Second row 第二行*/&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 1, 0 ), lda, &amp;amp;B( 0, 0 ), &amp;amp;C( 1, 0 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 1, 0 ), lda, &amp;amp;B( 0, 1 ), &amp;amp;C( 1, 1 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 1, 0 ), lda, &amp;amp;B( 0, 2 ), &amp;amp;C( 1, 2 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 1, 0 ), lda, &amp;amp;B( 0, 3 ), &amp;amp;C( 1, 3 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* Third row 第三行*/&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 2, 0 ), lda, &amp;amp;B( 0, 0 ), &amp;amp;C( 2, 0 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 2, 0 ), lda, &amp;amp;B( 0, 1 ), &amp;amp;C( 2, 1 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 2, 0 ), lda, &amp;amp;B( 0, 2 ), &amp;amp;C( 2, 2 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 2, 0 ), lda, &amp;amp;B( 0, 3 ), &amp;amp;C( 2, 3 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* Four row 第四行*/&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 3, 0 ), lda, &amp;amp;B( 0, 0 ), &amp;amp;C( 3, 0 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 3, 0 ), lda, &amp;amp;B( 0, 1 ), &amp;amp;C( 3, 1 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 3, 0 ), lda, &amp;amp;B( 0, 2 ), &amp;amp;C( 3, 2 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 3, 0 ), lda, &amp;amp;B( 0, 3 ), &amp;amp;C( 3, 3 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;Optimization-4x4-5&#34;&gt;&lt;a href=&#34;#Optimization-4x4-5&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_5&#34;&gt;&lt;/a&gt;Optimization_4x4_5&lt;/h1&gt;&lt;p&gt;合并16个for循环。&lt;/p&gt;
&lt;p&gt;现在，当矩阵变大时，我们看到了性能上的好处，因为数据在被放入寄存器后会得到更多的重用。&lt;/p&gt;
&lt;p&gt;以前是：1x4_5(一次计算C的4个元素)现在是：4x4_5(一次计算C的16个元素)。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     In this version, we merge each set of four loops, computing four&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     inner products simultaneously. */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Second row */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Third row */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Fourth row */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;Optimization-4x4-6&#34;&gt;&lt;a href=&#34;#Optimization-4x4-6&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_6&#34;&gt;&lt;/a&gt;Optimization_4x4_6&lt;/h1&gt;&lt;p&gt;矩阵C和A采用寄存器来存。&lt;/p&gt;
&lt;p&gt;我们为C的4x4块和A的当前4x1列的元素使用(常规)寄存器，这一事实使性能受益。请注意，我们使用的是比实际存在的更多的常规寄存器，所以任何人都可以猜测编译器会用它做什么。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     In this version, we accumulate in registers and put A( 0, p ) in a register */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold contributions to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 )   */&lt;/span&gt;&lt;br&gt;       c_00_reg,   c_01_reg,   c_02_reg,   c_03_reg,  &lt;br&gt;       c_10_reg,   c_11_reg,   c_12_reg,   c_13_reg,  &lt;br&gt;       c_20_reg,   c_21_reg,   c_22_reg,   c_23_reg,  &lt;br&gt;       c_30_reg,   c_31_reg,   c_32_reg,   c_33_reg,&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 0, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 1, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 2, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 3, p ) */&lt;/span&gt;&lt;br&gt;       a_0p_reg,&lt;br&gt;       a_1p_reg,&lt;br&gt;       a_2p_reg,&lt;br&gt;       a_3p_reg;&lt;br&gt;&lt;br&gt;  c_00_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_01_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_02_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_03_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_10_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_11_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_12_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_13_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_20_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_21_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_22_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_23_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_30_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_31_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_32_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_33_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p );&lt;br&gt;    a_1p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p );&lt;br&gt;    a_2p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p );&lt;br&gt;    a_3p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p );&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row */&lt;/span&gt;&lt;br&gt;    c_00_reg += a_0p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;    c_01_reg += a_0p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;    c_02_reg += a_0p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;    c_03_reg += a_0p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Second row */&lt;/span&gt;&lt;br&gt;    c_10_reg += a_1p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;    c_11_reg += a_1p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;    c_12_reg += a_1p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;    c_13_reg += a_1p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Third row */&lt;/span&gt;&lt;br&gt;    c_20_reg += a_2p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;    c_21_reg += a_2p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;    c_22_reg += a_2p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;    c_23_reg += a_2p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Four row */&lt;/span&gt;&lt;br&gt;    c_30_reg += a_3p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;    c_31_reg += a_3p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;    c_32_reg += a_3p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;    c_33_reg += a_3p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_10_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_11_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_12_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_13_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_30_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_31_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_32_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_33_reg;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;Optimization-4x4-7&#34;&gt;&lt;a href=&#34;#Optimization-4x4-7&#34; class=&#34;headerlink&#34; title=&#34;Optimization_4x4_7&#34;&gt;&lt;/a&gt;Optimization_4x4_7&lt;/h1&gt;&lt;p&gt;这里我们改为使用指针来跟踪B的当前4x1块。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot4x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot4x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes a 4x4 block of matrix A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i  , j ), C( i  , j+1 ), C( i  , j+2 ), C( i  , j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+1, j ), C( i+1, j+1 ), C( i+1, j+2 ), C( i+1, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+2, j ), C( i+2, j+1 ), C( i+2, j+2 ), C( i+2, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i+3, j ), C( i+3, j+1 ), C( i+3, j+2 ), C( i+3, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     In this version, we use pointer to track where in four columns of B we are */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold contributions to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 1, 0 ), C( 1, 1 ), C( 1, 2 ), C( 1, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 2, 0 ), C( 2, 1 ), C( 2, 2 ), C( 2, 3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 3, 0 ), C( 3, 1 ), C( 3, 2 ), C( 3, 3 )   */&lt;/span&gt;&lt;br&gt;       c_00_reg,   c_01_reg,   c_02_reg,   c_03_reg,  &lt;br&gt;       c_10_reg,   c_11_reg,   c_12_reg,   c_13_reg,  &lt;br&gt;       c_20_reg,   c_21_reg,   c_22_reg,   c_23_reg,  &lt;br&gt;       c_30_reg,   c_31_reg,   c_32_reg,   c_33_reg,&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 0, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 1, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 2, p ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       A( 3, p ) */&lt;/span&gt;&lt;br&gt;       a_0p_reg,&lt;br&gt;       a_1p_reg,&lt;br&gt;       a_2p_reg,&lt;br&gt;       a_3p_reg;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Point to the current elements in the four columns of B */&lt;/span&gt;&lt;br&gt;    *b_p0_pntr, *b_p1_pntr, *b_p2_pntr, *b_p3_pntr; &lt;br&gt;&lt;br&gt;  c_00_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_01_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_02_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_03_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_10_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_11_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_12_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_13_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_20_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_21_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_22_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_23_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  c_30_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_31_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_32_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;   c_33_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p );&lt;br&gt;    a_1p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, p );&lt;br&gt;    a_2p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, p );&lt;br&gt;    a_3p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, p );&lt;br&gt;	  &lt;br&gt;    b_p0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;    b_p1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;    b_p2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;    b_p3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );	  &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* First row */&lt;/span&gt;&lt;br&gt;    c_00_reg += a_0p_reg * *b_p0_pntr;     &lt;br&gt;    c_01_reg += a_0p_reg * *b_p1_pntr;     &lt;br&gt;    c_02_reg += a_0p_reg * *b_p2_pntr;     &lt;br&gt;    c_03_reg += a_0p_reg * *b_p3_pntr;     &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Second row */&lt;/span&gt;&lt;br&gt;    c_10_reg += a_1p_reg * *b_p0_pntr;     &lt;br&gt;    c_11_reg += a_1p_reg * *b_p1_pntr;     &lt;br&gt;    c_12_reg += a_1p_reg * *b_p2_pntr;     &lt;br&gt;    c_13_reg += a_1p_reg * *b_p3_pntr;     &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Third row */&lt;/span&gt;&lt;br&gt;    c_20_reg += a_2p_reg * *b_p0_pntr;     &lt;br&gt;    c_21_reg += a_2p_reg * *b_p1_pntr;     &lt;br&gt;    c_22_reg += a_2p_reg * *b_p2_pntr;     &lt;br&gt;    c_23_reg += a_2p_reg * *b_p3_pntr;     &lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Four row */&lt;/span&gt;&lt;br&gt;    c_30_reg += a_3p_reg * *b_p0_pntr++;     &lt;br&gt;    c_31_reg += a_3p_reg * *b_p1_pntr++;     &lt;br&gt;    c_32_reg += a_3p_reg * *b_p2_pntr++;     &lt;br&gt;    c_33_reg += a_3p_reg * *b_p3_pntr++;     &lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_10_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_11_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_12_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_13_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_20_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_21_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_22_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_23_reg;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_30_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_31_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_32_reg;   &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_33_reg;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="blas" />
        <category term="gemm" />
        <category term="gemv" />
        <updated>2023-05-31T07:16:29.000Z</updated>
    </entry>
    <entry>
        <id>https://xingyuanjie.top/2023/05/26/gemm0003/</id>
        <title>Further optimizing</title>
        <link rel="alternate" href="https://xingyuanjie.top/2023/05/26/gemm0003/"/>
        <content type="html">&lt;h2 id=&#34;Further-optimizing&#34;&gt;&lt;a href=&#34;#Further-optimizing&#34; class=&#34;headerlink&#34; title=&#34;Further optimizing&#34;&gt;&lt;/a&gt;Further optimizing&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;我们将C的元素累加到寄存器中，并使用寄存器存储a的元素&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_1x4_6&#34;&gt;Optimization_1x4_6 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;我们使用指针来定位B中的元素&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_1x4_7&#34;&gt;Optimization_1x4_7 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;我们将循环展开4次(展开因子的选择相对任意)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_1x4_8&#34;&gt;Optimization_1x4_8 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;我们使用间接寻址来减少需要更新指针的次数&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_1x4_9&#34;&gt;Optimization_1x4_9 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于问题大小适合L2缓存(至少部分地)有相当大的改进。不过，还有很大的改进空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/05/26/gemm0003/compare_MMult0_MMult-1x4-9.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Optimization-1x4-6&#34;&gt;&lt;a href=&#34;#Optimization-1x4-6&#34; class=&#34;headerlink&#34; title=&#34;Optimization_1x4_6&#34;&gt;&lt;/a&gt;Optimization_1x4_6&lt;/h2&gt;&lt;p&gt;我们在寄存器中对当前1x4行C的更新累积，并将元素A(p, 0)放在寄存器中，以减少缓存(cache)和寄存器(reg)之间的流量(traffic)。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot1x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes four elements of C: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i, j ), C( i, j+1 ), C( i, j+2 ), C( i, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     In this version, we accumulate in registers and put A( 0, p ) in a register */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;    &lt;br&gt;    &lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//C的累加在寄存器中，同时A也放在寄存器中&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold contributions to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ) */&lt;/span&gt;&lt;br&gt;       c_00_reg,   c_01_reg,   c_02_reg,   c_03_reg,  &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* holds A( 0, p ) */&lt;/span&gt;&lt;br&gt;       a_0p_reg;&lt;br&gt;    &lt;br&gt;  c_00_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_01_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_02_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_03_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt; &lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p );&lt;br&gt;&lt;br&gt;    c_00_reg += a_0p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;    c_01_reg += a_0p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;    c_02_reg += a_0p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;    c_03_reg += a_0p_reg * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//计算完成后，再通过寄存器写回C&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_reg;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization-1x4-7&#34;&gt;&lt;a href=&#34;#Optimization-1x4-7&#34; class=&#34;headerlink&#34; title=&#34;Optimization_1x4_7&#34;&gt;&lt;/a&gt;Optimization_1x4_7&lt;/h2&gt;&lt;p&gt;现在使用bp0_pntr、bp1_pntr、bp2_pntr和bp3_pntr四个指针来访问元素B(p, 0)、B(p, 1)、B(p, 2)、B(p, 3)。这减少了索引开销。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot1x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes four elements of C: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i, j ), C( i, j+1 ), C( i, j+2 ), C( i, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     In this version, we use pointer to track where in four columns of B we are */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold contributions to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ) */&lt;/span&gt;&lt;br&gt;       c_00_reg,   c_01_reg,   c_02_reg,   c_03_reg,  &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* holds A( 0, p ) */&lt;/span&gt;&lt;br&gt;       a_0p_reg;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Point to the current elements in the four columns of B */&lt;/span&gt;&lt;br&gt;    *bp0_pntr, *bp1_pntr, *bp2_pntr, *bp3_pntr; &lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//由于使用了宏定义，每次B(i,j)都会计算B中元素的位置&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//使用指针后，后续访问不需要再额外计算B中元素位置，只需在当前指针向后移动一位即可&lt;/span&gt;&lt;br&gt;  bp0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;  bp1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;  bp2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;  bp3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  c_00_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_01_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_02_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_03_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt; &lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p );&lt;br&gt;&lt;br&gt;    c_00_reg += a_0p_reg * *bp0_pntr++;&lt;br&gt;    c_01_reg += a_0p_reg * *bp1_pntr++;&lt;br&gt;    c_02_reg += a_0p_reg * *bp2_pntr++;&lt;br&gt;    c_03_reg += a_0p_reg * *bp3_pntr++;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_reg;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization-1x4-8&#34;&gt;&lt;a href=&#34;#Optimization-1x4-8&#34; class=&#34;headerlink&#34; title=&#34;Optimization_1x4_8&#34;&gt;&lt;/a&gt;Optimization_1x4_8&lt;/h2&gt;&lt;p&gt;我们现在展开了4个循环。有趣的是，这会略微降低性能。这可能意味着，通过添加优化，我们混淆了编译器，因此它不能做以前做的优化。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot1x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes four elements of C: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i, j ), C( i, j+1 ), C( i, j+2 ), C( i, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     We now unroll the loop */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold contributions to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ) */&lt;/span&gt;&lt;br&gt;       c_00_reg,   c_01_reg,   c_02_reg,   c_03_reg,  &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* holds A( 0, p ) */&lt;/span&gt;&lt;br&gt;       a_0p_reg;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Point to the current elements in the four columns of B */&lt;/span&gt;&lt;br&gt;    *bp0_pntr, *bp1_pntr, *bp2_pntr, *bp3_pntr; &lt;br&gt;    &lt;br&gt;  bp0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;  bp1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;  bp2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;  bp3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  c_00_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_01_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_02_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_03_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//这里对循环变量p进行了展开，注意这里计算是顺序的&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p );&lt;br&gt;&lt;br&gt;    c_00_reg += a_0p_reg * *bp0_pntr++;&lt;br&gt;    c_01_reg += a_0p_reg * *bp1_pntr++;&lt;br&gt;    c_02_reg += a_0p_reg * *bp2_pntr++;&lt;br&gt;    c_03_reg += a_0p_reg * *bp3_pntr++;&lt;br&gt;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;&lt;br&gt;    c_00_reg += a_0p_reg * *bp0_pntr++;&lt;br&gt;    c_01_reg += a_0p_reg * *bp1_pntr++;&lt;br&gt;    c_02_reg += a_0p_reg * *bp2_pntr++;&lt;br&gt;    c_03_reg += a_0p_reg * *bp3_pntr++;&lt;br&gt;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;&lt;br&gt;    c_00_reg += a_0p_reg * *bp0_pntr++;&lt;br&gt;    c_01_reg += a_0p_reg * *bp1_pntr++;&lt;br&gt;    c_02_reg += a_0p_reg * *bp2_pntr++;&lt;br&gt;    c_03_reg += a_0p_reg * *bp3_pntr++;&lt;br&gt;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;    c_00_reg += a_0p_reg * *bp0_pntr++;&lt;br&gt;    c_01_reg += a_0p_reg * *bp1_pntr++;&lt;br&gt;    c_02_reg += a_0p_reg * *bp2_pntr++;&lt;br&gt;    c_03_reg += a_0p_reg * *bp3_pntr++;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_reg;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization-1x4-9&#34;&gt;&lt;a href=&#34;#Optimization-1x4-9&#34; class=&#34;headerlink&#34; title=&#34;Optimization_1x4_9&#34;&gt;&lt;/a&gt;Optimization_1x4_9&lt;/h2&gt;&lt;p&gt;在这里，*a0p_reg保存元素A(0, p+1)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;我们希望bp0_pntr指向元素B（p，0）。因此，bp0_pntr+1寻址元素B（p+1，0）。有一条特殊的机器指令可以访问bp0_pntr+1处的元素，该指令不需要更新指针。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;因此，指向B列中元素的指针只需要在循环的第四次迭代中更新一次。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot1x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes four elements of C: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i, j ), C( i, j+1 ), C( i, j+2 ), C( i, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     We next use indirect addressing */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* hold contributions to&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;       C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ) */&lt;/span&gt;&lt;br&gt;       c_00_reg,   c_01_reg,   c_02_reg,   c_03_reg,  &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* holds A( 0, p ) */&lt;/span&gt;&lt;br&gt;       a_0p_reg;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/* Point to the current elements in the four columns of B */&lt;/span&gt;&lt;br&gt;    *bp0_pntr, *bp1_pntr, *bp2_pntr, *bp3_pntr; &lt;br&gt;    &lt;br&gt;  bp0_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );&lt;br&gt;  bp1_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;  bp2_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;  bp3_pntr = &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;  c_00_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_01_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_02_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;; &lt;br&gt;  c_03_reg = &lt;span class=&#34;hljs-number&#34;&gt;0.0&lt;/span&gt;;&lt;br&gt; &lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p );&lt;br&gt;&lt;br&gt;    c_00_reg += a_0p_reg * *bp0_pntr;&lt;br&gt;    c_01_reg += a_0p_reg * *bp1_pntr;&lt;br&gt;    c_02_reg += a_0p_reg * *bp2_pntr;&lt;br&gt;    c_03_reg += a_0p_reg * *bp3_pntr;&lt;br&gt;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );&lt;br&gt;	&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//现在我们使用间接寻址，&amp;#x27;indirect addressing&amp;#x27;&lt;/span&gt;&lt;br&gt;    c_00_reg += a_0p_reg * *(bp0_pntr+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;    c_01_reg += a_0p_reg * *(bp1_pntr+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;    c_02_reg += a_0p_reg * *(bp2_pntr+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;    c_03_reg += a_0p_reg * *(bp3_pntr+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );&lt;br&gt;&lt;br&gt;    c_00_reg += a_0p_reg * *(bp0_pntr+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;    c_01_reg += a_0p_reg * *(bp1_pntr+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;    c_02_reg += a_0p_reg * *(bp2_pntr+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;    c_03_reg += a_0p_reg * *(bp3_pntr+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;&lt;br&gt;    a_0p_reg = &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );&lt;br&gt;&lt;br&gt;    c_00_reg += a_0p_reg * *(bp0_pntr+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;    c_01_reg += a_0p_reg * *(bp1_pntr+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;    c_02_reg += a_0p_reg * *(bp2_pntr+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;    c_03_reg += a_0p_reg * *(bp3_pntr+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;	&lt;br&gt;      &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//更新指针，4次迭代中仅更新一次&lt;/span&gt;&lt;br&gt;    bp0_pntr+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;    bp1_pntr+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;    bp2_pntr+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;    bp3_pntr+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += c_00_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += c_01_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += c_02_reg; &lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += c_03_reg;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="blas" />
        <category term="gemm" />
        <category term="gemv" />
        <updated>2023-05-26T09:20:18.000Z</updated>
    </entry>
    <entry>
        <id>https://xingyuanjie.top/2023/05/26/gemm0002/</id>
        <title>Computing four elements at a time</title>
        <link rel="alternate" href="https://xingyuanjie.top/2023/05/26/gemm0002/"/>
        <content type="html">&lt;h2 id=&#34;Computing-four-elements-at-a-time&#34;&gt;&lt;a href=&#34;#Computing-four-elements-at-a-time&#34; class=&#34;headerlink&#34; title=&#34;Computing four elements at a time&#34;&gt;&lt;/a&gt;Computing four elements at a time&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;我们在子程序AddDot1x4中一次计算4个元素，该子程序一次执行4个内部乘积&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_1x4_3&#34;&gt;Optimization_1x4_3 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;现在我们内联(inline)四个独立的内积，并将循环融合为一个，从而在一个循环中同时计算四个内积:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_1x4_4&#34;&gt;Optimization_1x4_4 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization_1x4_5&#34;&gt;Optimization_1x4_5 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这一点上，我们开始看到一些性能改进:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2023/05/26/gemm0002/compare_MMult0_MMult-1x4-5.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Optimization-1x4-3&#34;&gt;&lt;a href=&#34;#Optimization-1x4-3&#34; class=&#34;headerlink&#34; title=&#34;Optimization_1x4_3&#34;&gt;&lt;/a&gt;Optimization_1x4_3&lt;/h2&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;	  &lt;span class=&#34;hljs-comment&#34;&gt;//相交于上个版本，把4个AddDot合并成了一个AddDot1x4&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot1x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes four elements of C: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i, j ), C( i, j+1 ), C( i, j+2 ), C( i, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C */&lt;/span&gt; &lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//一次AddDot1x4完成四次AddDot运算&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) );&lt;br&gt;  &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) );&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macro to let X( i ) equal the ith element of x */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; X(i) x[ (i)*incx ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *x, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; incx,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *y, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *gamma )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* compute gamma := x&amp;#x27; * y + gamma with vectors x and y of length n.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Here x starts at location x with increment (stride) incx and y starts at location y and has (implicit) stride of 1.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;  */&lt;/span&gt;&lt;br&gt; &lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    *gamma += &lt;span class=&#34;hljs-built_in&#34;&gt;X&lt;/span&gt;( p ) * y[ p ];     &lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization-1x4-4&#34;&gt;&lt;a href=&#34;#Optimization-1x4-4&#34; class=&#34;headerlink&#34; title=&#34;Optimization_1x4_4&#34;&gt;&lt;/a&gt;Optimization_1x4_4&lt;/h2&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot1x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes four elements of C: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i, j ), C( i, j+1 ), C( i, j+2 ), C( i, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     In this version, we &amp;quot;inline&amp;quot; AddDot */&lt;/span&gt; &lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//在这里我们把AddDot中的运算，全部集成到了AddDot1x4中，即4段for执行4个内部乘积&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 0 ), &amp;amp;C( 0, 0 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 1 ), &amp;amp;C( 0, 1 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 2 ), &amp;amp;C( 0, 2 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 3 ), &amp;amp;C( 0, 3 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization-1x4-5&#34;&gt;&lt;a href=&#34;#Optimization-1x4-5&#34; class=&#34;headerlink&#34; title=&#34;Optimization_1x4_5&#34;&gt;&lt;/a&gt;Optimization_1x4_5&lt;/h2&gt;&lt;p&gt;在这个版本，我们开始看到性能上的好处。原因是四个循环已经融合，因此四个内部乘积运算现在正在同时进行。这有以下好处:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;索引p只需要每8次浮点操作更新一次(4次乘法4次加法)。&lt;/li&gt;
&lt;li&gt;元素A(0, p)只需要从内存中取出一次，而不是四次。(只有当矩阵不再适合二级缓存时，这才有好处)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ), C( i,j+1 ), C( i,j+2 ), and C( i,j+3 ) in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 one routine (four inner products) */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot1x4&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), ldb, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ), ldc );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot1x4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* So, this routine computes four elements of C: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( 0, 0 ), C( 0, 1 ), C( 0, 2 ), C( 0, 3 ).  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Notice that this routine is called with c = C( i, j ) in the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     previous routine, so these are actually the elements &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;           C( i, j ), C( i, j+1 ), C( i, j+2 ), C( i, j+3 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     in the original matrix C.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     In this version, we merge the four loops, computing four inner&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     products simultaneously. */&lt;/span&gt;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//在这个版本中，我们合并了4个for循环，使得可以同时计算4个乘积运算&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 0 ), &amp;amp;C( 0, 0 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 1 ), &amp;amp;C( 0, 1 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 2 ), &amp;amp;C( 0, 2 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//  AddDot( k, &amp;amp;A( 0, 0 ), lda, &amp;amp;B( 0, 3 ), &amp;amp;C( 0, 3 ) );&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; );     &lt;span class=&#34;hljs-comment&#34;&gt;//第一次取A( 0, p )&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; );     &lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) += &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; );     &lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="blas" />
        <category term="gemm" />
        <category term="gemv" />
        <updated>2023-05-26T08:37:45.000Z</updated>
    </entry>
    <entry>
        <id>https://xingyuanjie.top/2023/05/26/gemm0001/</id>
        <title>Hiding computation in a subroutine</title>
        <link rel="alternate" href="https://xingyuanjie.top/2023/05/26/gemm0001/"/>
        <content type="html">&lt;h2 id=&#34;Hiding-computation-in-a-subroutine&#34;&gt;&lt;a href=&#34;#Hiding-computation-in-a-subroutine&#34; class=&#34;headerlink&#34; title=&#34;Hiding computation in a subroutine&#34;&gt;&lt;/a&gt;Hiding computation in a subroutine&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;我们首先重写基本实现，将内部循环隐藏在子程序AddDot中:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization1&#34;&gt;Optimization1 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm/wiki/Optimization2&#34;&gt;Optimization2 · flame&amp;#x2F;how-to-optimize-gemm Wiki (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这一步不会产生任何性能提升：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/flame/how-to-optimize-gemm/raw/master/figures/compare_MMult0_MMult2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;它其实是为我们下一步做好准备。&lt;/p&gt;
&lt;h2 id=&#34;Optimization1&#34;&gt;&lt;a href=&#34;#Optimization1&#34; class=&#34;headerlink&#34; title=&#34;Optimization1&#34;&gt;&lt;/a&gt;Optimization1&lt;/h2&gt;&lt;p&gt;这里最原始的矩阵乘代码：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//创建宏，使矩阵是列主序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j, p;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//loop i j p&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i++ )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C 遍历C的行 */&lt;/span&gt;   &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j++ )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C 遍历C的列 */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Update C( i,j ) with the inner&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;				       product of the ith row of A and&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;				       the jth column of B */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//A的一行B的一列更新C(i,j)&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ) = &lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ) +  &lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,p ) * &lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( p,j );&lt;br&gt;      &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;拆分内部循环，把乘加运算放在子程序AddDot中:&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;	&lt;br&gt;   &lt;span class=&#34;hljs-comment&#34;&gt;//loop j i p   在这里更改了循环变量的顺序&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update the C( i,j ) with the inner product of the ith row of A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 and the jth column of B */&lt;/span&gt;&lt;br&gt;	  &lt;span class=&#34;hljs-comment&#34;&gt;//拆分内部循环(循环变量p)，把乘加运算放在子程序AddDot中:&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;//A的第i行，B的第j列&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ) );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macro to let X( i ) equal the ith element of x */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; X(i) x[ (i)*incx ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *x, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; incx,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *y, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *gamma )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* compute gamma := x&amp;#x27; * y + gamma with vectors x and y of length n.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Here x starts at location x with increment (stride) incx and y starts at location y and has (implicit) stride of 1.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;  */&lt;/span&gt;&lt;br&gt; &lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//列主序，同行访问带跨步，同列访问无需跨步。跨步大小lda&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    *gamma += &lt;span class=&#34;hljs-built_in&#34;&gt;X&lt;/span&gt;( p ) * y[ p ];     &lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Optimization2&#34;&gt;&lt;a href=&#34;#Optimization2&#34; class=&#34;headerlink&#34; title=&#34;Optimization2&#34;&gt;&lt;/a&gt;Optimization2&lt;/h2&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c++&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macros so that the matrices are stored in column-major order */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; A(i,j) a[ (j)*lda + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; B(i,j) b[ (j)*ldb + (i) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; C(i,j) c[ (j)*ldc + (i) ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Routine for computing C = A * B + C */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; * )&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MY_MMult&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *a, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; lda, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *b, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldb,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;                                    &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *c, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; ldc )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i, j;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;//在这里对C的列进行了循环展开，展开数为4。列主序&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( j=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; j&amp;lt;n; j+=&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the columns of C, unrolled by 4 */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i&amp;lt;m; i+=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; )&amp;#123;        &lt;span class=&#34;hljs-comment&#34;&gt;/* Loop over the rows of C */&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update the C( i,j ) with the inner product of the ith row of A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 and the jth column of B */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j ) );&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update the C( i,j+1 ) with the inner product of the ith row of A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 and the (j+1)th column of B */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j+&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; ) );&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update the C( i,j+2 ) with the inner product of the ith row of A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 and the (j+2)th column of B */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j+&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; ) );&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;/* Update the C( i,j+3 ) with the inner product of the ith row of A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	 and the (j+1)th column of B */&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&#34;hljs-built_in&#34;&gt;AddDot&lt;/span&gt;( k, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;A&lt;/span&gt;( i,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ), lda, &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;B&lt;/span&gt;( &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,j+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ), &amp;amp;&lt;span class=&#34;hljs-built_in&#34;&gt;C&lt;/span&gt;( i,j+&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; ) );&lt;br&gt;    &amp;#125;&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* Create macro to let X( i ) equal the ith element of x */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-meta-keyword&#34;&gt;define&lt;/span&gt; X(i) x[ (i)*incx ]&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//内层核心相较于上次来说，并没有修改&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AddDot&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *x, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; incx,  &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *y, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; *gamma )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;/* compute gamma := x&amp;#x27; * y + gamma with vectors x and y of length n.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     Here x starts at location x with increment (stride) incx and y starts at location y and has (implicit) stride of 1.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;  */&lt;/span&gt;&lt;br&gt; &lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; p;&lt;br&gt;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; ( p=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; p&amp;lt;k; p++ )&amp;#123;&lt;br&gt;    *gamma += &lt;span class=&#34;hljs-built_in&#34;&gt;X&lt;/span&gt;( p ) * y[ p ];     &lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="blas" />
        <category term="gemm" />
        <category term="gemv" />
        <updated>2023-05-26T07:06:49.000Z</updated>
    </entry>
    <entry>
        <id>https://xingyuanjie.top/2023/05/22/blas/</id>
        <title>BLAS（Basic Linear Algebra Subprograms）-基础线性代数子程序库</title>
        <link rel="alternate" href="https://xingyuanjie.top/2023/05/22/blas/"/>
        <content type="html">&lt;h2 id=&#34;how-to-optimize-gemm&#34;&gt;&lt;a href=&#34;#how-to-optimize-gemm&#34; class=&#34;headerlink&#34; title=&#34;how-to-optimize-gemm&#34;&gt;&lt;/a&gt;how-to-optimize-gemm&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;项目地址：&lt;/strong&gt;&lt;a href=&#34;https://github.com/flame/how-to-optimize-gemm&#34;&gt;flame&amp;#x2F;how-to-optimize-gemm (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Computing-four-elements-of-C-at-a-time&#34;&gt;&lt;a href=&#34;#Computing-four-elements-of-C-at-a-time&#34; class=&#34;headerlink&#34; title=&#34;Computing four elements of C at a time&#34;&gt;&lt;/a&gt;Computing four elements of C at a time&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2023/05/26/gemm0001/&#34;&gt;Hiding computation in a subroutine - Amicoyuan (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2023/05/26/gemm0002/&#34;&gt;Computing four elements at a time - Amicoyuan (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2023/05/26/gemm0003/&#34;&gt;Further optimizing - Amicoyuan (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Computing-a-4-x-4-block-of-C-at-a-time&#34;&gt;&lt;a href=&#34;#Computing-a-4-x-4-block-of-C-at-a-time&#34; class=&#34;headerlink&#34; title=&#34;Computing a 4 x 4 block of C at a time&#34;&gt;&lt;/a&gt;Computing a 4 x 4 block of C at a time&lt;/h3&gt;&lt;p&gt;为了有效地使用向量指令和向量寄存器，我们现在一次计算一个4 x 4的C代码块。其思想如下:作为SSE3指令集的一部分，有一些特殊的指令允许每个时钟周期执行两次“乘法累加”操作(两次乘法和两次加法)，每个时钟周期总共执行四个浮点操作。要使用这些，必须将数据放入“向量寄存器”中。有16个这样的向量寄存器，每个向量寄存器可以容纳两个双精度数。因此，我们可以在寄存器中保存32个双精度数。我们将使用其中的16个来保存C的元素，一个4 x 4的块。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2023/05/31/gemm0004/&#34;&gt;Repeating the same optimizations - Amicoyuan (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2023/06/07/gemm0005/&#34;&gt;Further optimizing - Amicoyuan (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2023/06/07/gemm0006/&#34;&gt;Blocking to maintain performance - Amicoyuan (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2023/06/07/gemm0007/&#34;&gt;Packing into contiguous memory - Amicoyuan (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Acknowledgement&#34;&gt;&lt;a href=&#34;#Acknowledgement&#34; class=&#34;headerlink&#34; title=&#34;Acknowledgement&#34;&gt;&lt;/a&gt;Acknowledgement&lt;/h3&gt;&lt;p&gt;This material was partially sponsored by grants from the National Science Foundation (Awards ACI-1148125&amp;#x2F;1340293).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Any opinions, findings and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation (NSF).&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;论文阅读&#34;&gt;&lt;a href=&#34;#论文阅读&#34; class=&#34;headerlink&#34; title=&#34;论文阅读&#34;&gt;&lt;/a&gt;论文阅读&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2023/06/09/gemm0008/&#34;&gt;论文阅读：面向国产申威 26010 众核处理器的 SpMV 实现与优化 - Amicoyuan (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xingyuanjie.top/2023/07/03/gemm0009/&#34;&gt;论文阅读：稀疏矩阵向量乘法在申威众核架构上的性能优化 - Amicoyuan (xingyuanjie.top)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;&lt;a href=&#34;#参考资料&#34; class=&#34;headerlink&#34; title=&#34;参考资料&#34;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;h3 id=&#34;博客&#34;&gt;&lt;a href=&#34;#博客&#34; class=&#34;headerlink&#34; title=&#34;博客:&#34;&gt;&lt;/a&gt;博客:&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/e01024892afb&#34;&gt;矩阵相乘在GPU上的终极优化：深度解析Maxas汇编器工作原理 - 简书 (jianshu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.leiphone.com/category/yanxishe/Puevv3ZWxn0heoEv.html&#34;&gt;OpenBLAS项目与矩阵乘法优化 | AI 研习社 | 雷峰网 (leiphone.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jcf94.com/2021/08/28/2021-08-28-simd/&#34;&gt;矩阵乘法与 SIMD | Chenfan Blog (jcf94.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhenhuaw.me/blog/2019/gemm-optimization.html&#34;&gt;通用矩阵乘（GEMM）优化算法 | 黎明灰烬 博客 (zhenhuaw.me)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/383115932&#34;&gt;大佬是怎么优雅实现矩阵乘法的？ - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/65436463&#34;&gt;OpenBLAS gemm从零入门 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://harleyszhang.github.io/cv_note/&#34;&gt;Introduction · cv算法工程师成长之路 (harleyszhang.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/435908830&#34;&gt;深入浅出GPU优化系列：GEMM优化（一） - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/410278370&#34;&gt;CUDA 矩阵乘法终极优化指南 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/368870275&#34;&gt;矩阵乘法的并行优化（1）：OPENMP、CUDA实现 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/617296073&#34;&gt;并行计算入门 UIUC ECE408 Lecture 7&amp;amp;8 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/143328317&#34;&gt;移动端arm cpu优化学习笔记第4弹–内联汇编入门 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/348372132&#34;&gt;C语言的内嵌汇编 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/105616727&#34;&gt;内嵌汇编学习 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/unbutun/article/details/6123472&#34;&gt;(88条消息) #define barrier() &lt;strong&gt;asm&lt;/strong&gt; &lt;strong&gt;volatile&lt;/strong&gt;(“”: : :”memory”) 中的memory是gcc的东西_unbutun的博客-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_38669561/article/details/105192200?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.control&#34;&gt;(88条消息) MIPS指令集：内嵌汇编asm语法介绍_daddu指令_无色云的博客-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;论文：&#34;&gt;&lt;a href=&#34;#论文：&#34; class=&#34;headerlink&#34; title=&#34;论文：&#34;&gt;&lt;/a&gt;论文：&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://www.cs.utexas.edu/users/flame/FLAMEPublications.html&#34;&gt;Publications Related to the FLAME Project (utexas.edu)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.1145/1356052.1356053&#34;&gt;Anatomy of high-performance matrix multiplication | ACM Transactions on Mathematical Software&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.1145/3018743.3018755&#34;&gt;Understanding the GPU Microarchitecture to Achieve Bare-Metal Performance Tuning | Proceedings of the 22nd ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[&lt;a href=&#34;https://arxiv.org/abs/1804.06826&#34;&gt;1804.06826] Dissecting the NVIDIA Volta GPU Architecture via Microbenchmarking (arxiv.org)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/document/6114452&#34;&gt;Fast implementation of DGEMM on Fermi GPU | IEEE Conference Publication | IEEE Xplore&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://dl.acm.org/doi/abs/10.1145/3369583.3393611&#34;&gt;High Performance is All about Minimizing Data Movement | Proceedings of the 29th International Symposium on High-Performance Parallel and Distributed Computing (acm.org)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;社区-x2F-论坛&#34;&gt;&lt;a href=&#34;#社区-x2F-论坛&#34; class=&#34;headerlink&#34; title=&#34;社区&amp;#x2F;论坛:&#34;&gt;&lt;/a&gt;社区&amp;#x2F;论坛:&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://tvm.d2l.ai/chapter_gpu_schedules/vector_add.html#cuda-programming&#34;&gt;2. Vector Add — Dive into Deep Learning Compiler 0.1 documentation (d2l.ai)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html&#34;&gt;Intel® Intrinsics Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/QNNPACK&#34;&gt;https://github.com/pytorch/QNNPACK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/flame/blis&#34;&gt;https://github.com/flame/blis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mathematik.uni-ulm.de/~lehn/apfel/ulmBLAS/&#34;&gt;ulmBLAS (index) (uni-ulm.de)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mathematik.uni-ulm.de/~lehn/apfel/sghpc/gemm/index.html&#34;&gt;work&amp;#x2F;sghpc (index) (uni-ulm.de)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://shpc.oden.utexas.edu/&#34;&gt;The Science of High-Performance Computing Group (utexas.edu)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/BBuf/how-to-optimize-gemm&#34;&gt;GitHub - BBuf&amp;#x2F;how-to-optimize-gemm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Liu-xiandong/How_to_optimize_in_GPU&#34;&gt;GitHub - Liu-xiandong&amp;#x2F;How_to_optimize_in_GPU: This is a series of GPU optimization topics. Here we will introduce how to optimize the CUDA kernel in detail. I will introduce several basic kernel optimizations, including: elementwise, reduce, sgemv, sgemm, etc. The performance of these kernels is basically at or near the theoretical limit.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.nvidia.com/cuda/cuda-c-programming-guide/#&#34;&gt;CUDA C++ Programming Guide (nvidia.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/NervanaSystems/maxas/wiki/SGEMM&#34;&gt;SGEMM · NervanaSystems&amp;#x2F;maxas Wiki · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Cjkkkk/CUDA_gemm&#34;&gt;GitHub - Cjkkkk&amp;#x2F;CUDA_gemm: A simple high performance CUDA GEMM implementation.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs&#34;&gt;GitHub - yzhaiustc&amp;#x2F;Optimizing-SGEMM-on-NVIDIA-Turing-GPUs: Optimizing SGEMM kernel functions on NVIDIA GPUs to a close-to-cuBLAS performance.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.nvidia.com/blog/cutlass-linear-algebra-cuda/&#34;&gt;https://developer.nvidia.com/blog/cutlass-linear-algebra-cuda/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.illinois.edu/wiki/display/ECE408/Class+Schedule&#34;&gt;Class Schedule - ECE408 - Illinois Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html#toc2&#34;&gt;GCC-Inline-Assembly-HOWTO (ibiblio.org)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://missing-semester-cn.github.io/&#34;&gt;计算机教育中缺失的一课 · the missing semester of your cs education (missing-semester-cn.github.io)&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="blas" />
        <category term="gemm" />
        <category term="gemv" />
        <updated>2023-05-22T12:35:17.000Z</updated>
    </entry>
</feed>
