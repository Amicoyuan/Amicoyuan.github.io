{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"stack\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/07/29/DS003/",
            "url": "http://example.com/2022/07/29/DS003/",
            "title": "栈应用题",
            "date_published": "2022-07-29T08:31:44.000Z",
            "content_html": "<h2 id=\"栈应用题\"><a href=\"#栈应用题\" class=\"headerlink\" title=\"栈应用题\"></a>栈应用题</h2><h3 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a>栈</h3><h4 id=\"1-顺序栈\"><a href=\"#1-顺序栈\" class=\"headerlink\" title=\"1.顺序栈\"></a>1.顺序栈</h4><h5 id=\"顺序栈的图像\"><a href=\"#顺序栈的图像\" class=\"headerlink\" title=\"顺序栈的图像\"></a>顺序栈的图像</h5><p><strong>特别注意：top指针的初值！</strong></p>\n<p><img src=\"/2022/07/29/DS003/image-20220729163738618.png\" alt=\"image-20220729163738618\"></p>\n<h5 id=\"栈的顺序存储类型描述\"><a href=\"#栈的顺序存储类型描述\" class=\"headerlink\" title=\"栈的顺序存储类型描述\"></a>栈的顺序存储类型描述</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> MaxSize 50\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//定义栈中元素的最大个数</span></span><br><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span>&#123;</span><br>    Elemtype data[MaxSize];\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//存放栈中元素</span><br>    <span class=\"hljs-keyword\">int</span> top;\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//栈顶指针</span><br>&#125;SqStack;<br></code></pre></div></td></tr></table></figure>\n\n<h5 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">InitStack</span><span class=\"hljs-params\">(SqStack &amp;S)</span></span>&#123;<br>\tS.top=<span class=\"hljs-number\">-1</span>                  \t\t\t\t\t\t<span class=\"hljs-comment\">//初始化栈顶指针</span><br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h5 id=\"判栈空\"><a href=\"#判栈空\" class=\"headerlink\" title=\"判栈空\"></a>判栈空</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">StackEmpty</span><span class=\"hljs-params\">(SqStack &amp;S)</span></span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(S.top == <span class=\"hljs-number\">-1</span>)\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//栈空</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\t\t\t\t<br>    <span class=\"hljs-keyword\">else</span>\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//不空</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h5 id=\"进栈\"><a href=\"#进栈\" class=\"headerlink\" title=\"进栈\"></a>进栈</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">Push</span><span class=\"hljs-params\">(SqStack &amp;S,Elemtype x)</span></span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(S.top == MaxSize<span class=\"hljs-number\">-1</span>)\t\t\t\t\t\t\t<span class=\"hljs-comment\">//栈满，报错</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">else</span><br>        S.data[++S.top]=x;\t\t\t\t\t\t\t<span class=\"hljs-comment\">//指针先加1，再入栈</span><br>    \t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h5 id=\"出栈\"><a href=\"#出栈\" class=\"headerlink\" title=\"出栈\"></a>出栈</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">Pop</span><span class=\"hljs-params\">(SqStack &amp;S,Elemtype &amp;x)</span></span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(S.top ==<span class=\"hljs-number\">-1</span>)\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//栈空，报错</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">else</span><br>        x=S.data[S.top--];\t\t\t\t\t\t\t<span class=\"hljs-comment\">//先入栈，指针再减1</span><br>    \t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h5 id=\"读栈顶元素\"><a href=\"#读栈顶元素\" class=\"headerlink\" title=\"读栈顶元素\"></a>读栈顶元素</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">GetTop</span><span class=\"hljs-params\">(SqStack &amp;S,Elemtype &amp;x)</span></span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(S.top == <span class=\"hljs-number\">-1</span>)\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//栈空，报错</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">else</span><br>        x = S.data[S.top];\t\t\t\t\t\t\t<span class=\"hljs-comment\">//x记录栈顶元素</span><br>    \t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<h4 id=\"2-共享栈\"><a href=\"#2-共享栈\" class=\"headerlink\" title=\"2.共享栈\"></a>2.共享栈</h4><p><strong>特别注意：top0指针和top1指针的初始化的问题！</strong></p>\n<p><img src=\"/2022/07/29/DS003/image-20220729165150586.png\" alt=\"image-20220729165150586\"></p>\n<h4 id=\"3-链栈\"><a href=\"#3-链栈\" class=\"headerlink\" title=\"3.链栈\"></a>3.链栈</h4><h5 id=\"链栈的图像\"><a href=\"#链栈的图像\" class=\"headerlink\" title=\"链栈的图像\"></a>链栈的图像</h5><p><strong>特别注意：此链栈不带头结点，且所有操作都是在表头进行！</strong></p>\n<p><img src=\"/2022/07/29/DS003/image-20220729165541592.png\" alt=\"image-20220729165541592\"></p>\n<h5 id=\"栈的链式存储类型描述\"><a href=\"#栈的链式存储类型描述\" class=\"headerlink\" title=\"栈的链式存储类型描述\"></a>栈的链式存储类型描述</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs c++\"><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Linknode</span>&#123;</span><br>    ElemType data;\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//数据域</span><br>    <span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Linknode</span> *<span class=\"hljs-title\">next</span>;</span>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//指针域</span><br>&#125;*LiStack;\t\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">//栈类型定义</span><br></code></pre></div></td></tr></table></figure>\n\n",
            "tags": [
                "Data Structure",
                "Stack"
            ]
        }
    ]
}