{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amicoyuan • All posts by \"贪心\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/04/15/Algorithm026/",
            "url": "http://example.com/2022/04/15/Algorithm026/",
            "title": "L2-003 月饼 (25 分)",
            "date_published": "2022-04-15T14:03:52.000Z",
            "content_html": "<h2 id=\"L2-003-月饼-25-分\"><a href=\"#L2-003-月饼-25-分\" class=\"headerlink\" title=\"L2-003 月饼 (25 分)\"></a>L2-003 月饼 (25 分)</h2><p>月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。</p>\n<p>注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有 3 种月饼，其库存量分别为 18、15、10 万吨，总售价分别为 75、72、45 亿元。如果市场的最大需求量只有 20 万吨，那么我们最大收益策略应该是卖出全部 15 万吨第 2 种月饼、以及 5 万吨第 3 种月饼，获得 72 + 45&#x2F;2 &#x3D; 94.5（亿元）。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>每个输入包含一个测试用例。每个测试用例先给出一个不超过 1000 的正整数 <em>N</em> 表示月饼的种类数、以及不超过 500（以万吨为单位）的正整数 <em>D</em> 表示市场最大需求量。随后一行给出 <em>N</em> 个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出 <em>N</em> 个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后 2 位。</p>\n<h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre class=\"line-numbers language-in\"><code class=\"language-in\">3 20\n18 15 10\n75 72 45\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre class=\"line-numbers language-out\"><code class=\"language-out\">94.50\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"程序源代码：\"><a href=\"#程序源代码：\" class=\"headerlink\" title=\"程序源代码：\"></a>程序源代码：</h3><p><strong>贪心 + Sort</strong></p>\n<pre class=\"line-numbers language-c++\"><code class=\"language-c++\">#include<bits/stdc++.h>\nusing namespace std;\nstruct mooncake&#123;\n    double pow;\n    double price;\n&#125;;\nbool cmp(mooncake a,mooncake b)&#123;\n    return a.price*1.0/a.pow>b.price*1.0/b.pow;\t\t\t\t//返回单价高的\n&#125;\nint main()\n&#123;\n    int n;\n    double d;\n    cin>>n>>d;\n    mooncake m[n];\n    for (int i = 0; i < n; ++i) &#123;\n        cin>>m[i].pow;\n    &#125;\n    for (int j = 0; j <n ; ++j) &#123;\n        cin>>m[j].price;\n    &#125;\n    sort(m,m+n,cmp);\n    double price=0.0;\n    double tmpd=d;\n    for (int k = 0; k <n ; ++k) &#123;\t\t\t\t\t\t//模拟求解\n        if(m[k].pow<=tmpd)&#123;\n            tmpd-=m[k].pow;\n            price+=m[k].price;\n        &#125;else if(m[k].pow>tmpd)&#123;\n            price+=tmpd*(m[k].price/m[k].pow);\n            break;\n        &#125;\n    &#125;\n    printf(\"%.2f\\n\",price);\n    return 0;\n&#125;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h3><p><a href=\"https://pintia.cn/problem-sets/994805046380707840/problems/994805071789801472\">题目详情 - L2-003 月饼 (25 分) (pintia.cn)</a></p>\n",
            "tags": [
                "C++",
                "团体程序设计天梯赛",
                "Sort",
                "结构体",
                "贪心"
            ]
        }
    ]
}