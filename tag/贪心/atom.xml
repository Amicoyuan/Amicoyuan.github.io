<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>Amicoyuan • Posts by &#34;贪心&#34; tag</title>
    <link href="http://example.com" />
    <updated>2022-04-15T14:03:52.000Z</updated>
    <category term="AVX" />
    <category term="Data Structure" />
    <category term="String" />
    <category term="Find" />
    <category term="STL" />
    <category term="C++" />
    <category term="Set" />
    <category term="团体程序设计天梯赛" />
    <category term="Sort" />
    <category term="LinkList" />
    <category term="双向链表" />
    <category term="Graph" />
    <category term="邻接表" />
    <category term="Vector" />
    <category term="Binary tree" />
    <category term="BFS" />
    <category term="模拟" />
    <category term="邻接矩阵" />
    <category term="DFS" />
    <category term="结构体" />
    <category term="贪心" />
    <category term="Double类型相等比较" />
    <category term="并查集" />
    <category term="Map" />
    <category term="Pair" />
    <category term="KMP" />
    <category term="线索二叉树" />
    <category term="Tree" />
    <category term="森林" />
    <category term="Linux" />
    <category term="MPI" />
    <category term="Numactl" />
    <category term="Slurm" />
    <category term="Tensorflow" />
    <category term="性能分析工具" />
    <category term="gcov" />
    <entry>
        <id>http://example.com/2022/04/15/Algorithm026/</id>
        <title>L2-003 月饼 (25 分)</title>
        <link rel="alternate" href="http://example.com/2022/04/15/Algorithm026/"/>
        <content type="html">&lt;h2 id=&#34;L2-003-月饼-25-分&#34;&gt;&lt;a href=&#34;#L2-003-月饼-25-分&#34; class=&#34;headerlink&#34; title=&#34;L2-003 月饼 (25 分)&#34;&gt;&lt;/a&gt;L2-003 月饼 (25 分)&lt;/h2&gt;&lt;p&gt;月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。&lt;/p&gt;
&lt;p&gt;注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有 3 种月饼，其库存量分别为 18、15、10 万吨，总售价分别为 75、72、45 亿元。如果市场的最大需求量只有 20 万吨，那么我们最大收益策略应该是卖出全部 15 万吨第 2 种月饼、以及 5 万吨第 3 种月饼，获得 72 + 45&amp;#x2F;2 &amp;#x3D; 94.5（亿元）。&lt;/p&gt;
&lt;h3 id=&#34;输入格式：&#34;&gt;&lt;a href=&#34;#输入格式：&#34; class=&#34;headerlink&#34; title=&#34;输入格式：&#34;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;每个输入包含一个测试用例。每个测试用例先给出一个不超过 1000 的正整数 &lt;em&gt;N&lt;/em&gt; 表示月饼的种类数、以及不超过 500（以万吨为单位）的正整数 &lt;em&gt;D&lt;/em&gt; 表示市场最大需求量。随后一行给出 &lt;em&gt;N&lt;/em&gt; 个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出 &lt;em&gt;N&lt;/em&gt; 个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。&lt;/p&gt;
&lt;h3 id=&#34;输出格式：&#34;&gt;&lt;a href=&#34;#输出格式：&#34; class=&#34;headerlink&#34; title=&#34;输出格式：&#34;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后 2 位。&lt;/p&gt;
&lt;h3 id=&#34;输入样例：&#34;&gt;&lt;a href=&#34;#输入样例：&#34; class=&#34;headerlink&#34; title=&#34;输入样例：&#34;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;in&#34;&gt;3 20
18 15 10
75 72 45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;输出样例：&#34;&gt;&lt;a href=&#34;#输出样例：&#34; class=&#34;headerlink&#34; title=&#34;输出样例：&#34;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;out&#34;&gt;94.50
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;程序源代码：&#34;&gt;&lt;a href=&#34;#程序源代码：&#34; class=&#34;headerlink&#34; title=&#34;程序源代码：&#34;&gt;&lt;/a&gt;程序源代码：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;贪心 + Sort&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;c++&#34;&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
using namespace std;
struct mooncake&amp;#123;
    double pow;
    double price;
&amp;#125;;
bool cmp(mooncake a,mooncake b)&amp;#123;
    return a.price*1.0/a.pow&amp;gt;b.price*1.0/b.pow;				//返回单价高的
&amp;#125;
int main()
&amp;#123;
    int n;
    double d;
    cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;d;
    mooncake m[n];
    for (int i = 0; i &amp;lt; n; ++i) &amp;#123;
        cin&amp;gt;&amp;gt;m[i].pow;
    &amp;#125;
    for (int j = 0; j &amp;lt;n ; ++j) &amp;#123;
        cin&amp;gt;&amp;gt;m[j].price;
    &amp;#125;
    sort(m,m+n,cmp);
    double price=0.0;
    double tmpd=d;
    for (int k = 0; k &amp;lt;n ; ++k) &amp;#123;						//模拟求解
        if(m[k].pow&amp;lt;=tmpd)&amp;#123;
            tmpd-=m[k].pow;
            price+=m[k].price;
        &amp;#125;else if(m[k].pow&amp;gt;tmpd)&amp;#123;
            price+=tmpd*(m[k].price/m[k].pow);
            break;
        &amp;#125;
    &amp;#125;
    printf(&amp;quot;%.2f\n&amp;quot;,price);
    return 0;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;参考资料：&#34;&gt;&lt;a href=&#34;#参考资料：&#34; class=&#34;headerlink&#34; title=&#34;参考资料：&#34;&gt;&lt;/a&gt;参考资料：&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://pintia.cn/problem-sets/994805046380707840/problems/994805071789801472&#34;&gt;题目详情 - L2-003 月饼 (25 分) (pintia.cn)&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="C++" />
        <category term="团体程序设计天梯赛" />
        <category term="Sort" />
        <category term="结构体" />
        <category term="贪心" />
        <updated>2022-04-15T14:03:52.000Z</updated>
    </entry>
</feed>
